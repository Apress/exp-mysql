/* A Bison parser, made by GNU Bison 2.1.  */

/* Skeleton parser for Yacc-like parsing with Bison,
   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, when this file is copied by Bison into a
   Bison output file, you may use that output file without restriction.
   This special exception was added by the Free Software Foundation
   in version 1.24 of Bison.  */

/* Written by Richard Stallman by simplifying the original so called
   ``semantic'' parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.1"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 0

#define yyparse MYSQLparse 
#define yylex   MYSQLlex 
#define yyerror MYSQLerror 
#define yylval  MYSQLlval 
#define yychar  MYSQLchar 
#define yydebug MYSQLdebug 
#define yynerrs MYSQLnerrs

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     END_OF_INPUT = 258,
     ABORT_SYM = 259,
     ACCESSIBLE_SYM = 260,
     ACTION = 261,
     ADD = 262,
     ADDDATE_SYM = 263,
     AFTER_SYM = 264,
     AGAINST = 265,
     AGGREGATE_SYM = 266,
     ALGORITHM_SYM = 267,
     ALL = 268,
     ALTER = 269,
     ANALYZE_SYM = 270,
     AND_AND_SYM = 271,
     AND_SYM = 272,
     ANY_SYM = 273,
     AS = 274,
     ASC = 275,
     ASCII_SYM = 276,
     ASENSITIVE_SYM = 277,
     AT_SYM = 278,
     ATAN = 279,
     AUTHORS_SYM = 280,
     AUTO_INC = 281,
     AUTOEXTEND_SIZE_SYM = 282,
     AVG_ROW_LENGTH = 283,
     AVG_SYM = 284,
     BACKUP_SYM = 285,
     BEFORE_SYM = 286,
     BEGIN_SYM = 287,
     BENCHMARK_SYM = 288,
     BERKELEY_DB_SYM = 289,
     BIGINT = 290,
     BINARY = 291,
     BINLOG_SYM = 292,
     BIN_NUM = 293,
     BIT_AND = 294,
     BIT_OR = 295,
     BIT_SYM = 296,
     BIT_XOR = 297,
     BLOB_SYM = 298,
     BOOLEAN_SYM = 299,
     BOOL_SYM = 300,
     BOTH = 301,
     BTREE_SYM = 302,
     BY = 303,
     BYTE_SYM = 304,
     CACHE_SYM = 305,
     CALL_SYM = 306,
     CASCADE = 307,
     CASCADED = 308,
     CAST_SYM = 309,
     CHAIN_SYM = 310,
     CHANGE = 311,
     CHANGED = 312,
     CHARSET = 313,
     CHAR_SYM = 314,
     CHECKSUM_SYM = 315,
     CHECK_SYM = 316,
     CIPHER_SYM = 317,
     CLIENT_SYM = 318,
     CLOSE_SYM = 319,
     COALESCE = 320,
     CODE_SYM = 321,
     COLLATE_SYM = 322,
     COLLATION_SYM = 323,
     COLUMNS = 324,
     COLUMN_SYM = 325,
     COMMENT_SYM = 326,
     COMMITTED_SYM = 327,
     COMMIT_SYM = 328,
     COMPACT_SYM = 329,
     COMPLETION_SYM = 330,
     COMPRESSED_SYM = 331,
     CONCAT = 332,
     CONCAT_WS = 333,
     CONCURRENT = 334,
     CONDITION_SYM = 335,
     CONNECTION_SYM = 336,
     CONSISTENT_SYM = 337,
     CONSTRAINT = 338,
     CONTAINS_SYM = 339,
     CONTINUE_SYM = 340,
     CONVERT_SYM = 341,
     CONVERT_TZ_SYM = 342,
     COUNT_SYM = 343,
     CREATE = 344,
     CROSS = 345,
     CUBE_SYM = 346,
     CURDATE = 347,
     CURRENT_USER = 348,
     CURSOR_SYM = 349,
     CURTIME = 350,
     DATABASE = 351,
     DATABASES = 352,
     DATAFILE_SYM = 353,
     DATA_SYM = 354,
     DATETIME = 355,
     DATE_ADD_INTERVAL = 356,
     DATE_SUB_INTERVAL = 357,
     DATE_SYM = 358,
     DAY_HOUR_SYM = 359,
     DAY_MICROSECOND_SYM = 360,
     DAY_MINUTE_SYM = 361,
     DAY_SECOND_SYM = 362,
     DAY_SYM = 363,
     DBXP_SYM = 364,
     DEALLOCATE_SYM = 365,
     DECIMAL_NUM = 366,
     DECIMAL_SYM = 367,
     DECLARE_SYM = 368,
     DECODE_SYM = 369,
     DEFAULT = 370,
     DEFINER_SYM = 371,
     DELAYED_SYM = 372,
     DELAY_KEY_WRITE_SYM = 373,
     DELETE_SYM = 374,
     DESC = 375,
     DESCRIBE = 376,
     DES_DECRYPT_SYM = 377,
     DES_ENCRYPT_SYM = 378,
     DES_KEY_FILE = 379,
     DETERMINISTIC_SYM = 380,
     DIRECTORY_SYM = 381,
     DISABLE_SYM = 382,
     DISCARD = 383,
     DISK_SYM = 384,
     DISK_USAGE_SYM = 385,
     DISTINCT = 386,
     DIV_SYM = 387,
     DOUBLE_SYM = 388,
     DO_SYM = 389,
     DROP = 390,
     DUAL_SYM = 391,
     DUMPFILE = 392,
     DUPLICATE_SYM = 393,
     DYNAMIC_SYM = 394,
     EACH_SYM = 395,
     ELSEIF_SYM = 396,
     ELT_FUNC = 397,
     ENABLE_SYM = 398,
     ENCLOSED = 399,
     ENCODE_SYM = 400,
     ENCRYPT = 401,
     END = 402,
     ENDS_SYM = 403,
     ENGINES_SYM = 404,
     ENGINE_SYM = 405,
     ENUM = 406,
     EQ = 407,
     EQUAL_SYM = 408,
     ERRORS = 409,
     ESCAPED = 410,
     ESCAPE_SYM = 411,
     EVENT_SYM = 412,
     EVENTS_SYM = 413,
     EVERY_SYM = 414,
     EXECUTE_SYM = 415,
     EXISTS = 416,
     EXIT_SYM = 417,
     EXPANSION_SYM = 418,
     EXPORT_SET = 419,
     EXTENDED_SYM = 420,
     EXTENT_SIZE_SYM = 421,
     EXTRACT_SYM = 422,
     FALSE_SYM = 423,
     FAST_SYM = 424,
     FETCH_SYM = 425,
     FIELD_FUNC = 426,
     FILE_SYM = 427,
     FIRST_SYM = 428,
     FIXED_SYM = 429,
     FLOAT_NUM = 430,
     FLOAT_SYM = 431,
     FLUSH_SYM = 432,
     FORCE_SYM = 433,
     FOREIGN = 434,
     FORMAT_SYM = 435,
     FOR_SYM = 436,
     FOUND_SYM = 437,
     FRAC_SECOND_SYM = 438,
     FROM = 439,
     FROM_UNIXTIME = 440,
     FULL = 441,
     FULLTEXT_SYM = 442,
     FUNCTION_SYM = 443,
     FUNC_ARG0 = 444,
     FUNC_ARG1 = 445,
     FUNC_ARG2 = 446,
     FUNC_ARG3 = 447,
     GE = 448,
     GEOMCOLLFROMTEXT = 449,
     GEOMETRYCOLLECTION = 450,
     GEOMETRY_SYM = 451,
     GEOMFROMTEXT = 452,
     GEOMFROMWKB = 453,
     GET_FORMAT = 454,
     GLOBAL_SYM = 455,
     GOTO_SYM = 456,
     GRANT = 457,
     GRANTS = 458,
     GREATEST_SYM = 459,
     GROUP = 460,
     GROUP_CONCAT_SYM = 461,
     GROUP_UNIQUE_USERS = 462,
     GT_SYM = 463,
     HANDLER_SYM = 464,
     HASH_SYM = 465,
     HAVING = 466,
     HELP_SYM = 467,
     HEX_NUM = 468,
     HIGH_PRIORITY = 469,
     HOSTS_SYM = 470,
     HOUR_MICROSECOND_SYM = 471,
     HOUR_MINUTE_SYM = 472,
     HOUR_SECOND_SYM = 473,
     HOUR_SYM = 474,
     IDENT = 475,
     IDENTIFIED_SYM = 476,
     IDENT_QUOTED = 477,
     IF = 478,
     IGNORE_SYM = 479,
     IMPORT = 480,
     INDEXES = 481,
     INDEX_SYM = 482,
     INFILE = 483,
     INITIAL_SIZE_SYM = 484,
     INNER_SYM = 485,
     INNOBASE_SYM = 486,
     INOUT_SYM = 487,
     INSENSITIVE_SYM = 488,
     INSERT = 489,
     INSERT_METHOD = 490,
     INSTALL_SYM = 491,
     INTERVAL_SYM = 492,
     INTO = 493,
     INT_SYM = 494,
     INVOKER_SYM = 495,
     IN_SYM = 496,
     IS = 497,
     ISOLATION = 498,
     ISSUER_SYM = 499,
     ITERATE_SYM = 500,
     JOIN_SYM = 501,
     KEYS = 502,
     KEY_SYM = 503,
     KILL_SYM = 504,
     LABEL_SYM = 505,
     LANGUAGE_SYM = 506,
     LAST_INSERT_ID = 507,
     LAST_SYM = 508,
     LE = 509,
     LEADING = 510,
     LEAST_SYM = 511,
     LEAVES = 512,
     LEAVE_SYM = 513,
     LEFT = 514,
     LESS_SYM = 515,
     LEVEL_SYM = 516,
     LEX_HOSTNAME = 517,
     LIKE = 518,
     LIMIT = 519,
     LINEAR_SYM = 520,
     LINEFROMTEXT = 521,
     LINES = 522,
     LINESTRING = 523,
     LIST_SYM = 524,
     LOAD = 525,
     LOCAL_SYM = 526,
     LOCATE = 527,
     LOCATOR_SYM = 528,
     LOCKS_SYM = 529,
     LOCK_SYM = 530,
     LOGFILE_SYM = 531,
     LOGS_SYM = 532,
     LOG_SYM = 533,
     LONGBLOB = 534,
     LONGTEXT = 535,
     LONG_NUM = 536,
     LONG_SYM = 537,
     LOOP_SYM = 538,
     LOW_PRIORITY = 539,
     LT = 540,
     MAKE_SET_SYM = 541,
     MASTER_CONNECT_RETRY_SYM = 542,
     MASTER_HOST_SYM = 543,
     MASTER_LOG_FILE_SYM = 544,
     MASTER_LOG_POS_SYM = 545,
     MASTER_PASSWORD_SYM = 546,
     MASTER_PORT_SYM = 547,
     MASTER_POS_WAIT = 548,
     MASTER_SERVER_ID_SYM = 549,
     MASTER_SSL_CAPATH_SYM = 550,
     MASTER_SSL_CA_SYM = 551,
     MASTER_SSL_CERT_SYM = 552,
     MASTER_SSL_CIPHER_SYM = 553,
     MASTER_SSL_KEY_SYM = 554,
     MASTER_SSL_SYM = 555,
     MASTER_SYM = 556,
     MASTER_USER_SYM = 557,
     MATCH = 558,
     MAX_CONNECTIONS_PER_HOUR = 559,
     MAX_QUERIES_PER_HOUR = 560,
     MAX_ROWS = 561,
     MAX_SIZE_SYM = 562,
     MAX_SYM = 563,
     MAX_UPDATES_PER_HOUR = 564,
     MAX_USER_CONNECTIONS_SYM = 565,
     MAX_VALUE_SYM = 566,
     MEDIUMBLOB = 567,
     MEDIUMINT = 568,
     MEDIUMTEXT = 569,
     MEDIUM_SYM = 570,
     MEMORY_SYM = 571,
     MERGE_SYM = 572,
     MICROSECOND_SYM = 573,
     MIGRATE_SYM = 574,
     MINUTE_MICROSECOND_SYM = 575,
     MINUTE_SECOND_SYM = 576,
     MINUTE_SYM = 577,
     MIN_ROWS = 578,
     MIN_SYM = 579,
     MLINEFROMTEXT = 580,
     MODE_SYM = 581,
     MODIFIES_SYM = 582,
     MODIFY_SYM = 583,
     MOD_SYM = 584,
     MONTH_SYM = 585,
     MPOINTFROMTEXT = 586,
     MPOLYFROMTEXT = 587,
     MULTILINESTRING = 588,
     MULTIPOINT = 589,
     MULTIPOLYGON = 590,
     MUTEX_SYM = 591,
     NAMES_SYM = 592,
     NAME_SYM = 593,
     NATIONAL_SYM = 594,
     NATURAL = 595,
     NCHAR_STRING = 596,
     NCHAR_SYM = 597,
     NDBCLUSTER_SYM = 598,
     NE = 599,
     NEW_SYM = 600,
     NEXT_SYM = 601,
     NODEGROUP_SYM = 602,
     NONE_SYM = 603,
     NOT2_SYM = 604,
     NOT_SYM = 605,
     NOW_SYM = 606,
     NO_SYM = 607,
     NO_WAIT_SYM = 608,
     NO_WRITE_TO_BINLOG = 609,
     NULL_SYM = 610,
     NUM = 611,
     NUMERIC_SYM = 612,
     NVARCHAR_SYM = 613,
     OFFSET_SYM = 614,
     OLD_PASSWORD = 615,
     ON = 616,
     ONE_SHOT_SYM = 617,
     ONE_SYM = 618,
     OPEN_SYM = 619,
     OPTIMIZE = 620,
     OPTION = 621,
     OPTIONALLY = 622,
     OR2_SYM = 623,
     ORDER_SYM = 624,
     OR_OR_SYM = 625,
     OR_SYM = 626,
     OUTER = 627,
     OUTFILE = 628,
     OUT_SYM = 629,
     PACK_KEYS_SYM = 630,
     PARSER_SYM = 631,
     PARTIAL = 632,
     PARTITION_SYM = 633,
     PARTITIONING_SYM = 634,
     PARTITIONS_SYM = 635,
     PASSWORD = 636,
     PARAM_MARKER = 637,
     PHASE_SYM = 638,
     PLUGIN_SYM = 639,
     PLUGINS_SYM = 640,
     POINTFROMTEXT = 641,
     POINT_SYM = 642,
     POLYFROMTEXT = 643,
     POLYGON = 644,
     POSITION_SYM = 645,
     PRECISION = 646,
     PREPARE_SYM = 647,
     PRESERVE_SYM = 648,
     PREV_SYM = 649,
     PRIMARY_SYM = 650,
     PRIVILEGES = 651,
     PROCEDURE = 652,
     PROCESS = 653,
     PROCESSLIST_SYM = 654,
     PURGE = 655,
     QUARTER_SYM = 656,
     QUERY_SYM = 657,
     QUICK = 658,
     RAND = 659,
     RANGE_SYM = 660,
     READS_SYM = 661,
     READ_ONLY_SYM = 662,
     READ_SYM = 663,
     READ_WRITE_SYM = 664,
     REAL = 665,
     REBUILD_SYM = 666,
     RECOVER_SYM = 667,
     REDO_BUFFER_SIZE_SYM = 668,
     REDOFILE_SYM = 669,
     REDUNDANT_SYM = 670,
     REFERENCES = 671,
     REGEXP = 672,
     RELAY_LOG_FILE_SYM = 673,
     RELAY_LOG_POS_SYM = 674,
     RELAY_THREAD = 675,
     RELEASE_SYM = 676,
     RELOAD = 677,
     REMOVE_SYM = 678,
     RENAME = 679,
     REORGANIZE_SYM = 680,
     REPAIR = 681,
     REPEATABLE_SYM = 682,
     REPEAT_SYM = 683,
     REPLACE = 684,
     REPLICATION = 685,
     REQUIRE_SYM = 686,
     RESET_SYM = 687,
     RESOURCES = 688,
     RESTORE_SYM = 689,
     RESTRICT = 690,
     RESUME_SYM = 691,
     RETURNS_SYM = 692,
     RETURN_SYM = 693,
     REVOKE = 694,
     RIGHT = 695,
     ROLLBACK_SYM = 696,
     ROLLUP_SYM = 697,
     ROUND = 698,
     ROUTINE_SYM = 699,
     ROWS_SYM = 700,
     ROW_COUNT_SYM = 701,
     ROW_FORMAT_SYM = 702,
     ROW_SYM = 703,
     RTREE_SYM = 704,
     SAVEPOINT_SYM = 705,
     SCHEDULE_SYM = 706,
     SECOND_MICROSECOND_SYM = 707,
     SECOND_SYM = 708,
     SECURITY_SYM = 709,
     SELECT_SYM = 710,
     SENSITIVE_SYM = 711,
     SEPARATOR_SYM = 712,
     SERIALIZABLE_SYM = 713,
     SERIAL_SYM = 714,
     SESSION_SYM = 715,
     SET = 716,
     SET_VAR = 717,
     SHARE_SYM = 718,
     SHIFT_LEFT = 719,
     SHIFT_RIGHT = 720,
     SHOW = 721,
     SHUTDOWN = 722,
     SIGNED_SYM = 723,
     SIMPLE_SYM = 724,
     SLAVE = 725,
     SMALLINT = 726,
     SNAPSHOT_SYM = 727,
     SONAME_SYM = 728,
     SOUNDS_SYM = 729,
     SPATIAL_SYM = 730,
     SPECIFIC_SYM = 731,
     SQLEXCEPTION_SYM = 732,
     SQLSTATE_SYM = 733,
     SQLWARNING_SYM = 734,
     SQL_BIG_RESULT = 735,
     SQL_BUFFER_RESULT = 736,
     SQL_CACHE_SYM = 737,
     SQL_CALC_FOUND_ROWS = 738,
     SQL_NO_CACHE_SYM = 739,
     SQL_SMALL_RESULT = 740,
     SQL_SYM = 741,
     SQL_THREAD = 742,
     SSL_SYM = 743,
     STARTING = 744,
     START_SYM = 745,
     STARTS_SYM = 746,
     STATUS_SYM = 747,
     STD_SYM = 748,
     STDDEV_SAMP_SYM = 749,
     STOP_SYM = 750,
     STORAGE_SYM = 751,
     STRAIGHT_JOIN = 752,
     STRING_SYM = 753,
     SUBDATE_SYM = 754,
     SUBJECT_SYM = 755,
     SUBPARTITION_SYM = 756,
     SUBPARTITIONS_SYM = 757,
     SUBSTRING = 758,
     SUBSTRING_INDEX = 759,
     SUM_SYM = 760,
     SUPER_SYM = 761,
     SUSPEND_SYM = 762,
     SYSDATE = 763,
     TABLES = 764,
     TABLESPACE = 765,
     TABLE_SYM = 766,
     TEMPORARY = 767,
     TEMPTABLE_SYM = 768,
     TERMINATED = 769,
     TEXT_STRING = 770,
     TEXT_SYM = 771,
     TIMESTAMP = 772,
     TIMESTAMP_ADD = 773,
     TIMESTAMP_DIFF = 774,
     TIME_SYM = 775,
     TINYBLOB = 776,
     TINYINT = 777,
     TINYTEXT = 778,
     THAN_SYM = 779,
     TO_SYM = 780,
     TRAILING = 781,
     TRANSACTION_SYM = 782,
     TRIGGER_SYM = 783,
     TRIGGERS_SYM = 784,
     TRIM = 785,
     TRUE_SYM = 786,
     TRUNCATE_SYM = 787,
     TYPES_SYM = 788,
     TYPE_SYM = 789,
     UDF_RETURNS_SYM = 790,
     ULONGLONG_NUM = 791,
     UNCOMMITTED_SYM = 792,
     UNDEFINED_SYM = 793,
     UNDO_BUFFER_SIZE_SYM = 794,
     UNDOFILE_SYM = 795,
     UNDERSCORE_CHARSET = 796,
     UNDO_SYM = 797,
     UNICODE_SYM = 798,
     UNINSTALL_SYM = 799,
     UNION_SYM = 800,
     UNIQUE_SYM = 801,
     UNIQUE_USERS = 802,
     UNIX_TIMESTAMP = 803,
     UNKNOWN_SYM = 804,
     UNLOCK_SYM = 805,
     UNSIGNED = 806,
     UNTIL_SYM = 807,
     UPDATE_SYM = 808,
     UPGRADE_SYM = 809,
     USAGE = 810,
     USER = 811,
     USE_FRM = 812,
     USE_SYM = 813,
     USING = 814,
     UTC_DATE_SYM = 815,
     UTC_TIMESTAMP_SYM = 816,
     UTC_TIME_SYM = 817,
     VAR_SAMP_SYM = 818,
     VALUES = 819,
     VALUE_SYM = 820,
     VARBINARY = 821,
     VARCHAR = 822,
     VARIABLES = 823,
     VARIANCE_SYM = 824,
     VARYING = 825,
     VIEW_SYM = 826,
     WAIT_SYM = 827,
     WARNINGS = 828,
     WEEK_SYM = 829,
     WHEN_SYM = 830,
     WHERE = 831,
     WHILE_SYM = 832,
     WITH = 833,
     WORK_SYM = 834,
     WRITE_SYM = 835,
     X509_SYM = 836,
     XA_SYM = 837,
     XOR = 838,
     YEARWEEK = 839,
     YEAR_MONTH_SYM = 840,
     YEAR_SYM = 841,
     ZEROFILL = 842,
     TABLE_REF_PRIORITY = 843,
     ELSE = 844,
     THEN_SYM = 845,
     CASE_SYM = 846,
     BETWEEN_SYM = 847,
     NEG = 848
   };
#endif
/* Tokens.  */
#define END_OF_INPUT 258
#define ABORT_SYM 259
#define ACCESSIBLE_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ANALYZE_SYM 270
#define AND_AND_SYM 271
#define AND_SYM 272
#define ANY_SYM 273
#define AS 274
#define ASC 275
#define ASCII_SYM 276
#define ASENSITIVE_SYM 277
#define AT_SYM 278
#define ATAN 279
#define AUTHORS_SYM 280
#define AUTO_INC 281
#define AUTOEXTEND_SIZE_SYM 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BENCHMARK_SYM 288
#define BERKELEY_DB_SYM 289
#define BIGINT 290
#define BINARY 291
#define BINLOG_SYM 292
#define BIN_NUM 293
#define BIT_AND 294
#define BIT_OR 295
#define BIT_SYM 296
#define BIT_XOR 297
#define BLOB_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CAST_SYM 309
#define CHAIN_SYM 310
#define CHANGE 311
#define CHANGED 312
#define CHARSET 313
#define CHAR_SYM 314
#define CHECKSUM_SYM 315
#define CHECK_SYM 316
#define CIPHER_SYM 317
#define CLIENT_SYM 318
#define CLOSE_SYM 319
#define COALESCE 320
#define CODE_SYM 321
#define COLLATE_SYM 322
#define COLLATION_SYM 323
#define COLUMNS 324
#define COLUMN_SYM 325
#define COMMENT_SYM 326
#define COMMITTED_SYM 327
#define COMMIT_SYM 328
#define COMPACT_SYM 329
#define COMPLETION_SYM 330
#define COMPRESSED_SYM 331
#define CONCAT 332
#define CONCAT_WS 333
#define CONCURRENT 334
#define CONDITION_SYM 335
#define CONNECTION_SYM 336
#define CONSISTENT_SYM 337
#define CONSTRAINT 338
#define CONTAINS_SYM 339
#define CONTINUE_SYM 340
#define CONVERT_SYM 341
#define CONVERT_TZ_SYM 342
#define COUNT_SYM 343
#define CREATE 344
#define CROSS 345
#define CUBE_SYM 346
#define CURDATE 347
#define CURRENT_USER 348
#define CURSOR_SYM 349
#define CURTIME 350
#define DATABASE 351
#define DATABASES 352
#define DATAFILE_SYM 353
#define DATA_SYM 354
#define DATETIME 355
#define DATE_ADD_INTERVAL 356
#define DATE_SUB_INTERVAL 357
#define DATE_SYM 358
#define DAY_HOUR_SYM 359
#define DAY_MICROSECOND_SYM 360
#define DAY_MINUTE_SYM 361
#define DAY_SECOND_SYM 362
#define DAY_SYM 363
#define DBXP_SYM 364
#define DEALLOCATE_SYM 365
#define DECIMAL_NUM 366
#define DECIMAL_SYM 367
#define DECLARE_SYM 368
#define DECODE_SYM 369
#define DEFAULT 370
#define DEFINER_SYM 371
#define DELAYED_SYM 372
#define DELAY_KEY_WRITE_SYM 373
#define DELETE_SYM 374
#define DESC 375
#define DESCRIBE 376
#define DES_DECRYPT_SYM 377
#define DES_ENCRYPT_SYM 378
#define DES_KEY_FILE 379
#define DETERMINISTIC_SYM 380
#define DIRECTORY_SYM 381
#define DISABLE_SYM 382
#define DISCARD 383
#define DISK_SYM 384
#define DISK_USAGE_SYM 385
#define DISTINCT 386
#define DIV_SYM 387
#define DOUBLE_SYM 388
#define DO_SYM 389
#define DROP 390
#define DUAL_SYM 391
#define DUMPFILE 392
#define DUPLICATE_SYM 393
#define DYNAMIC_SYM 394
#define EACH_SYM 395
#define ELSEIF_SYM 396
#define ELT_FUNC 397
#define ENABLE_SYM 398
#define ENCLOSED 399
#define ENCODE_SYM 400
#define ENCRYPT 401
#define END 402
#define ENDS_SYM 403
#define ENGINES_SYM 404
#define ENGINE_SYM 405
#define ENUM 406
#define EQ 407
#define EQUAL_SYM 408
#define ERRORS 409
#define ESCAPED 410
#define ESCAPE_SYM 411
#define EVENT_SYM 412
#define EVENTS_SYM 413
#define EVERY_SYM 414
#define EXECUTE_SYM 415
#define EXISTS 416
#define EXIT_SYM 417
#define EXPANSION_SYM 418
#define EXPORT_SET 419
#define EXTENDED_SYM 420
#define EXTENT_SIZE_SYM 421
#define EXTRACT_SYM 422
#define FALSE_SYM 423
#define FAST_SYM 424
#define FETCH_SYM 425
#define FIELD_FUNC 426
#define FILE_SYM 427
#define FIRST_SYM 428
#define FIXED_SYM 429
#define FLOAT_NUM 430
#define FLOAT_SYM 431
#define FLUSH_SYM 432
#define FORCE_SYM 433
#define FOREIGN 434
#define FORMAT_SYM 435
#define FOR_SYM 436
#define FOUND_SYM 437
#define FRAC_SECOND_SYM 438
#define FROM 439
#define FROM_UNIXTIME 440
#define FULL 441
#define FULLTEXT_SYM 442
#define FUNCTION_SYM 443
#define FUNC_ARG0 444
#define FUNC_ARG1 445
#define FUNC_ARG2 446
#define FUNC_ARG3 447
#define GE 448
#define GEOMCOLLFROMTEXT 449
#define GEOMETRYCOLLECTION 450
#define GEOMETRY_SYM 451
#define GEOMFROMTEXT 452
#define GEOMFROMWKB 453
#define GET_FORMAT 454
#define GLOBAL_SYM 455
#define GOTO_SYM 456
#define GRANT 457
#define GRANTS 458
#define GREATEST_SYM 459
#define GROUP 460
#define GROUP_CONCAT_SYM 461
#define GROUP_UNIQUE_USERS 462
#define GT_SYM 463
#define HANDLER_SYM 464
#define HASH_SYM 465
#define HAVING 466
#define HELP_SYM 467
#define HEX_NUM 468
#define HIGH_PRIORITY 469
#define HOSTS_SYM 470
#define HOUR_MICROSECOND_SYM 471
#define HOUR_MINUTE_SYM 472
#define HOUR_SECOND_SYM 473
#define HOUR_SYM 474
#define IDENT 475
#define IDENTIFIED_SYM 476
#define IDENT_QUOTED 477
#define IF 478
#define IGNORE_SYM 479
#define IMPORT 480
#define INDEXES 481
#define INDEX_SYM 482
#define INFILE 483
#define INITIAL_SIZE_SYM 484
#define INNER_SYM 485
#define INNOBASE_SYM 486
#define INOUT_SYM 487
#define INSENSITIVE_SYM 488
#define INSERT 489
#define INSERT_METHOD 490
#define INSTALL_SYM 491
#define INTERVAL_SYM 492
#define INTO 493
#define INT_SYM 494
#define INVOKER_SYM 495
#define IN_SYM 496
#define IS 497
#define ISOLATION 498
#define ISSUER_SYM 499
#define ITERATE_SYM 500
#define JOIN_SYM 501
#define KEYS 502
#define KEY_SYM 503
#define KILL_SYM 504
#define LABEL_SYM 505
#define LANGUAGE_SYM 506
#define LAST_INSERT_ID 507
#define LAST_SYM 508
#define LE 509
#define LEADING 510
#define LEAST_SYM 511
#define LEAVES 512
#define LEAVE_SYM 513
#define LEFT 514
#define LESS_SYM 515
#define LEVEL_SYM 516
#define LEX_HOSTNAME 517
#define LIKE 518
#define LIMIT 519
#define LINEAR_SYM 520
#define LINEFROMTEXT 521
#define LINES 522
#define LINESTRING 523
#define LIST_SYM 524
#define LOAD 525
#define LOCAL_SYM 526
#define LOCATE 527
#define LOCATOR_SYM 528
#define LOCKS_SYM 529
#define LOCK_SYM 530
#define LOGFILE_SYM 531
#define LOGS_SYM 532
#define LOG_SYM 533
#define LONGBLOB 534
#define LONGTEXT 535
#define LONG_NUM 536
#define LONG_SYM 537
#define LOOP_SYM 538
#define LOW_PRIORITY 539
#define LT 540
#define MAKE_SET_SYM 541
#define MASTER_CONNECT_RETRY_SYM 542
#define MASTER_HOST_SYM 543
#define MASTER_LOG_FILE_SYM 544
#define MASTER_LOG_POS_SYM 545
#define MASTER_PASSWORD_SYM 546
#define MASTER_PORT_SYM 547
#define MASTER_POS_WAIT 548
#define MASTER_SERVER_ID_SYM 549
#define MASTER_SSL_CAPATH_SYM 550
#define MASTER_SSL_CA_SYM 551
#define MASTER_SSL_CERT_SYM 552
#define MASTER_SSL_CIPHER_SYM 553
#define MASTER_SSL_KEY_SYM 554
#define MASTER_SSL_SYM 555
#define MASTER_SYM 556
#define MASTER_USER_SYM 557
#define MATCH 558
#define MAX_CONNECTIONS_PER_HOUR 559
#define MAX_QUERIES_PER_HOUR 560
#define MAX_ROWS 561
#define MAX_SIZE_SYM 562
#define MAX_SYM 563
#define MAX_UPDATES_PER_HOUR 564
#define MAX_USER_CONNECTIONS_SYM 565
#define MAX_VALUE_SYM 566
#define MEDIUMBLOB 567
#define MEDIUMINT 568
#define MEDIUMTEXT 569
#define MEDIUM_SYM 570
#define MEMORY_SYM 571
#define MERGE_SYM 572
#define MICROSECOND_SYM 573
#define MIGRATE_SYM 574
#define MINUTE_MICROSECOND_SYM 575
#define MINUTE_SECOND_SYM 576
#define MINUTE_SYM 577
#define MIN_ROWS 578
#define MIN_SYM 579
#define MLINEFROMTEXT 580
#define MODE_SYM 581
#define MODIFIES_SYM 582
#define MODIFY_SYM 583
#define MOD_SYM 584
#define MONTH_SYM 585
#define MPOINTFROMTEXT 586
#define MPOLYFROMTEXT 587
#define MULTILINESTRING 588
#define MULTIPOINT 589
#define MULTIPOLYGON 590
#define MUTEX_SYM 591
#define NAMES_SYM 592
#define NAME_SYM 593
#define NATIONAL_SYM 594
#define NATURAL 595
#define NCHAR_STRING 596
#define NCHAR_SYM 597
#define NDBCLUSTER_SYM 598
#define NE 599
#define NEW_SYM 600
#define NEXT_SYM 601
#define NODEGROUP_SYM 602
#define NONE_SYM 603
#define NOT2_SYM 604
#define NOT_SYM 605
#define NOW_SYM 606
#define NO_SYM 607
#define NO_WAIT_SYM 608
#define NO_WRITE_TO_BINLOG 609
#define NULL_SYM 610
#define NUM 611
#define NUMERIC_SYM 612
#define NVARCHAR_SYM 613
#define OFFSET_SYM 614
#define OLD_PASSWORD 615
#define ON 616
#define ONE_SHOT_SYM 617
#define ONE_SYM 618
#define OPEN_SYM 619
#define OPTIMIZE 620
#define OPTION 621
#define OPTIONALLY 622
#define OR2_SYM 623
#define ORDER_SYM 624
#define OR_OR_SYM 625
#define OR_SYM 626
#define OUTER 627
#define OUTFILE 628
#define OUT_SYM 629
#define PACK_KEYS_SYM 630
#define PARSER_SYM 631
#define PARTIAL 632
#define PARTITION_SYM 633
#define PARTITIONING_SYM 634
#define PARTITIONS_SYM 635
#define PASSWORD 636
#define PARAM_MARKER 637
#define PHASE_SYM 638
#define PLUGIN_SYM 639
#define PLUGINS_SYM 640
#define POINTFROMTEXT 641
#define POINT_SYM 642
#define POLYFROMTEXT 643
#define POLYGON 644
#define POSITION_SYM 645
#define PRECISION 646
#define PREPARE_SYM 647
#define PRESERVE_SYM 648
#define PREV_SYM 649
#define PRIMARY_SYM 650
#define PRIVILEGES 651
#define PROCEDURE 652
#define PROCESS 653
#define PROCESSLIST_SYM 654
#define PURGE 655
#define QUARTER_SYM 656
#define QUERY_SYM 657
#define QUICK 658
#define RAND 659
#define RANGE_SYM 660
#define READS_SYM 661
#define READ_ONLY_SYM 662
#define READ_SYM 663
#define READ_WRITE_SYM 664
#define REAL 665
#define REBUILD_SYM 666
#define RECOVER_SYM 667
#define REDO_BUFFER_SIZE_SYM 668
#define REDOFILE_SYM 669
#define REDUNDANT_SYM 670
#define REFERENCES 671
#define REGEXP 672
#define RELAY_LOG_FILE_SYM 673
#define RELAY_LOG_POS_SYM 674
#define RELAY_THREAD 675
#define RELEASE_SYM 676
#define RELOAD 677
#define REMOVE_SYM 678
#define RENAME 679
#define REORGANIZE_SYM 680
#define REPAIR 681
#define REPEATABLE_SYM 682
#define REPEAT_SYM 683
#define REPLACE 684
#define REPLICATION 685
#define REQUIRE_SYM 686
#define RESET_SYM 687
#define RESOURCES 688
#define RESTORE_SYM 689
#define RESTRICT 690
#define RESUME_SYM 691
#define RETURNS_SYM 692
#define RETURN_SYM 693
#define REVOKE 694
#define RIGHT 695
#define ROLLBACK_SYM 696
#define ROLLUP_SYM 697
#define ROUND 698
#define ROUTINE_SYM 699
#define ROWS_SYM 700
#define ROW_COUNT_SYM 701
#define ROW_FORMAT_SYM 702
#define ROW_SYM 703
#define RTREE_SYM 704
#define SAVEPOINT_SYM 705
#define SCHEDULE_SYM 706
#define SECOND_MICROSECOND_SYM 707
#define SECOND_SYM 708
#define SECURITY_SYM 709
#define SELECT_SYM 710
#define SENSITIVE_SYM 711
#define SEPARATOR_SYM 712
#define SERIALIZABLE_SYM 713
#define SERIAL_SYM 714
#define SESSION_SYM 715
#define SET 716
#define SET_VAR 717
#define SHARE_SYM 718
#define SHIFT_LEFT 719
#define SHIFT_RIGHT 720
#define SHOW 721
#define SHUTDOWN 722
#define SIGNED_SYM 723
#define SIMPLE_SYM 724
#define SLAVE 725
#define SMALLINT 726
#define SNAPSHOT_SYM 727
#define SONAME_SYM 728
#define SOUNDS_SYM 729
#define SPATIAL_SYM 730
#define SPECIFIC_SYM 731
#define SQLEXCEPTION_SYM 732
#define SQLSTATE_SYM 733
#define SQLWARNING_SYM 734
#define SQL_BIG_RESULT 735
#define SQL_BUFFER_RESULT 736
#define SQL_CACHE_SYM 737
#define SQL_CALC_FOUND_ROWS 738
#define SQL_NO_CACHE_SYM 739
#define SQL_SMALL_RESULT 740
#define SQL_SYM 741
#define SQL_THREAD 742
#define SSL_SYM 743
#define STARTING 744
#define START_SYM 745
#define STARTS_SYM 746
#define STATUS_SYM 747
#define STD_SYM 748
#define STDDEV_SAMP_SYM 749
#define STOP_SYM 750
#define STORAGE_SYM 751
#define STRAIGHT_JOIN 752
#define STRING_SYM 753
#define SUBDATE_SYM 754
#define SUBJECT_SYM 755
#define SUBPARTITION_SYM 756
#define SUBPARTITIONS_SYM 757
#define SUBSTRING 758
#define SUBSTRING_INDEX 759
#define SUM_SYM 760
#define SUPER_SYM 761
#define SUSPEND_SYM 762
#define SYSDATE 763
#define TABLES 764
#define TABLESPACE 765
#define TABLE_SYM 766
#define TEMPORARY 767
#define TEMPTABLE_SYM 768
#define TERMINATED 769
#define TEXT_STRING 770
#define TEXT_SYM 771
#define TIMESTAMP 772
#define TIMESTAMP_ADD 773
#define TIMESTAMP_DIFF 774
#define TIME_SYM 775
#define TINYBLOB 776
#define TINYINT 777
#define TINYTEXT 778
#define THAN_SYM 779
#define TO_SYM 780
#define TRAILING 781
#define TRANSACTION_SYM 782
#define TRIGGER_SYM 783
#define TRIGGERS_SYM 784
#define TRIM 785
#define TRUE_SYM 786
#define TRUNCATE_SYM 787
#define TYPES_SYM 788
#define TYPE_SYM 789
#define UDF_RETURNS_SYM 790
#define ULONGLONG_NUM 791
#define UNCOMMITTED_SYM 792
#define UNDEFINED_SYM 793
#define UNDO_BUFFER_SIZE_SYM 794
#define UNDOFILE_SYM 795
#define UNDERSCORE_CHARSET 796
#define UNDO_SYM 797
#define UNICODE_SYM 798
#define UNINSTALL_SYM 799
#define UNION_SYM 800
#define UNIQUE_SYM 801
#define UNIQUE_USERS 802
#define UNIX_TIMESTAMP 803
#define UNKNOWN_SYM 804
#define UNLOCK_SYM 805
#define UNSIGNED 806
#define UNTIL_SYM 807
#define UPDATE_SYM 808
#define UPGRADE_SYM 809
#define USAGE 810
#define USER 811
#define USE_FRM 812
#define USE_SYM 813
#define USING 814
#define UTC_DATE_SYM 815
#define UTC_TIMESTAMP_SYM 816
#define UTC_TIME_SYM 817
#define VAR_SAMP_SYM 818
#define VALUES 819
#define VALUE_SYM 820
#define VARBINARY 821
#define VARCHAR 822
#define VARIABLES 823
#define VARIANCE_SYM 824
#define VARYING 825
#define VIEW_SYM 826
#define WAIT_SYM 827
#define WARNINGS 828
#define WEEK_SYM 829
#define WHEN_SYM 830
#define WHERE 831
#define WHILE_SYM 832
#define WITH 833
#define WORK_SYM 834
#define WRITE_SYM 835
#define X509_SYM 836
#define XA_SYM 837
#define XOR 838
#define YEARWEEK 839
#define YEAR_MONTH_SYM 840
#define YEAR_SYM 841
#define ZEROFILL 842
#define TABLE_REF_PRIORITY 843
#define ELSE 844
#define THEN_SYM 845
#define CASE_SYM 846
#define BETWEEN_SYM 847
#define NEG 848




/* Copy the first part of user declarations.  */
#line 19 "sql_yacc.yy"

/* thd is passed as an arg to yyparse(), and subsequently to yylex().
** The type will be void*, so it must be  cast to (THD*) when used.
** Use the YYTHD macro for this.
*/
#define YYPARSE_PARAM yythd
#define YYLEX_PARAM yythd
#define YYTHD ((THD *)yythd)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200				/* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select
#include "mysql_priv.h"
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "event.h"
#include <myisam.h>
#include <myisammrg.h>

typedef struct p_elem_val
{ 
  longlong value;
  bool null_value;
} part_elem_value;

int yylex(void *yylval, void *yythd);

const LEX_STRING null_lex_str={0,0};

#define yyoverflow(A,B,C,D,E,F) {ulong val= *(F); if (my_yyoverflow((B), (D), &val)) { yyerror((char*) (A)); return 2; } else { *(F)= (YYSIZE_T)val; }}

#define YYERROR_UNLESS(A)               \
  if (!(A))                             \
  {					\
    yyerror(ER(ER_SYNTAX_ERROR));	\
    YYABORT;				\
  }

/* Helper for parsing "IS [NOT] truth_value" */
inline Item *is_truth_value(Item *A, bool v1, bool v2)
{
  return new Item_func_if(create_func_ifnull(A,
	new Item_int((char *) (v2 ? "TRUE" : "FALSE"), v2, 1)),
	new Item_int((char *) (v1 ? "TRUE" : "FALSE"), v1, 1),
	new Item_int((char *) (v1 ? "FALSE" : "TRUE"),!v1, 1));
}



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined (YYSTYPE) && ! defined (YYSTYPE_IS_DECLARED)
#line 74 "sql_yacc.yy"
typedef union YYSTYPE {
  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  LEX_STRING lex_str;
  LEX_STRING *lex_str_ptr;
  LEX_SYMBOL symbol;
  Table_ident *table;
  char *simple_string;
  Item *item;
  Item_num *item_num;
  List<Item> *item_list;
  List<String> *string_list;
  String *string;
  key_part_spec *key_part;
  TABLE_LIST *table_list;
  udf_func *udf;
  LEX_USER *lex_user;
  struct sys_var_with_base variable;
  enum enum_var_type var_type;
  Key::Keytype key_type;
  enum ha_key_alg key_alg;
  handlerton *db_type;
  enum row_type row_type;
  enum ha_rkey_function ha_rkey_mode;
  enum enum_tx_isolation tx_isolation;
  enum Cast_target cast_type;
  enum Item_udftype udf_type;
  CHARSET_INFO *charset;
  thr_lock_type lock_type;
  interval_type interval, interval_time_st;
  timestamp_type date_time_type;
  st_select_lex *select_lex;
  chooser_compare_func_creator boolfunc2creator;
  struct sp_cond_type *spcondtype;
  struct { int vars, conds, hndlrs, curs; } spblock;
  sp_name *spname;
  struct st_lex *lex;
  sp_head *sphead;
  struct p_elem_val *p_elem_value;
} YYSTYPE;
/* Line 196 of yacc.c.  */
#line 1370 "y.tab.c"
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif



/* Copy the second part of user declarations.  */
#line 117 "sql_yacc.yy"

bool my_yyoverflow(short **a, YYSTYPE **b, ulong *yystacksize);


/* Line 219 of yacc.c.  */
#line 1385 "y.tab.c"

#if ! defined (YYSIZE_T) && defined (__SIZE_TYPE__)
# define YYSIZE_T __SIZE_TYPE__
#endif
#if ! defined (YYSIZE_T) && defined (size_t)
# define YYSIZE_T size_t
#endif
#if ! defined (YYSIZE_T) && (defined (__STDC__) || defined (__cplusplus))
# include <stddef.h> /* INFRINGES ON USER NAME SPACE */
# define YYSIZE_T size_t
#endif
#if ! defined (YYSIZE_T)
# define YYSIZE_T unsigned int
#endif

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

#if ! defined (yyoverflow) || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if defined (__STDC__) || defined (__cplusplus)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     define YYINCLUDED_STDLIB_H
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning. */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2005 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM ((YYSIZE_T) -1)
#  endif
#  ifdef __cplusplus
extern "C" {
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if (! defined (malloc) && ! defined (YYINCLUDED_STDLIB_H) \
	&& (defined (__STDC__) || defined (__cplusplus)))
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if (! defined (free) && ! defined (YYINCLUDED_STDLIB_H) \
	&& (defined (__STDC__) || defined (__cplusplus)))
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifdef __cplusplus
}
#  endif
# endif
#endif /* ! defined (yyoverflow) || YYERROR_VERBOSE */


#if (! defined (yyoverflow) \
     && (! defined (__cplusplus) \
	 || (defined (YYSTYPE_IS_TRIVIAL) && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  short int yyss;
  YYSTYPE yyvs;
  };

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (short int) + sizeof (YYSTYPE))			\
      + YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined (__GNUC__) && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (0)
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (0)

#endif

#if defined (__STDC__) || defined (__cplusplus)
   typedef signed char yysigned_char;
#else
   typedef short int yysigned_char;
#endif

/* YYFINAL -- State number of the termination state. */
#define YYFINAL  522
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   48747

/* YYNTOKENS -- Number of terminals. */
#define YYNTOKENS  613
/* YYNNTS -- Number of nonterminals. */
#define YYNNTS  811
/* YYNRULES -- Number of rules. */
#define YYNRULES  2342
/* YYNRULES -- Number of states. */
#define YYNSTATES  4192

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   848

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const unsigned short int yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   606,     2,     2,     2,   599,   594,     2,
     603,   604,   597,   596,   605,   595,   610,   598,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   612,   611,
       2,     2,     2,     2,   609,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   600,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   607,   593,   608,   601,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   602
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const unsigned short int yyprhs[] =
{
       0,     0,     3,     5,     8,    10,    12,    14,    16,    18,
      20,    22,    24,    26,    28,    30,    32,    34,    36,    38,
      40,    42,    44,    46,    48,    50,    52,    54,    56,    58,
      60,    62,    64,    66,    68,    70,    72,    74,    76,    78,
      80,    82,    84,    86,    88,    90,    92,    94,    96,    98,
     100,   102,   104,   106,   108,   110,   112,   114,   118,   120,
     122,   127,   129,   132,   133,   138,   139,   142,   146,   148,
     151,   152,   156,   157,   163,   165,   169,   173,   177,   181,
     185,   189,   193,   197,   201,   205,   209,   213,   215,   219,
     223,   227,   231,   232,   240,   241,   254,   255,   262,   263,
     277,   278,   282,   287,   292,   296,   297,   304,   307,   308,
     310,   312,   313,   316,   317,   320,   321,   323,   327,   332,
     333,   336,   337,   340,   342,   344,   346,   348,   350,   352,
     354,   356,   358,   360,   362,   364,   366,   368,   369,   373,
     375,   380,   381,   382,   383,   384,   385,   398,   399,   402,
     403,   406,   409,   412,   415,   418,   422,   426,   428,   430,
     432,   435,   439,   443,   444,   451,   452,   454,   458,   460,
     461,   463,   467,   469,   470,   474,   475,   477,   481,   483,
     488,   489,   491,   493,   495,   496,   500,   503,   507,   508,
     512,   513,   519,   525,   526,   534,   540,   541,   544,   546,
     548,   550,   554,   556,   560,   561,   563,   565,   567,   569,
     572,   574,   576,   580,   581,   584,   586,   588,   590,   592,
     594,   596,   598,   600,   602,   604,   606,   608,   610,   612,
     613,   619,   620,   623,   624,   628,   629,   636,   637,   638,
     647,   648,   651,   654,   657,   660,   663,   666,   667,   674,
     677,   678,   681,   683,   685,   689,   690,   691,   692,   700,
     701,   704,   707,   708,   709,   710,   718,   719,   722,   725,
     726,   732,   733,   735,   736,   742,   747,   748,   749,   758,
     759,   767,   769,   771,   773,   775,   777,   780,   785,   791,
     792,   797,   802,   807,   811,   815,   818,   821,   822,   825,
     827,   830,   834,   836,   838,   840,   841,   844,   846,   849,
     853,   855,   857,   859,   861,   863,   865,   867,   869,   870,
     873,   875,   878,   882,   884,   886,   888,   890,   892,   893,
     896,   898,   901,   905,   907,   909,   911,   913,   915,   917,
     919,   920,   923,   925,   928,   932,   934,   936,   938,   941,
     944,   947,   949,   951,   953,   955,   958,   962,   966,   970,
     974,   978,   982,   986,   990,   995,   996,   998,  1000,  1002,
    1004,  1006,  1009,  1010,  1015,  1018,  1023,  1024,  1031,  1032,
    1033,  1040,  1041,  1042,  1048,  1049,  1057,  1058,  1060,  1061,
    1065,  1066,  1070,  1071,  1072,  1080,  1086,  1087,  1092,  1093,
    1097,  1098,  1102,  1103,  1105,  1106,  1108,  1110,  1114,  1116,
    1122,  1128,  1129,  1132,  1133,  1134,  1142,  1143,  1153,  1155,
    1159,  1161,  1163,  1164,  1167,  1168,  1172,  1174,  1178,  1179,
    1180,  1181,  1182,  1192,  1194,  1195,  1200,  1206,  1208,  1210,
    1214,  1216,  1220,  1222,  1224,  1225,  1229,  1231,  1235,  1236,
    1241,  1243,  1244,  1246,  1249,  1251,  1255,  1260,  1264,  1268,
    1272,  1277,  1282,  1286,  1287,  1288,  1295,  1296,  1298,  1299,
    1301,  1303,  1306,  1308,  1310,  1311,  1313,  1315,  1318,  1320,
    1321,  1325,  1326,  1328,  1330,  1333,  1335,  1338,  1342,  1346,
    1350,  1354,  1358,  1362,  1366,  1370,  1374,  1378,  1382,  1386,
    1390,  1394,  1400,  1402,  1404,  1408,  1413,  1418,  1421,  1424,
    1427,  1431,  1436,  1441,  1443,  1445,  1447,  1449,  1451,  1453,
    1455,  1457,  1459,  1461,  1463,  1466,  1467,  1469,  1471,  1473,
    1475,  1477,  1479,  1483,  1485,  1487,  1490,  1493,  1501,  1509,
    1518,  1521,  1524,  1525,  1529,  1530,  1532,  1535,  1536,  1538,
    1541,  1542,  1547,  1551,  1555,  1559,  1561,  1566,  1568,  1570,
    1576,  1579,  1585,  1588,  1593,  1595,  1601,  1607,  1612,  1616,
    1618,  1620,  1623,  1625,  1627,  1630,  1632,  1634,  1636,  1639,
    1643,  1646,  1650,  1653,  1656,  1660,  1664,  1668,  1669,  1676,
    1677,  1684,  1687,  1689,  1691,  1693,  1695,  1697,  1699,  1701,
    1703,  1705,  1707,  1709,  1712,  1715,  1717,  1720,  1722,  1725,
    1729,  1732,  1734,  1736,  1738,  1740,  1742,  1744,  1746,  1749,
    1750,  1754,  1756,  1762,  1763,  1765,  1768,  1770,  1772,  1774,
    1776,  1777,  1781,  1782,  1784,  1785,  1787,  1790,  1792,  1794,
    1797,  1800,  1805,  1807,  1811,  1814,  1816,  1819,  1822,  1825,
    1828,  1830,  1833,  1835,  1837,  1839,  1841,  1843,  1845,  1847,
    1849,  1851,  1853,  1854,  1857,  1859,  1861,  1862,  1864,  1865,
    1868,  1870,  1873,  1877,  1880,  1881,  1883,  1884,  1886,  1888,
    1891,  1892,  1894,  1895,  1900,  1902,  1907,  1911,  1913,  1914,
    1916,  1919,  1921,  1925,  1929,  1932,  1935,  1938,  1940,  1942,
    1945,  1948,  1951,  1953,  1956,  1959,  1962,  1965,  1967,  1969,
    1970,  1972,  1974,  1976,  1978,  1979,  1981,  1983,  1985,  1986,
    1989,  1992,  1994,  1996,  1998,  2003,  2006,  2008,  2013,  2014,
    2016,  2017,  2020,  2022,  2026,  2027,  2034,  2035,  2041,  2042,
    2048,  2049,  2055,  2056,  2068,  2069,  2079,  2083,  2088,  2092,
    2096,  2097,  2101,  2103,  2108,  2109,  2113,  2114,  2117,  2118,
    2120,  2121,  2124,  2127,  2130,  2133,  2135,  2137,  2139,  2143,
    2148,  2149,  2157,  2158,  2165,  2166,  2172,  2173,  2180,  2185,
    2187,  2190,  2192,  2194,  2195,  2201,  2202,  2206,  2209,  2210,
    2216,  2217,  2218,  2225,  2227,  2231,  2233,  2235,  2239,  2242,
    2246,  2249,  2254,  2255,  2262,  2263,  2264,  2273,  2278,  2283,
    2287,  2291,  2294,  2297,  2304,  2310,  2314,  2320,  2322,  2324,
    2326,  2327,  2329,  2330,  2332,  2333,  2335,  2337,  2338,  2341,
    2343,  2344,  2346,  2348,  2350,  2351,  2357,  2361,  2362,  2368,
    2372,  2376,  2377,  2381,  2382,  2385,  2387,  2391,  2392,  2394,
    2396,  2397,  2400,  2402,  2406,  2407,  2414,  2415,  2422,  2423,
    2429,  2430,  2432,  2434,  2435,  2442,  2443,  2445,  2447,  2450,
    2452,  2454,  2456,  2457,  2464,  2467,  2468,  2474,  2475,  2477,
    2479,  2482,  2484,  2486,  2488,  2490,  2492,  2495,  2496,  2503,
    2504,  2506,  2508,  2509,  2514,  2515,  2520,  2525,  2529,  2535,
    2537,  2541,  2545,  2549,  2555,  2557,  2561,  2564,  2566,  2568,
    2569,  2576,  2578,  2582,  2586,  2587,  2590,  2591,  2596,  2597,
    2600,  2606,  2608,  2611,  2616,  2619,  2623,  2624,  2628,  2629,
    2630,  2637,  2640,  2642,  2644,  2647,  2650,  2651,  2653,  2658,
    2662,  2663,  2667,  2669,  2671,  2672,  2675,  2684,  2689,  2690,
    2692,  2695,  2697,  2699,  2701,  2703,  2705,  2707,  2709,  2711,
    2713,  2715,  2717,  2718,  2721,  2726,  2730,  2732,  2734,  2739,
    2740,  2741,  2743,  2745,  2746,  2749,  2752,  2754,  2756,  2757,
    2760,  2761,  2765,  2766,  2770,  2774,  2775,  2779,  2780,  2784,
    2787,  2789,  2793,  2798,  2802,  2807,  2811,  2816,  2818,  2822,
    2827,  2831,  2835,  2840,  2842,  2848,  2855,  2859,  2864,  2870,
    2877,  2882,  2887,  2893,  2897,  2902,  2904,  2908,  2910,  2914,
    2916,  2920,  2924,  2926,  2930,  2934,  2939,  2944,  2946,  2950,
    2954,  2958,  2962,  2966,  2968,  2972,  2974,  2976,  2978,  2980,
    2982,  2984,  2986,  2988,  2990,  2992,  2994,  2996,  2998,  3000,
    3002,  3004,  3006,  3009,  3011,  3015,  3017,  3019,  3024,  3027,
    3033,  3035,  3039,  3042,  3045,  3048,  3051,  3055,  3061,  3068,
    3071,  3073,  3078,  3086,  3091,  3094,  3101,  3108,  3115,  3122,
    3127,  3132,  3136,  3141,  3148,  3157,  3164,  3173,  3180,  3185,
    3192,  3197,  3204,  3209,  3214,  3219,  3224,  3231,  3240,  3243,
    3246,  3251,  3254,  3262,  3270,  3274,  3279,  3284,  3291,  3298,
    3303,  3310,  3317,  3324,  3329,  3336,  3341,  3348,  3357,  3368,
    3381,  3388,  3393,  3400,  3407,  3409,  3416,  3421,  3430,  3441,
    3446,  3448,  3452,  3457,  3464,  3471,  3480,  3487,  3494,  3499,
    3506,  3513,  3522,  3527,  3532,  3539,  3544,  3547,  3552,  3557,
    3562,  3569,  3574,  3579,  3583,  3592,  3599,  3604,  3611,  3615,
    3622,  3631,  3636,  3645,  3652,  3661,  3668,  3677,  3680,  3685,
    3690,  3695,  3702,  3711,  3720,  3725,  3733,  3741,  3749,  3756,
    3763,  3770,  3777,  3784,  3791,  3792,  3798,  3809,  3813,  3818,
    3822,  3825,  3828,  3831,  3836,  3843,  3848,  3853,  3860,  3867,
    3874,  3881,  3886,  3893,  3898,  3905,  3910,  3915,  3920,  3925,
    3932,  3937,  3944,  3949,  3956,  3961,  3966,  3973,  3978,  3985,
    3990,  3997,  4002,  4007,  4014,  4019,  4026,  4029,  4033,  4034,
    4039,  4040,  4044,  4045,  4047,  4048,  4051,  4053,  4057,  4062,
    4067,  4073,  4078,  4083,  4088,  4094,  4099,  4100,  4101,  4109,
    4120,  4125,  4131,  4136,  4142,  4147,  4152,  4157,  4162,  4167,
    4173,  4174,  4183,  4184,  4186,  4187,  4190,  4191,  4193,  4194,
    4198,  4201,  4205,  4208,  4210,  4213,  4215,  4218,  4220,  4222,
    4224,  4227,  4228,  4231,  4233,  4237,  4239,  4243,  4244,  4247,
    4249,  4253,  4254,  4256,  4257,  4260,  4261,  4264,  4268,  4274,
    4276,  4277,  4280,  4282,  4284,  4288,  4292,  4296,  4297,  4304,
    4305,  4312,  4313,  4322,  4327,  4328,  4337,  4338,  4349,  4356,
    4357,  4366,  4367,  4378,  4385,  4387,  4390,  4393,  4394,  4399,
    4400,  4412,  4416,  4423,  4424,  4428,  4429,  4430,  4436,  4437,
    4439,  4440,  4442,  4443,  4446,  4449,  4452,  4453,  4459,  4460,
    4462,  4466,  4468,  4470,  4472,  4476,  4478,  4480,  4482,  4484,
    4486,  4488,  4490,  4492,  4494,  4496,  4498,  4500,  4502,  4504,
    4506,  4508,  4510,  4512,  4514,  4516,  4518,  4520,  4522,  4524,
    4526,  4528,  4529,  4531,  4533,  4534,  4537,  4538,  4540,  4541,
    4542,  4546,  4547,  4548,  4552,  4555,  4556,  4557,  4562,  4567,
    4570,  4571,  4574,  4577,  4578,  4580,  4581,  4586,  4591,  4594,
    4595,  4597,  4599,  4600,  4602,  4603,  4605,  4608,  4610,  4614,
    4618,  4620,  4622,  4624,  4626,  4627,  4630,  4632,  4634,  4636,
    4638,  4640,  4642,  4644,  4646,  4648,  4650,  4652,  4653,  4654,
    4661,  4662,  4664,  4668,  4670,  4673,  4674,  4677,  4681,  4683,
    4686,  4688,  4689,  4696,  4700,  4703,  4704,  4708,  4715,  4716,
    4723,  4728,  4733,  4738,  4743,  4749,  4754,  4758,  4764,  4771,
    4773,  4777,  4779,  4780,  4783,  4784,  4786,  4787,  4788,  4797,
    4798,  4799,  4806,  4807,  4809,  4811,  4813,  4815,  4817,  4820,
    4822,  4824,  4826,  4830,  4835,  4836,  4840,  4844,  4846,  4849,
    4852,  4853,  4857,  4858,  4864,  4868,  4870,  4874,  4876,  4880,
    4882,  4884,  4885,  4887,  4888,  4893,  4894,  4896,  4900,  4902,
    4904,  4906,  4907,  4908,  4915,  4916,  4917,  4929,  4933,  4935,
    4939,  4943,  4945,  4949,  4950,  4952,  4953,  4958,  4959,  4966,
    4967,  4973,  4974,  4981,  4983,  4987,  4991,  4997,  4998,  5001,
    5002,  5005,  5007,  5009,  5011,  5015,  5016,  5018,  5021,  5022,
    5026,  5029,  5034,  5039,  5044,  5049,  5054,  5056,  5058,  5059,
    5064,  5065,  5070,  5077,  5094,  5097,  5100,  5101,  5108,  5114,
    5117,  5120,  5123,  5125,  5127,  5129,  5135,  5141,  5144,  5147,
    5151,  5154,  5157,  5160,  5164,  5167,  5170,  5173,  5175,  5177,
    5181,  5186,  5190,  5194,  5197,  5200,  5204,  5208,  5212,  5216,
    5220,  5224,  5228,  5230,  5232,  5234,  5236,  5238,  5239,  5241,
    5242,  5245,  5246,  5248,  5250,  5252,  5253,  5256,  5257,  5260,
    5261,  5264,  5267,  5274,  5275,  5280,  5281,  5286,  5288,  5290,
    5291,  5293,  5295,  5296,  5298,  5300,  5301,  5306,  5310,  5312,
    5313,  5317,  5322,  5325,  5327,  5329,  5331,  5333,  5335,  5337,
    5339,  5341,  5342,  5344,  5345,  5349,  5353,  5355,  5357,  5359,
    5362,  5363,  5367,  5371,  5374,  5377,  5378,  5383,  5384,  5386,
    5388,  5391,  5392,  5397,  5403,  5404,  5405,  5406,  5423,  5426,
    5427,  5429,  5430,  5432,  5434,  5435,  5437,  5439,  5440,  5443,
    5446,  5448,  5452,  5457,  5461,  5465,  5466,  5469,  5472,  5474,
    5478,  5482,  5483,  5487,  5488,  5492,  5495,  5499,  5501,  5503,
    5506,  5507,  5510,  5512,  5514,  5517,  5520,  5522,  5524,  5526,
    5528,  5530,  5533,  5536,  5538,  5540,  5542,  5544,  5546,  5548,
    5550,  5553,  5556,  5559,  5562,  5565,  5567,  5569,  5571,  5573,
    5575,  5577,  5579,  5583,  5589,  5591,  5593,  5595,  5597,  5599,
    5603,  5608,  5614,  5616,  5622,  5626,  5629,  5631,  5635,  5638,
    5640,  5642,  5644,  5646,  5648,  5650,  5652,  5654,  5656,  5658,
    5660,  5662,  5664,  5666,  5668,  5672,  5675,  5677,  5679,  5681,
    5683,  5685,  5687,  5689,  5691,  5693,  5695,  5697,  5699,  5701,
    5703,  5705,  5707,  5709,  5711,  5713,  5715,  5717,  5719,  5721,
    5723,  5725,  5727,  5729,  5731,  5733,  5735,  5737,  5739,  5741,
    5743,  5745,  5747,  5749,  5751,  5753,  5755,  5757,  5759,  5761,
    5763,  5765,  5767,  5769,  5771,  5773,  5775,  5777,  5779,  5781,
    5783,  5785,  5787,  5789,  5791,  5793,  5795,  5797,  5799,  5801,
    5803,  5805,  5807,  5809,  5811,  5813,  5815,  5817,  5819,  5821,
    5823,  5825,  5827,  5829,  5831,  5833,  5835,  5837,  5839,  5841,
    5843,  5845,  5847,  5849,  5851,  5853,  5855,  5857,  5859,  5861,
    5863,  5865,  5867,  5869,  5871,  5873,  5875,  5877,  5879,  5881,
    5883,  5885,  5887,  5889,  5891,  5893,  5895,  5897,  5899,  5901,
    5903,  5905,  5907,  5909,  5911,  5913,  5915,  5917,  5919,  5921,
    5923,  5925,  5927,  5929,  5931,  5933,  5935,  5937,  5939,  5941,
    5943,  5945,  5947,  5949,  5951,  5953,  5955,  5957,  5959,  5961,
    5963,  5965,  5967,  5969,  5971,  5973,  5975,  5977,  5979,  5981,
    5983,  5985,  5987,  5989,  5991,  5993,  5995,  5997,  5999,  6001,
    6003,  6005,  6007,  6009,  6011,  6013,  6015,  6017,  6019,  6021,
    6023,  6025,  6027,  6029,  6031,  6033,  6035,  6037,  6039,  6041,
    6043,  6045,  6047,  6049,  6051,  6053,  6055,  6057,  6059,  6061,
    6063,  6065,  6067,  6069,  6071,  6073,  6075,  6077,  6079,  6081,
    6083,  6085,  6087,  6089,  6091,  6093,  6095,  6097,  6099,  6101,
    6103,  6105,  6107,  6109,  6111,  6113,  6115,  6117,  6119,  6121,
    6123,  6125,  6127,  6129,  6131,  6133,  6135,  6137,  6139,  6141,
    6143,  6145,  6147,  6149,  6151,  6153,  6155,  6157,  6159,  6161,
    6163,  6165,  6167,  6169,  6171,  6173,  6175,  6177,  6179,  6181,
    6183,  6185,  6187,  6189,  6191,  6193,  6195,  6197,  6199,  6201,
    6203,  6205,  6207,  6209,  6211,  6213,  6215,  6217,  6219,  6221,
    6223,  6225,  6227,  6229,  6231,  6233,  6235,  6237,  6239,  6241,
    6243,  6245,  6247,  6249,  6250,  6255,  6256,  6258,  6260,  6264,
    6265,  6268,  6270,  6272,  6274,  6276,  6277,  6279,  6280,  6282,
    6284,  6286,  6287,  6290,  6293,  6296,  6298,  6301,  6306,  6312,
    6317,  6324,  6327,  6331,  6335,  6339,  6345,  6347,  6351,  6355,
    6358,  6361,  6364,  6366,  6368,  6373,  6378,  6380,  6382,  6384,
    6386,  6388,  6389,  6394,  6396,  6398,  6400,  6404,  6408,  6410,
    6412,  6415,  6418,  6419,  6423,  6428,  6432,  6433,  6441,  6443,
    6446,  6448,  6450,  6452,  6454,  6456,  6458,  6459,  6465,  6467,
    6469,  6471,  6473,  6475,  6479,  6486,  6493,  6500,  6508,  6512,
    6521,  6530,  6539,  6540,  6542,  6544,  6547,  6548,  6550,  6552,
    6556,  6557,  6561,  6562,  6566,  6567,  6571,  6572,  6576,  6578,
    6580,  6582,  6584,  6586,  6588,  6590,  6592,  6594,  6596,  6598,
    6601,  6604,  6606,  6610,  6613,  6616,  6619,  6622,  6625,  6628,
    6631,  6634,  6636,  6638,  6639,  6641,  6645,  6647,  6650,  6653,
    6656,  6658,  6662,  6666,  6668,  6670,  6674,  6676,  6680,  6685,
    6691,  6693,  6694,  6698,  6702,  6704,  6706,  6707,  6710,  6713,
    6716,  6719,  6720,  6723,  6726,  6728,  6731,  6734,  6737,  6740,
    6743,  6744,  6748,  6749,  6751,  6752,  6756,  6759,  6760,  6762,
    6765,  6766,  6768,  6773,  6778,  6784,  6787,  6791,  6792,  6794,
    6795,  6800,  6801,  6803,  6805,  6806,  6809,  6812,  6814,  6815,
    6817,  6819,  6823,  6825,  6829,  6831,  6835,  6837,  6840,  6842,
    6845,  6849,  6851,  6853,  6855,  6856,  6861,  6867,  6869,  6872,
    6874,  6877,  6881,  6885,  6889,  6890,  6892,  6893,  6897,  6901,
    6902,  6911,  6912,  6916,  6918,  6922,  6926,  6932,  6933,  6937,
    6942,  6947,  6948,  6963,  6964,  6971,  6972,  6973,  6974,  6975,
    6988,  6993,  6998,  7002,  7007,  7011,  7014,  7016,  7020,  7026,
    7028,  7030,  7031,  7033,  7035,  7036,  7039,  7040,  7041,  7045,
    7046,  7049,  7055
};

/* YYRHS -- A `-1'-separated list of the rules' RHS. */
static const short int yyrhs[] =
{
     614,     0,    -1,     3,    -1,   615,     3,    -1,   616,    -1,
    1366,    -1,   926,    -1,   987,    -1,   977,    -1,   989,    -1,
     663,    -1,   628,    -1,   990,    -1,   979,    -1,  1372,    -1,
     633,    -1,   617,    -1,  1210,    -1,  1238,    -1,  1166,    -1,
    1168,    -1,   621,    -1,  1244,    -1,  1341,    -1,  1332,    -1,
     626,    -1,  1174,    -1,  1422,    -1,  1258,    -1,  1262,    -1,
    1324,    -1,   995,    -1,  1005,    -1,   792,    -1,  1009,    -1,
     619,    -1,  1254,    -1,  1375,    -1,   998,    -1,   982,    -1,
    1177,    -1,  1250,    -1,   975,    -1,  1339,    -1,  1373,    -1,
    1374,    -1,  1017,    -1,  1307,    -1,  1223,    -1,   964,    -1,
     967,    -1,  1221,    -1,  1423,    -1,  1330,    -1,  1202,    -1,
    1261,    -1,  1414,    -1,   618,   392,  1301,    -1,   110,    -1,
     135,    -1,   392,  1301,   184,   620,    -1,  1298,    -1,   609,
    1303,    -1,    -1,   160,  1301,   622,   623,    -1,    -1,   559,
     624,    -1,   624,   605,   625,    -1,   625,    -1,   609,  1303,
      -1,    -1,   212,   627,  1303,    -1,    -1,    56,   301,   525,
     629,   630,    -1,   631,    -1,   630,   605,   631,    -1,   288,
     152,  1298,    -1,   302,   152,  1298,    -1,   291,   152,  1298,
      -1,   292,   152,  1153,    -1,   287,   152,  1153,    -1,   300,
     152,  1153,    -1,   296,   152,  1298,    -1,   295,   152,  1298,
      -1,   297,   152,  1298,    -1,   298,   152,  1298,    -1,   299,
     152,  1298,    -1,   632,    -1,   289,   152,  1298,    -1,   290,
     152,  1154,    -1,   418,   152,  1298,    -1,   419,   152,  1153,
      -1,    -1,    89,   844,   511,   847,  1295,   634,   780,    -1,
      -1,    89,   918,   227,  1301,   919,   361,  1295,   635,   603,
     921,   604,   864,    -1,    -1,    89,    96,   847,  1301,   636,
     841,    -1,    -1,    89,   157,   847,   651,   637,   361,   451,
     639,   644,   641,   646,   134,   647,    -1,    -1,    89,   638,
    1392,    -1,    89,   556,   650,  1357,    -1,    89,   276,   205,
     739,    -1,    89,   510,   736,    -1,    -1,   159,  1042,  1128,
     640,   642,   643,    -1,    23,  1042,    -1,    -1,   143,    -1,
     127,    -1,    -1,   491,  1042,    -1,    -1,   148,  1042,    -1,
      -1,   645,    -1,   361,    75,   393,    -1,   361,    75,   350,
     393,    -1,    -1,    71,  1298,    -1,    -1,   648,   649,    -1,
     693,    -1,   695,    -1,   691,    -1,   697,    -1,   699,    -1,
     724,    -1,   702,    -1,   704,    -1,   705,    -1,   706,    -1,
     707,    -1,   708,    -1,   709,    -1,   711,    -1,    -1,  1301,
     610,  1301,    -1,  1301,    -1,   437,   859,   473,  1298,    -1,
      -1,    -1,    -1,    -1,    -1,   603,   653,   667,   604,   654,
     437,   655,   871,   656,   659,   657,   690,    -1,    -1,   658,
     660,    -1,    -1,   659,   661,    -1,    71,  1298,    -1,   251,
     486,    -1,   352,   486,    -1,    84,   486,    -1,   406,   486,
      99,    -1,   327,   486,    99,    -1,   662,    -1,   660,    -1,
     125,    -1,  1060,   125,    -1,   486,   454,   116,    -1,   486,
     454,   240,    -1,    -1,    51,   651,   664,   603,   665,   604,
      -1,    -1,   666,    -1,   666,   605,  1042,    -1,  1042,    -1,
      -1,   668,    -1,   668,   605,   670,    -1,   670,    -1,    -1,
    1301,   669,   871,    -1,    -1,   672,    -1,   672,   605,   673,
      -1,   673,    -1,   674,   669,  1301,   871,    -1,    -1,   241,
      -1,   374,    -1,   232,    -1,    -1,   675,   690,   611,    -1,
     690,   611,    -1,   676,   690,   611,    -1,    -1,   677,   678,
     611,    -1,    -1,   113,   688,   679,   871,   689,    -1,   113,
    1301,    80,   181,   685,    -1,    -1,   113,   683,   209,   181,
     680,   684,   690,    -1,   113,  1301,    94,   181,   681,    -1,
      -1,   682,   616,    -1,   162,    -1,    85,    -1,   687,    -1,
     684,   605,   687,    -1,  1153,    -1,   478,   686,  1299,    -1,
      -1,   565,    -1,   685,    -1,  1301,    -1,   479,    -1,  1060,
     182,    -1,   477,    -1,  1301,    -1,   688,   605,  1301,    -1,
      -1,   115,  1042,    -1,   693,    -1,   695,    -1,   691,    -1,
     697,    -1,   699,    -1,   724,    -1,   702,    -1,   704,    -1,
     705,    -1,   706,    -1,   707,    -1,   708,    -1,   709,    -1,
     711,    -1,    -1,   223,   692,   714,   147,   223,    -1,    -1,
     694,   616,    -1,    -1,   438,   696,  1042,    -1,    -1,   591,
     575,   698,   719,   147,   591,    -1,    -1,    -1,   591,   700,
    1042,   575,   701,   719,   147,   591,    -1,    -1,   703,   727,
      -1,   258,  1302,    -1,   245,  1302,    -1,   250,   220,    -1,
     201,   220,    -1,   364,  1301,    -1,    -1,   170,   712,  1301,
     238,   710,   713,    -1,    64,  1301,    -1,    -1,   346,   184,
      -1,   184,    -1,  1301,    -1,   713,   605,  1301,    -1,    -1,
      -1,    -1,   715,  1042,   590,   716,   676,   717,   718,    -1,
      -1,   141,   714,    -1,   589,   676,    -1,    -1,    -1,    -1,
     720,  1042,   590,   721,   676,   722,   723,    -1,    -1,   589,
     676,    -1,   575,   719,    -1,    -1,  1302,   612,   725,   727,
     726,    -1,    -1,  1302,    -1,    -1,    32,   728,   677,   675,
     147,    -1,   283,   676,   147,   283,    -1,    -1,    -1,   577,
     729,  1042,   134,   730,   676,   147,   577,    -1,    -1,   428,
     676,   552,   731,  1042,   147,   428,    -1,    31,    -1,     9,
      -1,   234,    -1,   553,    -1,   119,    -1,   765,   767,    -1,
     765,    56,   762,   742,    -1,   765,     7,   762,   737,   746,
      -1,    -1,   558,   276,   205,  1301,    -1,   765,     7,   762,
     750,    -1,   765,   135,   762,   750,    -1,   766,   741,   754,
      -1,   766,   741,   758,    -1,     7,   763,    -1,     7,   764,
      -1,    -1,   743,   744,    -1,   745,    -1,   744,   745,    -1,
     744,   605,   745,    -1,   768,    -1,   769,    -1,   770,    -1,
      -1,   747,   748,    -1,   749,    -1,   748,   749,    -1,   748,
     605,   749,    -1,   768,    -1,   769,    -1,   770,    -1,   771,
      -1,   774,    -1,   776,    -1,   778,    -1,   775,    -1,    -1,
     751,   752,    -1,   753,    -1,   752,   753,    -1,   752,   605,
     753,    -1,   768,    -1,   769,    -1,   770,    -1,   776,    -1,
     778,    -1,    -1,   755,   756,    -1,   757,    -1,   756,   757,
      -1,   756,   605,   757,    -1,   768,    -1,   772,    -1,   773,
      -1,   774,    -1,   776,    -1,   778,    -1,   775,    -1,    -1,
     759,   760,    -1,   761,    -1,   760,   761,    -1,   760,   605,
     761,    -1,   768,    -1,   776,    -1,   778,    -1,    98,  1298,
      -1,   540,  1298,    -1,   414,  1298,    -1,  1301,    -1,  1301,
      -1,   407,    -1,   409,    -1,   350,     5,    -1,   229,  1194,
     779,    -1,    27,  1194,   779,    -1,   307,  1194,   779,    -1,
     166,  1194,   779,    -1,   539,  1194,   779,    -1,   413,  1194,
     779,    -1,   347,  1194,  1153,    -1,    71,  1194,  1298,    -1,
    1231,   150,  1194,   854,    -1,    -1,   778,    -1,   572,    -1,
     353,    -1,  1153,    -1,   220,    -1,   603,   782,    -1,    -1,
     848,   789,   781,   786,    -1,   263,  1295,    -1,   603,   263,
    1295,   604,    -1,    -1,   860,   604,   848,   789,   783,   786,
      -1,    -1,    -1,   789,   784,   837,   604,   785,  1379,    -1,
      -1,    -1,  1270,   840,   837,   787,  1376,    -1,    -1,  1270,
     840,   603,   837,   604,   788,  1379,    -1,    -1,   790,    -1,
      -1,   378,   791,   794,    -1,    -1,   378,   793,   794,    -1,
      -1,    -1,    48,   797,   807,   795,   808,   796,   815,    -1,
     801,   248,   603,   802,   604,    -1,    -1,   801,   210,   798,
     805,    -1,    -1,   405,   799,   805,    -1,    -1,   269,   800,
     805,    -1,    -1,   265,    -1,    -1,   803,    -1,   804,    -1,
     803,   605,   804,    -1,  1301,    -1,   603,  1037,   813,  1038,
     604,    -1,   603,  1037,   813,  1038,   604,    -1,    -1,   380,
    1153,    -1,    -1,    -1,   501,    48,   801,   210,   806,   809,
     814,    -1,    -1,   501,    48,   801,   248,   603,   811,   604,
     810,   814,    -1,   812,    -1,   811,   605,   812,    -1,  1301,
      -1,  1052,    -1,    -1,   502,  1153,    -1,    -1,   603,   816,
     604,    -1,   817,    -1,   816,   605,   817,    -1,    -1,    -1,
      -1,    -1,   378,   818,   822,   819,   823,   820,   834,   821,
     829,    -1,  1303,    -1,    -1,   564,   260,   524,   824,    -1,
     564,   241,   603,   826,   604,    -1,   311,    -1,   825,    -1,
     603,   828,   604,    -1,   827,    -1,   826,   605,   827,    -1,
     828,    -1,  1052,    -1,    -1,   603,   830,   604,    -1,   831,
      -1,   830,   605,   831,    -1,    -1,   501,   832,   833,   834,
      -1,  1303,    -1,    -1,   835,    -1,   835,   836,    -1,   836,
      -1,   510,  1194,  1303,    -1,  1231,   150,  1194,   854,    -1,
     347,  1194,  1153,    -1,   306,  1194,  1154,    -1,   323,  1194,
    1154,    -1,    99,   126,  1194,  1298,    -1,   227,   126,  1194,
    1298,    -1,    71,  1194,  1298,    -1,    -1,    -1,   455,   838,
    1031,  1035,   839,   857,    -1,    -1,    19,    -1,    -1,   842,
      -1,   843,    -1,   842,   843,    -1,   853,    -1,   852,    -1,
      -1,   845,    -1,   846,    -1,   846,   845,    -1,   512,    -1,
      -1,   223,  1060,   161,    -1,    -1,   850,    -1,   851,    -1,
     851,   849,    -1,   851,    -1,   851,   850,    -1,   851,   605,
     850,    -1,   150,  1194,   854,    -1,   534,  1194,   854,    -1,
     306,  1194,  1154,    -1,   323,  1194,  1154,    -1,    28,  1194,
    1153,    -1,   381,  1194,  1298,    -1,    71,  1194,  1298,    -1,
      26,  1194,  1154,    -1,   375,  1194,  1153,    -1,   375,  1194,
     115,    -1,    60,  1194,  1153,    -1,   118,  1194,  1153,    -1,
     447,  1194,   855,    -1,   545,  1194,   603,  1170,   604,    -1,
     852,    -1,   853,    -1,   235,  1194,   856,    -1,    99,   126,
    1194,  1298,    -1,   227,   126,  1194,  1298,    -1,   510,  1301,
      -1,   496,   129,    -1,   496,   316,    -1,    81,  1194,  1298,
      -1,   900,   892,  1194,   894,    -1,   900,    67,  1194,   899,
      -1,  1303,    -1,   115,    -1,   174,    -1,   139,    -1,    76,
      -1,   415,    -1,    74,    -1,   352,    -1,   173,    -1,   253,
      -1,  1148,    -1,  1030,  1034,    -1,    -1,    11,    -1,   498,
      -1,   410,    -1,   112,    -1,   239,    -1,   861,    -1,   860,
     605,   861,    -1,   862,    -1,   863,    -1,   869,   865,    -1,
     869,   905,    -1,   913,   923,   919,   603,   921,   604,   864,
      -1,   867,   914,   923,   919,   603,   921,   604,    -1,   867,
     179,   248,   923,   603,   921,   604,   905,    -1,   868,   865,
      -1,   867,   866,    -1,    -1,   578,   376,  1297,    -1,    -1,
     866,    -1,    61,  1042,    -1,    -1,   868,    -1,    83,   923,
      -1,    -1,  1294,   870,   871,   888,    -1,   879,   886,   883,
      -1,   880,   887,   883,    -1,   176,   881,   883,    -1,    41,
      -1,    41,   603,   356,   604,    -1,    45,    -1,    44,    -1,
     875,   603,   356,   604,   901,    -1,   875,   901,    -1,   876,
     603,   356,   604,   902,    -1,   876,   902,    -1,    36,   603,
     356,   604,    -1,    36,    -1,   877,   603,   356,   604,   901,
      -1,   878,   603,   356,   604,   902,    -1,   566,   603,   356,
     604,    -1,   586,   886,   883,    -1,   103,    -1,   520,    -1,
     517,   886,    -1,   100,    -1,   521,    -1,    43,   886,    -1,
     874,    -1,   312,    -1,   279,    -1,   282,   566,    -1,   282,
     877,   901,    -1,   523,   901,    -1,   516,   886,   901,    -1,
     314,   901,    -1,   280,   901,    -1,   112,   881,   883,    -1,
     357,   881,   883,    -1,   174,   881,   883,    -1,    -1,   151,
     872,   603,   925,   604,   901,    -1,    -1,   461,   873,   603,
     925,   604,   901,    -1,   282,   901,    -1,   459,    -1,   196,
      -1,   195,    -1,   387,    -1,   334,    -1,   268,    -1,   333,
      -1,   389,    -1,   335,    -1,    59,    -1,   342,    -1,   339,
      59,    -1,   875,   570,    -1,   567,    -1,   339,   567,    -1,
     358,    -1,   342,   567,    -1,   339,    59,   570,    -1,   342,
     570,    -1,   239,    -1,   522,    -1,   471,    -1,   313,    -1,
      35,    -1,   410,    -1,   133,    -1,   133,   391,    -1,    -1,
     603,   356,   604,    -1,   882,    -1,   603,   356,   605,   356,
     604,    -1,    -1,   884,    -1,   884,   885,    -1,   885,    -1,
     468,    -1,   551,    -1,   587,    -1,    -1,   603,   356,   604,
      -1,    -1,   882,    -1,    -1,   889,    -1,   889,   890,    -1,
     890,    -1,   355,    -1,  1060,   355,    -1,   115,   891,    -1,
     361,   553,   351,  1041,    -1,    26,    -1,   459,   115,   565,
      -1,   904,   248,    -1,   546,    -1,   546,   248,    -1,    71,
    1298,    -1,    67,   897,    -1,   351,  1041,    -1,  1285,    -1,
      59,   461,    -1,    58,    -1,  1303,    -1,    36,    -1,   893,
      -1,   115,    -1,  1303,    -1,    36,    -1,   895,    -1,   115,
      -1,  1303,    -1,    -1,    67,   899,    -1,   897,    -1,   115,
      -1,    -1,   115,    -1,    -1,    21,   902,    -1,    49,    -1,
     543,   902,    -1,   892,   893,   902,    -1,    36,   903,    -1,
      -1,    36,    -1,    -1,    21,    -1,   543,    -1,   892,   893,
      -1,    -1,   395,    -1,    -1,   416,  1295,   906,   907,    -1,
     909,    -1,   603,   908,   604,   909,    -1,   908,   605,  1301,
      -1,  1301,    -1,    -1,   910,    -1,   910,   911,    -1,   911,
      -1,   361,   119,   912,    -1,   361,   553,   912,    -1,   303,
     186,    -1,   303,   377,    -1,   303,   469,    -1,   435,    -1,
      52,    -1,   461,   355,    -1,   352,     6,    -1,   461,   115,
      -1,   915,    -1,   187,   916,    -1,   475,   916,    -1,   395,
     248,    -1,   546,   916,    -1,   248,    -1,   227,    -1,    -1,
     915,    -1,   247,    -1,   227,    -1,   226,    -1,    -1,   546,
      -1,   187,    -1,   475,    -1,    -1,   559,   920,    -1,   534,
     920,    -1,    47,    -1,   449,    -1,   210,    -1,   921,   605,
     922,  1146,    -1,   922,  1146,    -1,  1301,    -1,  1301,   603,
     356,   604,    -1,    -1,  1294,    -1,    -1,   610,  1301,    -1,
    1283,    -1,   925,   605,  1283,    -1,    -1,    14,   960,   511,
    1295,   927,   937,    -1,    -1,    14,    96,   936,   928,   841,
      -1,    -1,    14,   397,   651,   929,   658,    -1,    -1,    14,
     188,   651,   930,   658,    -1,    -1,    14,  1398,  1394,  1399,
     571,  1295,   931,  1402,    19,  1404,  1405,    -1,    -1,    14,
     157,   651,   932,   933,   934,   641,   646,   935,    -1,    14,
     510,   738,    -1,    14,   276,   205,   740,    -1,    14,   510,
     735,    -1,    14,   510,   734,    -1,    -1,   361,   451,   639,
      -1,   645,    -1,   361,   451,   639,   645,    -1,    -1,   424,
     525,   651,    -1,    -1,   134,   647,    -1,    -1,  1301,    -1,
      -1,   128,   510,    -1,   225,   510,    -1,   953,   789,    -1,
     953,   942,    -1,   942,    -1,   790,    -1,   944,    -1,   135,
     378,   951,    -1,   411,   378,   997,   943,    -1,    -1,   365,
     378,   997,   943,   938,   997,   992,    -1,    -1,    15,   378,
     997,   943,   939,   992,    -1,    -1,    61,   378,   943,   940,
     992,    -1,    -1,   426,   378,   997,   943,   941,   984,    -1,
      65,   378,   997,  1153,    -1,   947,    -1,   423,   379,    -1,
      13,    -1,   951,    -1,    -1,     7,   378,   997,   945,   946,
      -1,    -1,   603,   816,   604,    -1,   380,  1153,    -1,    -1,
     425,   378,   997,   948,   949,    -1,    -1,    -1,   951,   950,
     238,   603,   816,   604,    -1,   952,    -1,   951,   605,   952,
      -1,  1301,    -1,   955,    -1,   953,   605,   955,    -1,     7,
     959,    -1,   954,   862,   962,    -1,     7,   863,    -1,   954,
     603,   860,   604,    -1,    -1,    56,   959,  1294,   956,   869,
     962,    -1,    -1,    -1,   328,   959,  1294,   957,   871,   888,
     958,   962,    -1,   135,   959,  1294,   961,    -1,   135,   179,
     248,   923,    -1,   135,   395,   248,    -1,   135,   915,  1294,
      -1,   127,   247,    -1,   143,   247,    -1,    14,   959,  1294,
     461,   115,  1285,    -1,    14,   959,  1294,   135,   115,    -1,
     424,   963,  1295,    -1,    86,   525,   892,   894,   898,    -1,
     849,    -1,   178,    -1,  1143,    -1,    -1,    70,    -1,    -1,
     224,    -1,    -1,   435,    -1,    52,    -1,    -1,     9,  1301,
      -1,   173,    -1,    -1,   525,    -1,   152,    -1,    19,    -1,
      -1,   490,   470,   969,   965,   973,    -1,   495,   470,   969,
      -1,    -1,   470,   490,   969,   966,   973,    -1,   470,   495,
     969,    -1,   490,   527,   968,    -1,    -1,   578,    82,   472,
      -1,    -1,   970,   971,    -1,   972,    -1,   971,   605,   972,
      -1,    -1,   487,    -1,   420,    -1,    -1,   552,   974,    -1,
     632,    -1,   974,   605,   632,    -1,    -1,   434,  1326,   976,
    1170,   184,  1298,    -1,    -1,    30,  1326,   978,  1170,   525,
    1298,    -1,    -1,    60,  1326,   980,  1170,   981,    -1,    -1,
     403,    -1,   165,    -1,    -1,   426,   997,  1326,   983,  1170,
     984,    -1,    -1,   985,    -1,   986,    -1,   986,   985,    -1,
     403,    -1,   165,    -1,   557,    -1,    -1,    15,   997,  1326,
     988,  1170,   992,    -1,    37,  1298,    -1,    -1,    61,  1326,
     991,  1170,   992,    -1,    -1,   993,    -1,   994,    -1,   994,
     993,    -1,   403,    -1,   169,    -1,   315,    -1,   165,    -1,
      57,    -1,   181,   554,    -1,    -1,   365,   997,  1326,   996,
    1170,   992,    -1,    -1,   354,    -1,   271,    -1,    -1,   424,
    1326,   999,  1002,    -1,    -1,   424,    96,  1000,  1004,    -1,
     424,   556,   650,  1001,    -1,  1304,   525,  1304,    -1,  1001,
     605,  1304,   525,  1304,    -1,  1003,    -1,  1002,   605,  1003,
      -1,  1295,   525,  1295,    -1,  1301,   525,  1301,    -1,    50,
     227,  1006,   241,  1008,    -1,  1007,    -1,  1006,   605,  1007,
      -1,  1295,  1013,    -1,  1301,    -1,   115,    -1,    -1,   270,
     227,   238,    50,  1010,  1011,    -1,  1012,    -1,  1011,   605,
    1012,    -1,  1295,  1013,  1016,    -1,    -1,  1014,  1015,    -1,
      -1,   916,   603,  1126,   604,    -1,    -1,   224,   257,    -1,
     455,   109,  1026,  1028,  1027,    -1,  1018,    -1,   455,  1020,
      -1,   603,  1019,   604,  1379,    -1,   455,  1022,    -1,   603,
    1019,   604,    -1,    -1,  1022,  1021,  1376,    -1,    -1,    -1,
    1023,  1031,  1035,  1024,  1025,  1034,    -1,  1142,  1148,    -1,
    1164,    -1,  1030,    -1,  1164,  1030,    -1,  1030,  1164,    -1,
      -1,   131,    -1,    88,   603,   597,   604,    -1,   184,  1100,
    1029,    -1,    -1,  1028,   605,  1036,    -1,  1036,    -1,   597,
      -1,    -1,   576,  1042,    -1,   184,  1100,  1134,  1139,  1136,
    1142,  1148,  1155,    -1,   184,   136,  1134,  1148,    -1,    -1,
    1032,    -1,  1032,  1033,    -1,  1033,    -1,   497,    -1,   214,
      -1,   131,    -1,   485,    -1,   480,    -1,   481,    -1,   483,
      -1,   484,    -1,   482,    -1,    13,    -1,    -1,   181,   553,
      -1,   275,   241,   463,   326,    -1,  1035,   605,  1036,    -1,
    1036,    -1,   597,    -1,  1037,  1039,  1038,  1040,    -1,    -1,
      -1,  1289,    -1,  1042,    -1,    -1,    19,  1301,    -1,    19,
    1298,    -1,  1301,    -1,  1298,    -1,    -1,   603,   604,    -1,
      -1,  1045,  1043,  1044,    -1,    -1,  1044,  1058,  1045,    -1,
    1045,   583,  1045,    -1,    -1,  1048,  1046,  1047,    -1,    -1,
    1047,  1059,  1048,    -1,   350,  1048,    -1,  1049,    -1,  1050,
     242,   531,    -1,  1050,   242,  1060,   531,    -1,  1050,   242,
     168,    -1,  1050,   242,  1060,   168,    -1,  1050,   242,   549,
      -1,  1050,   242,  1060,   549,    -1,  1050,    -1,  1050,   242,
     355,    -1,  1050,   242,  1060,   355,    -1,  1050,   153,  1051,
      -1,  1050,  1062,  1051,    -1,  1050,  1062,  1063,  1388,    -1,
    1051,    -1,  1052,   241,   603,  1086,   604,    -1,  1052,  1060,
     241,   603,  1086,   604,    -1,  1052,   241,  1388,    -1,  1052,
    1060,   241,  1388,    -1,  1052,   592,  1052,    17,  1051,    -1,
    1052,  1060,   592,  1052,    17,  1051,    -1,  1052,   474,   263,
    1052,    -1,  1052,   263,  1065,  1138,    -1,  1052,  1060,   263,
    1065,  1138,    -1,  1052,   417,  1052,    -1,  1052,  1060,   417,
    1052,    -1,  1052,    -1,  1052,   593,  1053,    -1,  1053,    -1,
    1053,   594,  1054,    -1,  1054,    -1,  1054,   464,  1055,    -1,
    1054,   465,  1055,    -1,  1055,    -1,  1055,   596,  1056,    -1,
    1055,   595,  1056,    -1,  1055,   596,  1064,  1128,    -1,  1055,
     595,  1064,  1128,    -1,  1056,    -1,  1056,   597,  1057,    -1,
    1056,   598,  1057,    -1,  1056,   599,  1057,    -1,  1056,   132,
    1057,    -1,  1056,   329,  1057,    -1,  1057,    -1,  1057,   600,
    1065,    -1,  1065,    -1,   371,    -1,   368,    -1,    17,    -1,
      16,    -1,   350,    -1,   349,    -1,   606,    -1,   349,    -1,
     152,    -1,   193,    -1,   208,    -1,   254,    -1,   285,    -1,
     344,    -1,    13,    -1,    18,    -1,   237,  1042,    -1,  1291,
      -1,  1065,    67,  1303,    -1,  1286,    -1,  1284,    -1,   609,
    1303,   462,  1042,    -1,   609,  1303,    -1,   609,   609,  1316,
    1303,   924,    -1,  1076,    -1,  1065,   370,  1065,    -1,   596,
    1065,    -1,   595,  1065,    -1,   601,  1065,    -1,  1061,  1065,
      -1,   603,  1042,   604,    -1,   603,  1042,   605,  1086,   604,
      -1,   448,   603,  1042,   605,  1086,   604,    -1,   161,  1386,
      -1,  1384,    -1,   607,  1301,  1042,   608,    -1,   303,  1089,
      10,   603,  1052,  1068,   604,    -1,    21,   603,  1042,   604,
      -1,    36,  1065,    -1,    54,   603,  1042,    19,  1085,   604,
      -1,   591,  1093,   575,  1095,  1094,   147,    -1,    86,   603,
    1042,   605,  1085,   604,    -1,    86,   603,  1042,   559,   893,
     604,    -1,   115,   603,  1291,   604,    -1,   564,   603,  1292,
     604,    -1,   189,   603,   604,    -1,   190,   603,  1042,   604,
      -1,   191,   603,  1042,   605,  1042,   604,    -1,   192,   603,
    1042,   605,  1042,   605,  1042,   604,    -1,     8,   603,  1042,
     605,  1042,   604,    -1,     8,   603,  1042,   605,   237,  1042,
    1128,   604,    -1,   428,   603,  1042,   605,  1042,   604,    -1,
      24,   603,  1042,   604,    -1,    24,   603,  1042,   605,  1042,
     604,    -1,    59,   603,  1086,   604,    -1,    59,   603,  1086,
     559,   893,   604,    -1,    58,   603,  1042,   604,    -1,    65,
     603,  1086,   604,    -1,    68,   603,  1042,   604,    -1,    77,
     603,  1086,   604,    -1,    78,   603,  1042,   605,  1086,   604,
      -1,    87,   603,  1042,   605,  1042,   605,  1042,   604,    -1,
      92,  1041,    -1,    95,  1041,    -1,    95,   603,  1042,   604,
      -1,    93,  1041,    -1,   101,   603,  1042,   605,  1064,  1128,
     604,    -1,   102,   603,  1042,   605,  1064,  1128,   604,    -1,
      96,   603,   604,    -1,   103,   603,  1042,   604,    -1,   108,
     603,  1042,   604,    -1,   142,   603,  1042,   605,  1086,   604,
      -1,   286,   603,  1042,   605,  1086,   604,    -1,   146,   603,
    1042,   604,    -1,   146,   603,  1042,   605,  1042,   604,    -1,
     114,   603,  1042,   605,  1299,   604,    -1,   145,   603,  1042,
     605,  1299,   604,    -1,   122,   603,  1042,   604,    -1,   122,
     603,  1042,   605,  1042,   604,    -1,   123,   603,  1042,   604,
      -1,   123,   603,  1042,   605,  1042,   604,    -1,   164,   603,
    1042,   605,  1042,   605,  1042,   604,    -1,   164,   603,  1042,
     605,  1042,   605,  1042,   605,  1042,   604,    -1,   164,   603,
    1042,   605,  1042,   605,  1042,   605,  1042,   605,  1042,   604,
      -1,   180,   603,  1042,   605,   356,   604,    -1,   185,   603,
    1042,   604,    -1,   185,   603,  1042,   605,  1042,   604,    -1,
     171,   603,  1042,   605,  1086,   604,    -1,  1067,    -1,   199,
     603,  1130,   605,  1042,   604,    -1,   219,   603,  1042,   604,
      -1,   223,   603,  1042,   605,  1042,   605,  1042,   604,    -1,
     234,   603,  1042,   605,  1042,   605,  1042,   605,  1042,   604,
      -1,  1064,  1128,   596,  1042,    -1,  1064,    -1,   252,   603,
     604,    -1,   252,   603,  1042,   604,    -1,   259,   603,  1042,
     605,  1042,   604,    -1,   272,   603,  1042,   605,  1042,   604,
      -1,   272,   603,  1042,   605,  1042,   605,  1042,   604,    -1,
     204,   603,  1042,   605,  1086,   604,    -1,   256,   603,  1042,
     605,  1086,   604,    -1,   278,   603,  1042,   604,    -1,   278,
     603,  1042,   605,  1042,   604,    -1,   293,   603,  1042,   605,
    1042,   604,    -1,   293,   603,  1042,   605,  1042,   605,  1042,
     604,    -1,   318,   603,  1042,   604,    -1,   322,   603,  1042,
     604,    -1,   329,   603,  1042,   605,  1042,   604,    -1,   330,
     603,  1042,   604,    -1,   351,  1041,    -1,   351,   603,  1042,
     604,    -1,   381,   603,  1042,   604,    -1,   360,   603,  1042,
     604,    -1,   390,   603,  1052,   241,  1042,   604,    -1,   401,
     603,  1042,   604,    -1,   404,   603,  1042,   604,    -1,   404,
     603,   604,    -1,   429,   603,  1042,   605,  1042,   605,  1042,
     604,    -1,   440,   603,  1042,   605,  1042,   604,    -1,   443,
     603,  1042,   604,    -1,   443,   603,  1042,   605,  1042,   604,
      -1,   446,   603,   604,    -1,   499,   603,  1042,   605,  1042,
     604,    -1,   499,   603,  1042,   605,   237,  1042,  1128,   604,
      -1,   453,   603,  1042,   604,    -1,   503,   603,  1042,   605,
    1042,   605,  1042,   604,    -1,   503,   603,  1042,   605,  1042,
     604,    -1,   503,   603,  1042,   184,  1042,   181,  1042,   604,
      -1,   503,   603,  1042,   184,  1042,   604,    -1,   504,   603,
    1042,   605,  1042,   605,  1042,   604,    -1,   508,  1041,    -1,
     508,   603,  1042,   604,    -1,   520,   603,  1042,   604,    -1,
     517,   603,  1042,   604,    -1,   517,   603,  1042,   605,  1042,
     604,    -1,   518,   603,  1129,   605,  1042,   605,  1042,   604,
      -1,   519,   603,  1129,   605,  1042,   605,  1042,   604,    -1,
     530,   603,  1042,   604,    -1,   530,   603,   255,  1042,   184,
    1042,   604,    -1,   530,   603,   526,  1042,   184,  1042,   604,
      -1,   530,   603,    46,  1042,   184,  1042,   604,    -1,   530,
     603,   255,   184,  1042,   604,    -1,   530,   603,   526,   184,
    1042,   604,    -1,   530,   603,    46,   184,  1042,   604,    -1,
     530,   603,  1042,   184,  1042,   604,    -1,   532,   603,  1042,
     605,  1042,   604,    -1,  1301,   610,  1301,   603,  1071,   604,
      -1,    -1,  1297,   603,  1066,  1071,   604,    -1,   547,   603,
    1282,   605,   356,   605,   356,   605,  1086,   604,    -1,   548,
     603,   604,    -1,   548,   603,  1042,   604,    -1,   556,   603,
     604,    -1,   560,  1041,    -1,   562,  1041,    -1,   561,  1041,
      -1,   574,   603,  1042,   604,    -1,   574,   603,  1042,   605,
    1042,   604,    -1,   586,   603,  1042,   604,    -1,   584,   603,
    1042,   604,    -1,   584,   603,  1042,   605,  1042,   604,    -1,
      33,   603,  1153,   605,  1042,   604,    -1,   167,   603,  1128,
     184,  1042,   604,    -1,    84,   603,  1042,   605,  1042,   604,
      -1,   197,   603,  1042,   604,    -1,   197,   603,  1042,   605,
    1042,   604,    -1,   198,   603,  1042,   604,    -1,   198,   603,
    1042,   605,  1042,   604,    -1,   195,   603,  1086,   604,    -1,
     268,   603,  1086,   604,    -1,   333,   603,  1086,   604,    -1,
     325,   603,  1042,   604,    -1,   325,   603,  1042,   605,  1042,
     604,    -1,   331,   603,  1042,   604,    -1,   331,   603,  1042,
     605,  1042,   604,    -1,   332,   603,  1042,   604,    -1,   332,
     603,  1042,   605,  1042,   604,    -1,   334,   603,  1086,   604,
      -1,   335,   603,  1086,   604,    -1,   387,   603,  1042,   605,
    1042,   604,    -1,   386,   603,  1042,   604,    -1,   386,   603,
    1042,   605,  1042,   604,    -1,   388,   603,  1042,   604,    -1,
     388,   603,  1042,   605,  1042,   604,    -1,   389,   603,  1086,
     604,    -1,   194,   603,  1042,   604,    -1,   194,   603,  1042,
     605,  1042,   604,    -1,   266,   603,  1042,   604,    -1,   266,
     603,  1042,   605,  1042,   604,    -1,  1069,  1070,    -1,   241,
      44,   326,    -1,    -1,   241,   340,   251,   326,    -1,    -1,
     578,   402,   163,    -1,    -1,  1072,    -1,    -1,  1073,  1074,
      -1,  1075,    -1,  1074,   605,  1075,    -1,  1037,  1042,  1038,
    1040,    -1,    29,   603,  1083,   604,    -1,    29,   603,   131,
    1083,   604,    -1,    39,   603,  1083,   604,    -1,    40,   603,
    1083,   604,    -1,    42,   603,  1083,   604,    -1,    88,   603,
    1133,   597,   604,    -1,    88,   603,  1083,   604,    -1,    -1,
      -1,    88,   603,   131,  1077,  1086,  1078,   604,    -1,   207,
     603,  1282,   605,   356,   605,   356,   605,  1083,   604,    -1,
     324,   603,  1083,   604,    -1,   324,   603,   131,  1083,   604,
      -1,   308,   603,  1083,   604,    -1,   308,   603,   131,  1083,
     604,    -1,   493,   603,  1083,   604,    -1,   569,   603,  1083,
     604,    -1,   494,   603,  1083,   604,    -1,   563,   603,  1083,
     604,    -1,   505,   603,  1083,   604,    -1,   505,   603,   131,
    1083,   604,    -1,    -1,   206,   603,  1080,  1079,  1086,  1082,
    1081,   604,    -1,    -1,   131,    -1,    -1,   457,  1283,    -1,
      -1,  1143,    -1,    -1,  1133,  1084,  1042,    -1,    36,   886,
      -1,    59,   886,   901,    -1,   342,   886,    -1,   468,    -1,
     468,   239,    -1,   551,    -1,   551,   239,    -1,   103,    -1,
     520,    -1,   100,    -1,   112,   881,    -1,    -1,  1087,  1088,
      -1,  1042,    -1,  1088,   605,  1042,    -1,  1090,    -1,   603,
    1090,   604,    -1,    -1,  1091,  1092,    -1,  1291,    -1,  1092,
     605,  1291,    -1,    -1,  1042,    -1,    -1,   589,  1042,    -1,
      -1,  1096,  1097,    -1,  1042,   590,  1042,    -1,  1097,   575,
    1042,   590,  1042,    -1,  1111,    -1,    -1,  1102,  1099,    -1,
    1101,    -1,  1098,    -1,  1101,   605,  1098,    -1,  1098,  1110,
    1098,    -1,  1098,   497,  1111,    -1,    -1,  1098,  1110,  1098,
     361,  1103,  1042,    -1,    -1,  1098,   497,  1111,   361,  1104,
    1042,    -1,    -1,  1098,  1110,  1098,   559,  1105,   603,  1127,
     604,    -1,  1098,   340,   246,  1111,    -1,    -1,  1098,   259,
    1121,   246,  1098,   361,  1106,  1042,    -1,    -1,  1098,   259,
    1121,   246,  1111,  1107,   559,   603,  1127,   604,    -1,  1098,
     340,   259,  1121,   246,  1111,    -1,    -1,  1098,   440,  1121,
     246,  1098,   361,  1108,  1042,    -1,    -1,  1098,   440,  1121,
     246,  1111,  1109,   559,   603,  1127,   604,    -1,  1098,   340,
     440,  1121,   246,  1111,    -1,   246,    -1,   230,   246,    -1,
      90,   246,    -1,    -1,  1112,  1295,  1132,  1122,    -1,    -1,
     607,  1301,  1098,   259,   372,   246,  1098,   361,  1113,  1042,
     608,    -1,  1120,  1119,  1116,    -1,   603,  1119,  1114,  1379,
     604,  1132,    -1,    -1,  1119,  1115,  1101,    -1,    -1,    -1,
    1117,  1031,  1035,  1118,   857,    -1,    -1,   455,    -1,    -1,
     372,    -1,    -1,   558,  1123,    -1,   178,  1123,    -1,   224,
    1123,    -1,    -1,   915,  1124,   603,  1125,   604,    -1,    -1,
    1126,    -1,  1126,   605,  1301,    -1,  1301,    -1,   395,    -1,
    1301,    -1,  1127,   605,  1301,    -1,  1129,    -1,   104,    -1,
     105,    -1,   106,    -1,   107,    -1,   216,    -1,   217,    -1,
     218,    -1,   318,    -1,   320,    -1,   321,    -1,   452,    -1,
     585,    -1,   108,    -1,   574,    -1,   219,    -1,   183,    -1,
     322,    -1,   330,    -1,   401,    -1,   453,    -1,   586,    -1,
     103,    -1,   520,    -1,   100,    -1,   517,    -1,    -1,    19,
      -1,   152,    -1,    -1,  1131,  1301,    -1,    -1,    13,    -1,
      -1,    -1,   576,  1135,  1042,    -1,    -1,    -1,   211,  1137,
    1042,    -1,   156,  1065,    -1,    -1,    -1,   205,    48,  1140,
    1141,    -1,  1140,   605,  1290,  1146,    -1,  1290,  1146,    -1,
      -1,   578,    91,    -1,   578,   442,    -1,    -1,  1143,    -1,
      -1,   369,    48,  1144,  1145,    -1,  1145,   605,  1290,  1146,
      -1,  1290,  1146,    -1,    -1,    20,    -1,   120,    -1,    -1,
    1149,    -1,    -1,  1149,    -1,   264,  1150,    -1,  1151,    -1,
    1151,   605,  1151,    -1,  1151,   359,  1151,    -1,  1284,    -1,
     536,    -1,   281,    -1,   356,    -1,    -1,   264,  1151,    -1,
     356,    -1,   213,    -1,   281,    -1,   536,    -1,   111,    -1,
     175,    -1,   356,    -1,   536,    -1,   281,    -1,   111,    -1,
     175,    -1,    -1,    -1,   397,  1301,  1156,   603,  1157,   604,
      -1,    -1,  1158,    -1,  1158,   605,  1159,    -1,  1159,    -1,
    1037,  1042,    -1,    -1,  1161,  1162,    -1,  1162,   605,  1163,
      -1,  1163,    -1,   609,  1303,    -1,  1303,    -1,    -1,   238,
     373,  1300,  1165,  1271,  1274,    -1,   238,   137,  1300,    -1,
     238,  1160,    -1,    -1,   134,  1167,  1086,    -1,   135,  1173,
    1326,  1172,  1170,   961,    -1,    -1,   135,   227,  1301,   361,
    1295,  1169,    -1,   135,    96,  1172,  1301,    -1,   135,   188,
    1172,   651,    -1,   135,   397,  1172,   651,    -1,   135,   556,
     650,  1356,    -1,   135,   571,  1172,  1170,   961,    -1,   135,
     157,  1172,   651,    -1,   135,   528,   651,    -1,   135,   510,
     765,   776,   777,    -1,   135,   276,   205,   766,   776,   777,
      -1,  1171,    -1,  1170,   605,  1171,    -1,  1295,    -1,    -1,
     223,   161,    -1,    -1,   512,    -1,    -1,    -1,   234,  1175,
    1180,   960,  1182,  1176,  1184,  1200,    -1,    -1,    -1,   429,
    1178,  1181,  1182,  1179,  1184,    -1,    -1,   284,    -1,   117,
      -1,   214,    -1,  1209,    -1,   117,    -1,   238,  1183,    -1,
    1183,    -1,  1171,    -1,  1187,    -1,   603,   604,  1187,    -1,
     603,  1186,   604,  1187,    -1,    -1,   461,  1185,  1191,    -1,
    1186,   605,  1288,    -1,  1288,    -1,   564,  1190,    -1,   565,
    1190,    -1,    -1,   837,  1188,  1376,    -1,    -1,   603,   837,
     604,  1189,  1379,    -1,  1190,   605,  1195,    -1,  1195,    -1,
    1191,   605,  1192,    -1,  1192,    -1,  1292,  1193,  1199,    -1,
     152,    -1,   462,    -1,    -1,  1193,    -1,    -1,   603,  1196,
    1197,   604,    -1,    -1,  1198,    -1,  1198,   605,  1199,    -1,
    1199,    -1,  1042,    -1,   115,    -1,    -1,    -1,   361,   138,
    1201,   248,   553,  1207,    -1,    -1,    -1,   553,  1203,  1209,
     960,  1100,   461,  1205,  1204,  1134,  1142,  1152,    -1,  1205,
     605,  1206,    -1,  1206,    -1,  1292,  1193,  1199,    -1,  1207,
     605,  1208,    -1,  1208,    -1,  1292,  1193,  1199,    -1,    -1,
     284,    -1,    -1,   119,  1211,  1219,  1212,    -1,    -1,   184,
    1295,  1213,  1134,  1142,  1152,    -1,    -1,  1216,  1214,   184,
    1100,  1134,    -1,    -1,   184,  1216,  1215,   559,  1100,  1134,
      -1,  1217,    -1,  1216,   605,  1217,    -1,  1301,  1218,  1132,
      -1,  1301,   610,  1301,  1218,  1132,    -1,    -1,   610,   597,
      -1,    -1,  1220,  1219,    -1,   403,    -1,   284,    -1,   224,
      -1,   532,  1222,  1171,    -1,    -1,   511,    -1,   466,   130,
      -1,    -1,   466,  1224,  1225,    -1,    97,  1237,    -1,  1233,
     509,  1232,  1237,    -1,  1233,   529,  1232,  1237,    -1,  1233,
     158,  1232,  1237,    -1,   511,   492,  1232,  1237,    -1,   364,
     509,  1232,  1237,    -1,   384,    -1,   385,    -1,    -1,   150,
     854,  1226,  1229,    -1,    -1,   150,    13,  1227,  1229,    -1,
    1233,    69,  1234,  1295,  1232,  1237,    -1,   345,   301,   181,
     470,   578,   289,   152,  1298,    17,   290,   152,  1154,    17,
     294,   152,  1153,    -1,  1230,   277,    -1,   470,   215,    -1,
      -1,    37,   158,  1235,  1236,  1228,  1147,    -1,   917,  1234,
    1295,  1232,  1134,    -1,    70,   533,    -1,   511,   533,    -1,
    1231,   149,    -1,   130,    -1,    25,    -1,   396,    -1,    88,
     603,   597,   604,   573,    -1,    88,   603,   597,   604,   154,
      -1,   573,  1147,    -1,   154,  1147,    -1,  1315,   492,  1237,
      -1,   231,   492,    -1,   336,   492,    -1,  1233,   399,    -1,
    1315,   568,  1237,    -1,   892,  1237,    -1,    68,  1237,    -1,
      34,   277,    -1,   277,    -1,   203,    -1,   203,   181,  1304,
      -1,    89,    96,   847,  1301,    -1,    89,   511,  1295,    -1,
      89,   571,  1295,    -1,   301,   492,    -1,   470,   492,    -1,
      89,   397,   651,    -1,    89,   188,   651,    -1,   397,   492,
    1237,    -1,   188,   492,  1237,    -1,   397,    66,   651,    -1,
     188,    66,   651,    -1,    89,   157,   651,    -1,   492,    -1,
     336,    -1,   277,    -1,   301,    -1,    36,    -1,    -1,   496,
      -1,    -1,  1234,  1301,    -1,    -1,   186,    -1,   184,    -1,
     241,    -1,    -1,   241,  1298,    -1,    -1,   184,  1154,    -1,
      -1,   263,  1298,    -1,   576,  1042,    -1,  1241,   455,   109,
    1026,  1028,  1027,    -1,    -1,  1241,  1295,  1239,  1243,    -1,
      -1,  1241,  1242,  1240,  1017,    -1,   120,    -1,   121,    -1,
      -1,   165,    -1,   380,    -1,    -1,  1283,    -1,  1301,    -1,
      -1,   177,   997,  1245,  1246,    -1,  1246,   605,  1247,    -1,
    1247,    -1,    -1,  1326,  1248,  1249,    -1,   509,   578,   408,
     275,    -1,   402,    50,    -1,   215,    -1,   396,    -1,   277,
      -1,   492,    -1,   470,    -1,   301,    -1,   124,    -1,   433,
      -1,    -1,  1170,    -1,    -1,   432,  1251,  1252,    -1,  1252,
     605,  1253,    -1,  1253,    -1,   470,    -1,   301,    -1,   402,
      50,    -1,    -1,   400,  1255,  1256,    -1,  1230,   277,  1257,
      -1,   525,  1298,    -1,    31,  1042,    -1,    -1,   249,  1259,
    1260,  1042,    -1,    -1,    81,    -1,   402,    -1,   558,  1301,
      -1,    -1,   270,    99,  1263,  1264,    -1,   270,   511,  1295,
     184,   301,    -1,    -1,    -1,    -1,  1269,  1268,   228,  1300,
    1265,  1270,   238,  1266,   511,  1295,  1267,  1271,  1274,  1277,
    1278,  1281,    -1,   184,   301,    -1,    -1,   271,    -1,    -1,
      79,    -1,   284,    -1,    -1,   429,    -1,   224,    -1,    -1,
      69,  1272,    -1,  1272,  1273,    -1,  1273,    -1,   514,    48,
    1283,    -1,   367,   144,    48,  1283,    -1,   144,    48,  1283,
      -1,   155,    48,  1283,    -1,    -1,   267,  1275,    -1,  1275,
    1276,    -1,  1276,    -1,   514,    48,  1283,    -1,   489,    48,
    1283,    -1,    -1,   224,   356,   267,    -1,    -1,   603,  1279,
     604,    -1,   603,   604,    -1,  1279,   605,  1280,    -1,  1280,
      -1,  1292,    -1,   609,  1303,    -1,    -1,   461,  1207,    -1,
    1299,    -1,   341,    -1,   541,   515,    -1,  1282,  1299,    -1,
    1299,    -1,   213,    -1,    38,    -1,   382,    -1,  1286,    -1,
     596,  1287,    -1,   595,  1287,    -1,  1282,    -1,  1287,    -1,
     355,    -1,   168,    -1,   531,    -1,   213,    -1,    38,    -1,
     541,   213,    -1,   541,    38,    -1,   103,  1282,    -1,   520,
    1282,    -1,   517,  1282,    -1,   356,    -1,   281,    -1,   536,
      -1,   111,    -1,   175,    -1,  1292,    -1,  1289,    -1,  1301,
     610,   597,    -1,  1301,   610,  1301,   610,   597,    -1,  1042,
      -1,  1301,    -1,  1293,    -1,  1301,    -1,  1293,    -1,  1301,
     610,  1301,    -1,   610,  1301,   610,  1301,    -1,  1301,   610,
    1301,   610,  1301,    -1,  1301,    -1,  1301,   610,  1301,   610,
    1301,    -1,  1301,   610,  1301,    -1,   610,  1301,    -1,  1301,
      -1,  1301,   610,  1301,    -1,   610,  1301,    -1,  1301,    -1,
     220,    -1,   222,    -1,   515,    -1,   515,    -1,   515,    -1,
    1297,    -1,   407,    -1,  1305,    -1,  1297,    -1,  1306,    -1,
    1301,    -1,  1298,    -1,   262,    -1,  1303,    -1,  1303,   609,
    1303,    -1,    93,  1041,    -1,  1306,    -1,    21,    -1,    25,
      -1,    30,    -1,    32,    -1,    49,    -1,    50,    -1,    58,
      -1,    60,    -1,    64,    -1,    71,    -1,    73,    -1,    84,
      -1,   110,    -1,   134,    -1,   147,    -1,   160,    -1,   177,
      -1,   209,    -1,   212,    -1,   236,    -1,   251,    -1,   352,
      -1,   364,    -1,   376,    -1,   378,    -1,   392,    -1,   423,
      -1,   426,    -1,   432,    -1,   434,    -1,   441,    -1,   450,
      -1,   454,    -1,   468,    -1,   470,    -1,   473,    -1,   490,
      -1,   495,    -1,   532,    -1,   543,    -1,   544,    -1,   582,
      -1,     6,    -1,     8,    -1,     9,    -1,    10,    -1,    11,
      -1,    12,    -1,    18,    -1,    23,    -1,    26,    -1,    27,
      -1,    28,    -1,    29,    -1,    34,    -1,    37,    -1,    41,
      -1,    45,    -1,    44,    -1,    47,    -1,    53,    -1,    55,
      -1,    57,    -1,    62,    -1,    63,    -1,    65,    -1,    66,
      -1,    68,    -1,    69,    -1,    72,    -1,    74,    -1,    75,
      -1,    76,    -1,    79,    -1,    82,    -1,    91,    -1,    99,
      -1,    98,    -1,   100,    -1,   103,    -1,   108,    -1,   116,
      -1,   118,    -1,   124,    -1,   126,    -1,   127,    -1,   128,
      -1,   129,    -1,   130,    -1,   137,    -1,   138,    -1,   139,
      -1,   148,    -1,   151,    -1,   150,    -1,   149,    -1,   154,
      -1,   156,    -1,   157,    -1,   158,    -1,   159,    -1,   163,
      -1,   165,    -1,   166,    -1,   169,    -1,   182,    -1,   143,
      -1,   186,    -1,   172,    -1,   173,    -1,   174,    -1,   183,
      -1,   196,    -1,   195,    -1,   199,    -1,   203,    -1,   200,
      -1,   210,    -1,   215,    -1,   219,    -1,   221,    -1,   240,
      -1,   225,    -1,   226,    -1,   229,    -1,   243,    -1,   244,
      -1,   231,    -1,   235,    -1,   420,    -1,   253,    -1,   257,
      -1,   260,    -1,   261,    -1,   268,    -1,   269,    -1,   271,
      -1,   274,    -1,   276,    -1,   277,    -1,   306,    -1,   301,
      -1,   288,    -1,   292,    -1,   289,    -1,   290,    -1,   302,
      -1,   291,    -1,   294,    -1,   287,    -1,   300,    -1,   296,
      -1,   295,    -1,   297,    -1,   298,    -1,   299,    -1,   304,
      -1,   305,    -1,   307,    -1,   309,    -1,   310,    -1,   311,
      -1,   315,    -1,   316,    -1,   317,    -1,   318,    -1,   319,
      -1,   322,    -1,   323,    -1,   328,    -1,   326,    -1,   330,
      -1,   333,    -1,   334,    -1,   335,    -1,   336,    -1,   338,
      -1,   337,    -1,   339,    -1,   342,    -1,   343,    -1,   346,
      -1,   345,    -1,   353,    -1,   347,    -1,   348,    -1,   358,
      -1,   359,    -1,   360,    -1,   362,    -1,   363,    -1,   375,
      -1,   377,    -1,   379,    -1,   380,    -1,   381,    -1,   383,
      -1,   384,    -1,   385,    -1,   387,    -1,   389,    -1,   393,
      -1,   394,    -1,   396,    -1,   398,    -1,   399,    -1,   401,
      -1,   402,    -1,   403,    -1,   411,    -1,   412,    -1,   413,
      -1,   414,    -1,   415,    -1,   418,    -1,   419,    -1,   422,
      -1,   425,    -1,   427,    -1,   430,    -1,   433,    -1,   436,
      -1,   437,    -1,   442,    -1,   444,    -1,   445,    -1,   447,
      -1,   448,    -1,   449,    -1,   451,    -1,   453,    -1,   459,
      -1,   458,    -1,   460,    -1,   469,    -1,   463,    -1,   467,
      -1,   472,    -1,   474,    -1,   482,    -1,   481,    -1,   484,
      -1,   487,    -1,   491,    -1,   492,    -1,   496,    -1,   498,
      -1,   499,    -1,   500,    -1,   501,    -1,   502,    -1,   506,
      -1,   507,    -1,   509,    -1,   510,    -1,   512,    -1,   513,
      -1,   516,    -1,   524,    -1,   527,    -1,   529,    -1,   517,
      -1,   518,    -1,   519,    -1,   520,    -1,   533,    -1,   534,
      -1,   535,    -1,   188,    -1,   537,    -1,   538,    -1,   539,
      -1,   540,    -1,   549,    -1,   552,    -1,   556,    -1,   557,
      -1,   568,    -1,   571,    -1,   565,    -1,   573,    -1,   572,
      -1,   574,    -1,   579,    -1,   581,    -1,   586,    -1,    -1,
     461,  1309,  1308,  1310,    -1,    -1,   366,    -1,  1311,    -1,
    1310,   605,  1311,    -1,    -1,  1312,  1317,    -1,  1314,    -1,
     200,    -1,   271,    -1,   460,    -1,    -1,   362,    -1,    -1,
     200,    -1,   271,    -1,   460,    -1,    -1,   200,   610,    -1,
     271,   610,    -1,   460,   610,    -1,  1318,    -1,  1314,  1319,
      -1,  1313,  1320,  1193,  1323,    -1,  1313,   527,   243,   261,
    1321,    -1,   609,  1303,  1193,  1042,    -1,   609,   609,  1316,
    1320,  1193,  1323,    -1,   892,   896,    -1,   337,  1193,  1042,
      -1,   337,   894,   898,    -1,   381,  1193,  1322,    -1,   381,
     181,  1304,  1193,  1322,    -1,  1301,    -1,  1301,   610,  1301,
      -1,   115,   610,  1301,    -1,   408,   537,    -1,   408,    72,
      -1,   427,   408,    -1,   458,    -1,   515,    -1,   381,   603,
     515,   604,    -1,   360,   603,   515,   604,    -1,  1042,    -1,
     115,    -1,   361,    -1,    13,    -1,    36,    -1,    -1,   275,
    1326,  1325,  1327,    -1,   511,    -1,   509,    -1,  1328,    -1,
    1327,   605,  1328,    -1,  1295,  1132,  1329,    -1,   408,    -1,
     580,    -1,   284,   580,    -1,   408,   271,    -1,    -1,   550,
    1331,  1326,    -1,   209,  1295,   364,  1132,    -1,   209,  1296,
      64,    -1,    -1,   209,  1296,   408,  1333,  1334,  1134,  1148,
      -1,  1335,    -1,  1301,  1336,    -1,   173,    -1,   346,    -1,
     173,    -1,   346,    -1,   394,    -1,   253,    -1,    -1,  1338,
    1337,   603,  1198,   604,    -1,   152,    -1,   193,    -1,   254,
      -1,   208,    -1,   285,    -1,   439,   650,  1340,    -1,  1344,
     361,  1343,  1355,   184,  1357,    -1,  1344,   361,   188,  1355,
     184,  1357,    -1,  1344,   361,   397,  1355,   184,  1357,    -1,
      13,  1345,   605,   202,   366,   184,  1357,    -1,   202,   650,
    1342,    -1,  1344,   361,  1343,  1355,   525,  1357,  1362,  1363,
      -1,  1344,   361,   188,  1355,   525,  1357,  1362,  1363,    -1,
    1344,   361,   397,  1355,   525,  1357,  1362,  1363,    -1,    -1,
     511,    -1,  1346,    -1,    13,  1345,    -1,    -1,   396,    -1,
    1347,    -1,  1346,   605,  1347,    -1,    -1,   455,  1348,  1359,
      -1,    -1,   234,  1349,  1359,    -1,    -1,   553,  1350,  1359,
      -1,    -1,   416,  1351,  1359,    -1,   119,    -1,   555,    -1,
     227,    -1,    14,    -1,    89,    -1,   135,    -1,   160,    -1,
     422,    -1,   467,    -1,   398,    -1,   172,    -1,   202,   366,
      -1,   466,    97,    -1,   506,    -1,    89,   512,   509,    -1,
     275,   509,    -1,   430,   470,    -1,   430,    63,    -1,    89,
     571,    -1,   466,   571,    -1,    89,   444,    -1,    14,   444,
      -1,    89,   556,    -1,   157,    -1,   528,    -1,    -1,    17,
      -1,  1354,  1352,  1353,    -1,  1354,    -1,   500,   515,    -1,
     244,   515,    -1,    62,   515,    -1,   597,    -1,  1301,   610,
     597,    -1,   597,   610,   597,    -1,  1295,    -1,  1304,    -1,
    1356,   605,  1304,    -1,  1358,    -1,  1357,   605,  1358,    -1,
    1304,   221,    48,   515,    -1,  1304,   221,    48,   381,   515,
      -1,  1304,    -1,    -1,   603,  1360,   604,    -1,  1360,   605,
    1361,    -1,  1361,    -1,  1301,    -1,    -1,   431,  1353,    -1,
     431,   488,    -1,   431,   581,    -1,   431,   348,    -1,    -1,
     578,  1364,    -1,  1364,  1365,    -1,  1365,    -1,   202,   366,
      -1,   305,  1153,    -1,   309,  1153,    -1,   304,  1153,    -1,
     310,  1153,    -1,    -1,    32,  1367,  1368,    -1,    -1,   579,
      -1,    -1,    17,   352,    55,    -1,    17,    55,    -1,    -1,
     421,    -1,   352,   421,    -1,    -1,   450,    -1,    73,  1368,
    1369,  1370,    -1,   441,  1368,  1369,  1370,    -1,   441,  1368,
     525,  1371,  1301,    -1,   450,  1301,    -1,   421,   450,  1301,
      -1,    -1,  1377,    -1,    -1,   545,  1383,  1378,  1018,    -1,
      -1,  1377,    -1,  1380,    -1,    -1,  1381,  1382,    -1,  1143,
    1147,    -1,  1149,    -1,    -1,   131,    -1,    13,    -1,  1390,
    1385,  1391,    -1,  1020,    -1,  1390,  1387,  1391,    -1,  1020,
      -1,  1390,  1389,  1391,    -1,  1020,    -1,   603,   455,    -1,
     604,    -1,  1394,  1393,    -1,  1395,  1394,  1400,    -1,  1400,
      -1,  1406,    -1,  1408,    -1,    -1,   116,   152,    93,  1041,
      -1,   116,   152,  1303,   609,  1303,    -1,  1396,    -1,  1396,
    1397,    -1,  1397,    -1,   371,   429,    -1,    12,   152,   538,
      -1,    12,   152,   317,    -1,    12,   152,   513,    -1,    -1,
    1397,    -1,    -1,   486,   454,   116,    -1,   486,   454,   240,
      -1,    -1,  1399,   571,  1295,  1401,  1402,    19,  1404,  1405,
      -1,    -1,   603,  1403,   604,    -1,  1301,    -1,  1403,   605,
    1301,    -1,   455,  1037,  1020,    -1,   603,  1037,  1019,   604,
    1379,    -1,    -1,   578,    61,   366,    -1,   578,    53,    61,
     366,    -1,   578,   271,    61,   366,    -1,    -1,   528,  1037,
     651,   732,   733,   361,  1037,  1295,   181,  1037,   140,   448,
    1407,   690,    -1,    -1,   858,  1037,   188,   651,  1409,   652,
      -1,    -1,    -1,    -1,    -1,   397,  1037,   651,  1410,   603,
    1411,   671,   604,  1412,   659,  1413,   690,    -1,   582,  1416,
    1415,  1417,    -1,   582,   147,  1415,  1419,    -1,   582,   392,
    1415,    -1,   582,    73,  1415,  1418,    -1,   582,   441,  1415,
      -1,   582,   412,    -1,  1283,    -1,  1283,   605,  1283,    -1,
    1283,   605,  1283,   605,  1153,    -1,    32,    -1,   490,    -1,
      -1,   246,    -1,   436,    -1,    -1,   363,   383,    -1,    -1,
      -1,   507,  1420,  1421,    -1,    -1,   181,   319,    -1,   236,
     384,  1301,   473,  1298,    -1,   544,   384,  1301,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const unsigned short int yyrline[] =
{
       0,   924,   924,   938,   941,   942,   947,   948,   949,   950,
     951,   952,   953,   954,   955,   956,   957,   958,   959,   960,
     961,   962,   963,   964,   965,   966,   967,   968,   969,   970,
     971,   972,   973,   974,   975,   976,   977,   978,   979,   980,
     981,   982,   983,   984,   985,   986,   987,   988,   989,   990,
     991,   992,   993,   994,   995,   996,   997,  1001,  1015,  1016,
    1021,  1035,  1042,  1052,  1051,  1067,  1069,  1073,  1074,  1077,
    1090,  1089,  1108,  1107,  1118,  1119,  1122,  1127,  1132,  1137,
    1142,  1146,  1151,  1155,  1159,  1163,  1167,  1172,  1176,  1180,
    1196,  1200,  1212,  1211,  1236,  1235,  1259,  1258,  1275,  1270,
    1331,  1330,  1338,  1342,  1347,  1356,  1355,  1376,  1405,  1406,
    1413,  1424,  1427,  1453,  1454,  1473,  1474,  1478,  1485,  1494,
    1495,  1508,  1508,  1559,  1560,  1561,  1562,  1563,  1564,  1565,
    1566,  1567,  1568,  1569,  1570,  1571,  1572,  1578,  1592,  1607,
    1619,  1628,  1664,  1670,  1678,  1690,  1627,  1720,  1721,  1725,
    1726,  1731,  1733,  1735,  1737,  1739,  1741,  1743,  1749,  1750,
    1751,  1755,  1759,  1767,  1766,  1779,  1781,  1785,  1789,  1796,
    1798,  1802,  1803,  1808,  1827,  1852,  1854,  1858,  1859,  1863,
    1888,  1889,  1890,  1891,  1895,  1896,  1900,  1901,  1906,  1909,
    1936,  1935,  1992,  2007,  2006,  2046,  2070,  2070,  2101,  2102,
    2107,  2128,  2152,  2158,  2173,  2174,  2178,  2182,  2191,  2196,
    2201,  2209,  2224,  2242,  2243,  2247,  2248,  2249,  2250,  2251,
    2252,  2253,  2254,  2255,  2256,  2257,  2258,  2259,  2260,  2264,
    2264,  2270,  2270,  2316,  2315,  2342,  2341,  2351,  2356,  2350,
    2384,  2384,  2398,  2430,  2461,  2489,  2552,  2571,  2570,  2590,
    2607,  2609,  2610,  2614,  2635,  2658,  2660,  2674,  2658,  2692,
    2694,  2695,  2699,  2701,  2733,  2699,  2753,  2761,  2762,  2767,
    2766,  2804,  2805,  2810,  2809,  2836,  2847,  2849,  2846,  2873,
    2872,  2890,  2892,  2897,  2899,  2901,  2918,  2923,  2929,  2936,
    2937,  2944,  2951,  2959,  2965,  2971,  2972,  2976,  2976,  2981,
    2982,  2983,  2987,  2988,  2989,  2993,  2993,  2998,  2999,  3000,
    3004,  3005,  3006,  3007,  3008,  3009,  3010,  3011,  3015,  3015,
    3020,  3021,  3022,  3026,  3027,  3028,  3029,  3030,  3034,  3034,
    3039,  3040,  3041,  3045,  3046,  3047,  3048,  3049,  3050,  3051,
    3055,  3055,  3060,  3061,  3062,  3066,  3067,  3068,  3073,  3080,
    3087,  3094,  3103,  3112,  3117,  3122,  3129,  3136,  3143,  3150,
    3157,  3164,  3171,  3183,  3195,  3207,  3209,  3213,  3218,  3230,
    3231,  3282,  3284,  3283,  3286,  3292,  3302,  3301,  3304,  3306,
    3304,  3310,  3312,  3311,  3314,  3313,  3342,  3343,  3348,  3347,
    3366,  3365,  3382,  3382,  3382,  3386,  3393,  3392,  3396,  3395,
    3399,  3398,  3404,  3405,  3410,  3411,  3415,  3416,  3420,  3431,
    3443,  3456,  3457,  3473,  3475,  3474,  3479,  3477,  3488,  3489,
    3493,  3504,  3520,  3521,  3537,  3538,  3561,  3562,  3567,  3645,
    3646,  3647,  3566,  3652,  3663,  3683,  3698,  3716,  3727,  3738,
    3745,  3746,  3750,  3764,  3817,  3825,  3852,  3853,  3858,  3857,
    3877,  3882,  3883,  3887,  3888,  3892,  3894,  3900,  3902,  3904,
    3906,  3908,  3910,  3920,  3936,  3919,  3950,  3951,  3954,  3955,
    3958,  3959,  3962,  3963,  3966,  3967,  3970,  3971,  3974,  3977,
    3978,  3980,  3982,  3985,  3986,  3989,  3990,  3991,  3994,  3995,
    4002,  4003,  4004,  4005,  4006,  4007,  4008,  4023,  4029,  4030,
    4031,  4032,  4047,  4048,  4049,  4050,  4051,  4052,  4053,  4054,
    4055,  4059,  4076,  4092,  4104,  4105,  4106,  4107,  4108,  4109,
    4112,  4113,  4114,  4117,  4118,  4121,  4122,  4125,  4126,  4127,
    4128,  4131,  4132,  4136,  4137,  4141,  4142,  4149,  4160,  4168,
    4182,  4186,  4193,  4194,  4206,  4208,  4212,  4216,  4217,  4221,
    4226,  4225,  4247,  4248,  4249,  4250,  4252,  4254,  4256,  4258,
    4260,  4262,  4265,  4268,  4271,  4274,  4276,  4279,  4282,  4283,
    4284,  4285,  4298,  4299,  4301,  4303,  4315,  4317,  4319,  4321,
    4322,  4323,  4324,  4325,  4326,  4328,  4330,  4332,  4332,  4334,
    4334,  4336,  4337,  4346,  4347,  4348,  4351,  4352,  4353,  4354,
    4355,  4359,  4363,  4364,  4368,  4369,  4373,  4374,  4375,  4376,
    4377,  4381,  4382,  4383,  4384,  4385,  4388,  4390,  4391,  4395,
    4396,  4397,  4400,  4407,  4408,  4411,  4412,  4415,  4416,  4417,
    4420,  4421,  4424,  4425,  4428,  4429,  4432,  4433,  4436,  4437,
    4438,  4439,  4441,  4442,  4448,  4454,  4460,  4466,  4467,  4483,
    4484,  4488,  4489,  4493,  4501,  4505,  4506,  4510,  4519,  4523,
    4524,  4527,  4537,  4538,  4542,  4543,  4546,  4547,  4550,  4551,
    4552,  4553,  4562,  4563,  4566,  4567,  4570,  4571,  4572,  4581,
    4583,  4585,  4590,  4589,  4601,  4602,  4605,  4606,  4610,  4611,
    4614,  4615,  4618,  4619,  4620,  4621,  4622,  4625,  4626,  4627,
    4628,  4629,  4632,  4633,  4634,  4646,  4647,  4650,  4651,  4654,
    4655,  4659,  4660,  4661,  4664,  4665,  4666,  4667,  4680,  4681,
    4682,  4685,  4686,  4690,  4693,  4694,  4697,  4698,  4709,  4710,
    4713,  4714,  4717,  4718,  4726,  4725,  4752,  4751,  4763,  4762,
    4781,  4780,  4800,  4798,  4815,  4810,  4873,  4878,  4883,  4888,
    4895,  4896,  4897,  4898,  4901,  4902,  4911,  4912,  4917,  4918,
    4920,  4921,  4922,  4923,  4925,  4927,  4928,  4937,  4938,  4942,
    4951,  4949,  4960,  4958,  4968,  4967,  4976,  4974,  4983,  4990,
    4994,  5001,  5005,  5010,  5009,  5025,  5026,  5031,  5040,  5039,
    5055,  5060,  5059,  5071,  5072,  5076,  5091,  5092,  5096,  5104,
    5105,  5109,  5114,  5113,  5121,  5130,  5120,  5142,  5149,  5153,
    5160,  5167,  5173,  5179,  5185,  5192,  5205,  5226,  5231,  5235,
    5242,  5243,  5246,  5247,  5251,  5252,  5253,  5257,  5258,  5259,
    5262,  5263,  5264,  5265,  5273,  5272,  5283,  5291,  5290,  5300,
    5310,  5319,  5320,  5327,  5327,  5333,  5334,  5338,  5339,  5340,
    5344,  5345,  5362,  5363,  5368,  5367,  5380,  5379,  5392,  5391,
    5401,  5402,  5403,  5408,  5407,  5419,  5420,  5423,  5424,  5427,
    5428,  5429,  5433,  5432,  5444,  5453,  5452,  5469,  5470,  5473,
    5474,  5477,  5478,  5479,  5480,  5481,  5482,  5486,  5485,  5497,
    5498,  5499,  5504,  5503,  5510,  5509,  5516,  5523,  5528,  5536,
    5537,  5540,  5552,  5563,  5572,  5573,  5576,  5589,  5590,  5595,
    5594,  5604,  5605,  5608,  5621,  5621,  5631,  5632,  5641,  5642,
    5654,  5662,  5671,  5673,  5676,  5696,  5700,  5699,  5719,  5727,
    5719,  5733,  5734,  5735,  5736,  5737,  5743,  5745,  5746,  5755,
    5757,  5759,  5760,  5761,  5769,  5770,  5782,  5784,  5791,  5793,
    5804,  5805,  5808,  5809,  5815,  5816,  5817,  5818,  5824,  5830,
    5831,  5835,  5838,  5840,  5846,  5856,  5857,  5858,  5871,  5889,
    5892,  5895,  5896,  5899,  5900,  5901,  5902,  5903,  5907,  5908,
    5912,  5912,  5929,  5931,  5936,  5937,  5937,  5954,  5956,  5961,
    5962,  5965,  5966,  5967,  5968,  5969,  5970,  5971,  5974,  5975,
    5976,  5977,  5979,  5981,  5984,  5994,  6006,  6008,  6010,  6012,
    6018,  6021,  6023,  6025,  6026,  6028,  6031,  6032,  6035,  6036,
    6039,  6041,  6043,  6046,  6047,  6048,  6050,  6052,  6055,  6056,
    6057,  6058,  6059,  6060,  6063,  6064,  6066,  6066,  6067,  6067,
    6068,  6068,  6069,  6069,  6071,  6072,  6073,  6074,  6075,  6076,
    6079,  6080,  6084,  6088,  6089,  6096,  6097,  6098,  6105,  6112,
    6124,  6125,  6127,  6128,  6129,  6130,  6131,  6132,  6137,  6142,
    6143,  6144,  6145,  6149,  6150,  6154,  6162,  6164,  6171,  6173,
    6184,  6186,  6197,  6208,  6219,  6230,  6232,  6234,  6236,  6238,
    6240,  6242,  6244,  6246,  6248,  6250,  6252,  6254,  6260,  6262,
    6264,  6269,  6271,  6273,  6275,  6280,  6282,  6284,  6286,  6288,
    6293,  6294,  6296,  6298,  6300,  6302,  6304,  6306,  6308,  6310,
    6312,  6314,  6316,  6320,  6322,  6332,  6334,  6336,  6338,  6340,
    6343,  6352,  6357,  6362,  6364,  6366,  6368,  6370,  6372,  6374,
    6376,  6381,  6386,  6388,  6390,  6392,  6394,  6396,  6398,  6404,
    6406,  6408,  6410,  6412,  6414,  6416,  6418,  6420,  6421,  6426,
    6428,  6430,  6432,  6434,  6436,  6438,  6440,  6442,  6449,  6456,
    6458,  6460,  6462,  6464,  6466,  6468,  6470,  6472,  6474,  6476,
    6478,  6480,  6482,  6484,  6498,  6497,  6611,  6615,  6620,  6622,
    6624,  6626,  6628,  6630,  6635,  6637,  6639,  6641,  6643,  6648,
    6652,  6654,  6656,  6658,  6660,  6662,  6666,  6669,  6672,  6674,
    6676,  6678,  6680,  6682,  6684,  6687,  6690,  6692,  6694,  6696,
    6698,  6700,  6703,  6705,  6707,  6709,  6714,  6716,  6721,  6722,
    6726,  6727,  6731,  6732,  6736,  6736,  6742,  6746,  6753,  6767,
    6769,  6771,  6773,  6775,  6777,  6779,  6782,  6784,  6781,  6787,
    6789,  6796,  6798,  6800,  6802,  6804,  6806,  6808,  6810,  6812,
    6815,  6814,  6828,  6829,  6832,  6833,  6838,  6841,  6853,  6852,
    6868,  6869,  6870,  6871,  6872,  6873,  6874,  6875,  6876,  6877,
    6878,  6882,  6882,  6887,  6888,  6891,  6892,  6895,  6895,  6900,
    6901,  6904,  6905,  6908,  6909,  6912,  6912,  6917,  6923,  6932,
    6933,  6933,  6942,  6947,  6948,  6968,  6970,  6974,  6972,  6987,
    6985,  7001,  6999,  7007,  7016,  7014,  7030,  7029,  7036,  7047,
    7045,  7062,  7061,  7073,  7083,  7084,  7085,  7090,  7090,  7109,
    7107,  7123,  7145,  7193,  7192,  7215,  7232,  7215,  7239,  7243,
    7262,  7263,  7266,  7267,  7273,  7280,  7288,  7288,  7294,  7295,
    7299,  7303,  7307,  7313,  7321,  7330,  7331,  7332,  7333,  7334,
    7335,  7336,  7337,  7338,  7339,  7340,  7341,  7342,  7345,  7346,
    7347,  7348,  7349,  7350,  7351,  7352,  7353,  7357,  7358,  7359,
    7360,  7363,  7365,  7366,  7369,  7370,  7373,  7375,  7379,  7381,
    7380,  7394,  7397,  7396,  7411,  7417,  7430,  7432,  7435,  7437,
    7441,  7442,  7455,  7472,  7474,  7478,  7477,  7491,  7493,  7497,
    7498,  7499,  7504,  7510,  7514,  7515,  7519,  7523,  7530,  7537,
    7546,  7547,  7548,  7549,  7554,  7558,  7566,  7567,  7568,  7569,
    7570,  7571,  7575,  7576,  7577,  7578,  7579,  7582,  7585,  7584,
    7606,  7607,  7610,  7611,  7614,  7627,  7627,  7637,  7638,  7642,
    7650,  7677,  7676,  7685,  7697,  7708,  7707,  7724,  7731,  7731,
    7742,  7749,  7761,  7773,  7777,  7783,  7809,  7815,  7820,  7828,
    7829,  7832,  7840,  7841,  7845,  7846,  7854,  7863,  7853,  7873,
    7880,  7872,  7890,  7902,  7903,  7904,  7908,  7909,  7912,  7913,
    7916,  7925,  7926,  7927,  7929,  7928,  7938,  7939,  7942,  7943,
    7944,  7944,  7945,  7945,  7949,  7950,  7953,  7955,  7958,  7966,
    7967,  7971,  7972,  7977,  7976,  7989,  7990,  7993,  7998,  8006,
    8007,  8010,  8012,  8012,  8020,  8029,  8019,  8051,  8052,  8055,
    8062,  8063,  8066,  8075,  8076,  8082,  8081,  8095,  8094,  8103,
    8102,  8110,  8109,  8119,  8120,  8123,  8129,  8140,  8141,  8145,
    8146,  8149,  8150,  8151,  8154,  8163,  8165,  8173,  8180,  8179,
    8193,  8201,  8210,  8219,  8228,  8237,  8246,  8255,  8264,  8263,
    8267,  8266,  8269,  8279,  8289,  8293,  8298,  8297,  8302,  8312,
    8317,  8323,  8334,  8342,  8347,  8352,  8354,  8356,  8358,  8360,
    8369,  8381,  8393,  8395,  8404,  8412,  8420,  8432,  8444,  8468,
    8475,  8481,  8489,  8497,  8501,  8505,  8512,  8519,  8529,  8539,
    8549,  8559,  8571,  8573,  8575,  8579,  8580,  8582,  8584,  8587,
    8588,  8591,  8592,  8595,  8596,  8599,  8600,  8603,  8604,  8606,
    8608,  8611,  8626,  8635,  8634,  8649,  8648,  8658,  8659,  8662,
    8663,  8664,  8669,  8670,  8671,  8679,  8678,  8699,  8700,  8703,
    8703,  8704,  8705,  8706,  8707,  8708,  8709,  8710,  8711,  8712,
    8713,  8716,  8717,  8721,  8720,  8729,  8730,  8733,  8734,  8735,
    8739,  8738,  8747,  8751,  8756,  8768,  8768,  8776,  8777,  8778,
    8783,  8793,  8792,  8805,  8822,  8833,  8838,  8821,  8851,  8857,
    8858,  8861,  8862,  8872,  8876,  8877,  8878,  8880,  8882,  8885,
    8886,  8889,  8894,  8901,  8906,  8912,  8914,  8917,  8918,  8921,
    8926,  8932,  8934,  8941,  8942,  8943,  8946,  8948,  8953,  8954,
    8959,  8960,  8966,  8971,  8973,  8975,  8980,  8982,  8993,  9006,
    9021,  9022,  9023,  9032,  9033,  9034,  9036,  9037,  9038,  9039,
    9040,  9054,  9068,  9069,  9070,  9073,  9074,  9075,  9076,  9084,
    9099,  9100,  9103,  9109,  9120,  9123,  9152,  9156,  9164,  9168,
    9230,  9245,  9269,  9270,  9286,  9296,  9299,  9300,  9301,  9305,
    9309,  9310,  9335,  9347,  9360,  9372,  9373,  9379,  9388,  9389,
    9398,  9399,  9400,  9403,  9412,  9419,  9441,  9442,  9443,  9444,
    9445,  9446,  9447,  9448,  9449,  9450,  9451,  9452,  9453,  9454,
    9455,  9456,  9457,  9458,  9459,  9460,  9461,  9462,  9463,  9464,
    9465,  9466,  9467,  9468,  9469,  9470,  9471,  9472,  9473,  9474,
    9475,  9476,  9477,  9478,  9479,  9480,  9481,  9482,  9483,  9493,
    9494,  9495,  9496,  9497,  9498,  9499,  9500,  9501,  9502,  9503,
    9504,  9505,  9506,  9507,  9508,  9509,  9510,  9511,  9512,  9513,
    9514,  9515,  9516,  9517,  9518,  9519,  9520,  9521,  9522,  9523,
    9524,  9525,  9526,  9527,  9528,  9529,  9530,  9531,  9532,  9533,
    9534,  9535,  9536,  9537,  9538,  9539,  9540,  9541,  9542,  9543,
    9544,  9545,  9546,  9547,  9548,  9549,  9550,  9551,  9552,  9553,
    9554,  9555,  9556,  9557,  9558,  9559,  9560,  9561,  9562,  9563,
    9564,  9565,  9566,  9567,  9568,  9569,  9570,  9571,  9572,  9573,
    9574,  9575,  9576,  9577,  9578,  9579,  9580,  9581,  9582,  9583,
    9584,  9585,  9586,  9587,  9588,  9589,  9590,  9591,  9592,  9593,
    9594,  9595,  9596,  9597,  9598,  9599,  9600,  9601,  9602,  9603,
    9604,  9605,  9606,  9607,  9608,  9609,  9610,  9611,  9612,  9613,
    9614,  9615,  9616,  9617,  9618,  9619,  9620,  9621,  9622,  9623,
    9624,  9625,  9626,  9627,  9628,  9629,  9630,  9631,  9632,  9633,
    9634,  9635,  9636,  9637,  9638,  9639,  9640,  9641,  9642,  9643,
    9644,  9645,  9646,  9647,  9648,  9649,  9650,  9651,  9652,  9653,
    9654,  9655,  9656,  9657,  9658,  9659,  9660,  9661,  9662,  9663,
    9664,  9665,  9666,  9667,  9668,  9669,  9670,  9671,  9672,  9673,
    9674,  9675,  9676,  9677,  9678,  9679,  9680,  9681,  9682,  9683,
    9684,  9685,  9686,  9687,  9688,  9689,  9690,  9691,  9692,  9693,
    9694,  9695,  9696,  9697,  9698,  9699,  9700,  9701,  9702,  9703,
    9704,  9705,  9706,  9707,  9708,  9709,  9710,  9711,  9712,  9713,
    9714,  9715,  9716,  9717,  9718,  9719,  9720,  9721,  9722,  9723,
    9724,  9725,  9726,  9727,  9728,  9729,  9730,  9731,  9732,  9733,
    9734,  9735,  9736,  9743,  9742,  9756,  9757,  9760,  9761,  9764,
    9764,  9831,  9832,  9833,  9834,  9838,  9839,  9843,  9844,  9845,
    9846,  9850,  9851,  9852,  9853,  9857,  9858,  9861,  9939,  9951,
    9955,  9960,  9967,  9982,  9995, 10016, 10023, 10061, 10104, 10118,
   10119, 10120, 10121, 10125, 10126, 10133, 10142, 10143, 10144, 10145,
   10146, 10154, 10153, 10169, 10170, 10173, 10174, 10177, 10185, 10186,
   10187, 10188, 10193, 10192, 10213, 10225, 10238, 10237, 10256, 10257,
   10261, 10262, 10266, 10267, 10268, 10269, 10271, 10270, 10281, 10282,
   10283, 10284, 10285, 10291, 10296, 10303, 10316, 10328, 10335, 10340,
   10348, 10361, 10375, 10377, 10380, 10381, 10388, 10390, 10394, 10395,
   10398, 10398, 10399, 10399, 10400, 10400, 10401, 10401, 10402, 10403,
   10404, 10405, 10406, 10407, 10408, 10409, 10410, 10411, 10412, 10413,
   10414, 10415, 10416, 10417, 10418, 10419, 10420, 10421, 10422, 10423,
   10424, 10425, 10426, 10431, 10432, 10436, 10437, 10441, 10451, 10461,
   10474, 10487, 10500, 10513, 10525, 10526, 10535, 10536, 10545, 10570,
   10572, 10579, 10583, 10586, 10587, 10590, 10611, 10612, 10616, 10620,
   10624, 10631, 10632, 10635, 10636, 10640, 10641, 10647, 10653, 10659,
   10669, 10668, 10678, 10679, 10683, 10684, 10685, 10689, 10690, 10691,
   10695, 10696, 10700, 10710, 10717, 10727, 10736, 10750, 10751, 10756,
   10755, 10788, 10789, 10790, 10794, 10794, 10818, 10819, 10823, 10824,
   10825, 10829, 10836, 10843, 10850, 10857, 10864, 10870, 10884, 10899,
   10901, 10906, 10908, 10910, 10922, 10932, 10937, 10951, 10953, 10955,
   10960, 10965, 10967, 10969, 10975, 10976, 10982, 10983, 10985, 10991,
   10990, 11005, 11006, 11010, 11015, 11023, 11032, 11045, 11046, 11048,
   11050, 11063, 11061, 11135, 11134, 11144, 11172, 11179, 11186, 11143,
   11213, 11217, 11221, 11225, 11229, 11233, 11239, 11246, 11253, 11262,
   11263, 11267, 11268, 11269, 11273, 11274, 11278, 11279, 11279, 11284,
   11285, 11289, 11298
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals. */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "END_OF_INPUT", "ABORT_SYM",
  "ACCESSIBLE_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ANALYZE_SYM",
  "AND_AND_SYM", "AND_SYM", "ANY_SYM", "AS", "ASC", "ASCII_SYM",
  "ASENSITIVE_SYM", "AT_SYM", "ATAN", "AUTHORS_SYM", "AUTO_INC",
  "AUTOEXTEND_SIZE_SYM", "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM",
  "BEFORE_SYM", "BEGIN_SYM", "BENCHMARK_SYM", "BERKELEY_DB_SYM", "BIGINT",
  "BINARY", "BINLOG_SYM", "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_SYM",
  "BIT_XOR", "BLOB_SYM", "BOOLEAN_SYM", "BOOL_SYM", "BOTH", "BTREE_SYM",
  "BY", "BYTE_SYM", "CACHE_SYM", "CALL_SYM", "CASCADE", "CASCADED",
  "CAST_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHARSET", "CHAR_SYM",
  "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM", "CLIENT_SYM", "CLOSE_SYM",
  "COALESCE", "CODE_SYM", "COLLATE_SYM", "COLLATION_SYM", "COLUMNS",
  "COLUMN_SYM", "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM",
  "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM", "CONCAT", "CONCAT_WS",
  "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM", "CONSISTENT_SYM",
  "CONSTRAINT", "CONTAINS_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "CONVERT_TZ_SYM", "COUNT_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_USER", "CURSOR_SYM", "CURTIME", "DATABASE", "DATABASES",
  "DATAFILE_SYM", "DATA_SYM", "DATETIME", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DAY_SYM", "DBXP_SYM",
  "DEALLOCATE_SYM", "DECIMAL_NUM", "DECIMAL_SYM", "DECLARE_SYM",
  "DECODE_SYM", "DEFAULT", "DEFINER_SYM", "DELAYED_SYM",
  "DELAY_KEY_WRITE_SYM", "DELETE_SYM", "DESC", "DESCRIBE",
  "DES_DECRYPT_SYM", "DES_ENCRYPT_SYM", "DES_KEY_FILE",
  "DETERMINISTIC_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD",
  "DISK_SYM", "DISK_USAGE_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM",
  "DO_SYM", "DROP", "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM",
  "EACH_SYM", "ELSEIF_SYM", "ELT_FUNC", "ENABLE_SYM", "ENCLOSED",
  "ENCODE_SYM", "ENCRYPT", "END", "ENDS_SYM", "ENGINES_SYM", "ENGINE_SYM",
  "ENUM", "EQ", "EQUAL_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENT_SYM", "EVENTS_SYM", "EVERY_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXPORT_SET", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM", "FAST_SYM", "FETCH_SYM",
  "FIELD_FUNC", "FILE_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FLUSH_SYM", "FORCE_SYM", "FOREIGN", "FORMAT_SYM",
  "FOR_SYM", "FOUND_SYM", "FRAC_SECOND_SYM", "FROM", "FROM_UNIXTIME",
  "FULL", "FULLTEXT_SYM", "FUNCTION_SYM", "FUNC_ARG0", "FUNC_ARG1",
  "FUNC_ARG2", "FUNC_ARG3", "GE", "GEOMCOLLFROMTEXT", "GEOMETRYCOLLECTION",
  "GEOMETRY_SYM", "GEOMFROMTEXT", "GEOMFROMWKB", "GET_FORMAT",
  "GLOBAL_SYM", "GOTO_SYM", "GRANT", "GRANTS", "GREATEST_SYM", "GROUP",
  "GROUP_CONCAT_SYM", "GROUP_UNIQUE_USERS", "GT_SYM", "HANDLER_SYM",
  "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM", "HIGH_PRIORITY",
  "HOSTS_SYM", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED",
  "IF", "IGNORE_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INNOBASE_SYM", "INOUT_SYM",
  "INSENSITIVE_SYM", "INSERT", "INSERT_METHOD", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM", "KEYS", "KEY_SYM",
  "KILL_SYM", "LABEL_SYM", "LANGUAGE_SYM", "LAST_INSERT_ID", "LAST_SYM",
  "LE", "LEADING", "LEAST_SYM", "LEAVES", "LEAVE_SYM", "LEFT", "LESS_SYM",
  "LEVEL_SYM", "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM",
  "LINEFROMTEXT", "LINES", "LINESTRING", "LIST_SYM", "LOAD", "LOCAL_SYM",
  "LOCATE", "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGFILE_SYM",
  "LOGS_SYM", "LOG_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM", "LONG_SYM",
  "LOOP_SYM", "LOW_PRIORITY", "LT", "MAKE_SET_SYM",
  "MASTER_CONNECT_RETRY_SYM", "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM",
  "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM",
  "MASTER_POS_WAIT", "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MATCH", "MAX_CONNECTIONS_PER_HOUR", "MAX_QUERIES_PER_HOUR", "MAX_ROWS",
  "MAX_SIZE_SYM", "MAX_SYM", "MAX_UPDATES_PER_HOUR",
  "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM", "MEDIUMBLOB", "MEDIUMINT",
  "MEDIUMTEXT", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MLINEFROMTEXT", "MODE_SYM",
  "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MPOINTFROMTEXT",
  "MPOLYFROMTEXT", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON",
  "MUTEX_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL",
  "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM", "OLD_PASSWORD", "ON",
  "ONE_SHOT_SYM", "ONE_SYM", "OPEN_SYM", "OPTIMIZE", "OPTION",
  "OPTIONALLY", "OR2_SYM", "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER",
  "OUTFILE", "OUT_SYM", "PACK_KEYS_SYM", "PARSER_SYM", "PARTIAL",
  "PARTITION_SYM", "PARTITIONING_SYM", "PARTITIONS_SYM", "PASSWORD",
  "PARAM_MARKER", "PHASE_SYM", "PLUGIN_SYM", "PLUGINS_SYM",
  "POINTFROMTEXT", "POINT_SYM", "POLYFROMTEXT", "POLYGON", "POSITION_SYM",
  "PRECISION", "PREPARE_SYM", "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM",
  "PRIVILEGES", "PROCEDURE", "PROCESS", "PROCESSLIST_SYM", "PURGE",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAND", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "REBUILD_SYM",
  "RECOVER_SYM", "REDO_BUFFER_SIZE_SYM", "REDOFILE_SYM", "REDUNDANT_SYM",
  "REFERENCES", "REGEXP", "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM",
  "RELAY_THREAD", "RELEASE_SYM", "RELOAD", "REMOVE_SYM", "RENAME",
  "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE",
  "REPLICATION", "REQUIRE_SYM", "RESET_SYM", "RESOURCES", "RESTORE_SYM",
  "RESTRICT", "RESUME_SYM", "RETURNS_SYM", "RETURN_SYM", "REVOKE", "RIGHT",
  "ROLLBACK_SYM", "ROLLUP_SYM", "ROUND", "ROUTINE_SYM", "ROWS_SYM",
  "ROW_COUNT_SYM", "ROW_FORMAT_SYM", "ROW_SYM", "RTREE_SYM",
  "SAVEPOINT_SYM", "SCHEDULE_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SET", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SMALLINT", "SNAPSHOT_SYM",
  "SONAME_SYM", "SOUNDS_SYM", "SPATIAL_SYM", "SPECIFIC_SYM",
  "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM", "SQL_BIG_RESULT",
  "SQL_BUFFER_RESULT", "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS",
  "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD",
  "SSL_SYM", "STARTING", "START_SYM", "STARTS_SYM", "STATUS_SYM",
  "STD_SYM", "STDDEV_SAMP_SYM", "STOP_SYM", "STORAGE_SYM", "STRAIGHT_JOIN",
  "STRING_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITION_SYM",
  "SUBPARTITIONS_SYM", "SUBSTRING", "SUBSTRING_INDEX", "SUM_SYM",
  "SUPER_SYM", "SUSPEND_SYM", "SYSDATE", "TABLES", "TABLESPACE",
  "TABLE_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED", "TEXT_STRING",
  "TEXT_SYM", "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM",
  "TINYBLOB", "TINYINT", "TINYTEXT", "THAN_SYM", "TO_SYM", "TRAILING",
  "TRANSACTION_SYM", "TRIGGER_SYM", "TRIGGERS_SYM", "TRIM", "TRUE_SYM",
  "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM",
  "ULONGLONG_NUM", "UNCOMMITTED_SYM", "UNDEFINED_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDOFILE_SYM", "UNDERSCORE_CHARSET", "UNDO_SYM",
  "UNICODE_SYM", "UNINSTALL_SYM", "UNION_SYM", "UNIQUE_SYM",
  "UNIQUE_USERS", "UNIX_TIMESTAMP", "UNKNOWN_SYM", "UNLOCK_SYM",
  "UNSIGNED", "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER",
  "USE_FRM", "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM",
  "UTC_TIME_SYM", "VAR_SAMP_SYM", "VALUES", "VALUE_SYM", "VARBINARY",
  "VARCHAR", "VARIABLES", "VARIANCE_SYM", "VARYING", "VIEW_SYM",
  "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WHEN_SYM", "WHERE", "WHILE_SYM",
  "WITH", "WORK_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM", "XOR", "YEARWEEK",
  "YEAR_MONTH_SYM", "YEAR_SYM", "ZEROFILL", "TABLE_REF_PRIORITY", "ELSE",
  "THEN_SYM", "CASE_SYM", "BETWEEN_SYM", "'|'", "'&'", "'-'", "'+'", "'*'",
  "'/'", "'%'", "'^'", "'~'", "NEG", "'('", "')'", "','", "'!'", "'{'",
  "'}'", "'@'", "'.'", "';'", "':'", "$accept", "query", "verb_clause",
  "statement", "deallocate", "deallocate_or_drop", "prepare",
  "prepare_src", "execute", "@1", "execute_using", "execute_var_list",
  "execute_var_ident", "help", "@2", "change", "@3", "master_defs",
  "master_def", "master_file_def", "create", "@4", "@5", "@6", "@7", "@8",
  "ev_schedule_time", "@9", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "@10", "ev_sql_stmt_inner", "clear_privileges", "sp_name",
  "create_function_tail", "@11", "@12", "@13", "@14", "@15",
  "sp_a_chistics", "sp_c_chistics", "sp_chistic", "sp_c_chistic",
  "sp_suid", "call", "@16", "sp_cparam_list", "sp_cparams",
  "sp_fdparam_list", "sp_fdparams", "sp_init_param", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "@17", "@18",
  "sp_cursor_stmt", "@19", "sp_handler_type", "sp_hcond_list", "sp_cond",
  "opt_value", "sp_hcond", "sp_decl_idents", "sp_opt_default",
  "sp_proc_stmt", "sp_proc_stmt_if", "@20", "sp_proc_stmt_statement",
  "@21", "sp_proc_stmt_return", "@22", "sp_proc_stmt_case_simple", "@23",
  "sp_proc_stmt_case", "@24", "@25", "sp_proc_stmt_unlabeled", "@26",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_label",
  "sp_proc_stmt_goto", "sp_proc_stmt_open", "sp_proc_stmt_fetch", "@27",
  "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list", "sp_if",
  "@28", "@29", "@30", "sp_elseifs", "sp_case", "@31", "@32", "@33",
  "sp_whens", "sp_labeled_control", "@34", "sp_opt_label",
  "sp_unlabeled_control", "@35", "@36", "@37", "@38", "trg_action_time",
  "trg_event", "change_tablespace_access", "change_tablespace_info",
  "tablespace_info", "opt_logfile_group_name", "alter_tablespace_info",
  "logfile_group_info", "alter_logfile_group_info", "add_log_file",
  "change_ts_option_list", "@39", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "@40", "tablespace_options",
  "tablespace_option", "alter_tablespace_option_list", "@41",
  "alter_tablespace_options", "alter_tablespace_option",
  "logfile_group_option_list", "@42", "logfile_group_options",
  "logfile_group_option", "alter_logfile_group_option_list", "@43",
  "alter_logfile_group_options", "alter_logfile_group_option",
  "ts_datafile", "lg_undofile", "lg_redofile", "tablespace_name",
  "logfile_group_name", "ts_access_mode", "opt_ts_initial_size",
  "opt_ts_autoextend_size", "opt_ts_max_size", "opt_ts_extent_size",
  "opt_ts_undo_buffer_size", "opt_ts_redo_buffer_size", "opt_ts_nodegroup",
  "opt_ts_comment", "opt_ts_engine", "opt_ts_wait", "ts_wait",
  "size_number", "create2", "@44", "create2a", "@45", "@46", "@47",
  "create3", "@48", "@49", "opt_partitioning", "partitioning", "@50",
  "partition_entry", "@51", "partition", "@52", "@53", "part_type_def",
  "@54", "@55", "@56", "opt_linear", "part_field_list",
  "part_field_item_list", "part_field_item", "part_func", "sub_part_func",
  "opt_no_parts", "opt_sub_part", "@57", "@58", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_no_subparts", "part_defs",
  "part_def_list", "part_definition", "@59", "@60", "@61", "@62",
  "part_name", "opt_part_values", "part_func_max", "part_range_func",
  "part_list_func", "part_list_item", "part_bit_expr", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "@63", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select", "@64", "@65", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "default_charset",
  "default_collation", "storage_engines", "row_types",
  "merge_insert_types", "opt_select_from", "udf_func_type", "udf_type",
  "field_list", "field_list_item", "column_def", "key_def",
  "opt_fulltext_parser", "opt_check_constraint", "check_constraint",
  "opt_constraint", "constraint", "field_spec", "@66", "type", "@67",
  "@68", "spatial_type", "char", "nchar", "varchar", "nvarchar",
  "int_type", "real_type", "float_options", "precision", "field_options",
  "field_opt_list", "field_option", "opt_len", "opt_precision",
  "opt_attribute", "opt_attribute_list", "attribute",
  "now_or_signed_literal", "charset", "charset_name",
  "charset_name_or_default", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "collation_name_or_default", "opt_default", "opt_binary", "opt_bin_mod",
  "opt_bin_charset", "opt_primary", "references", "@69", "opt_ref_list",
  "ref_list", "opt_on_delete", "opt_on_delete_list", "opt_on_delete_item",
  "delete_option", "key_type", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique_or_fulltext", "key_alg",
  "opt_btree_or_rtree", "key_list", "key_part", "opt_ident",
  "opt_component", "string_list", "alter", "@70", "@71", "@72", "@73",
  "@74", "@75", "ev_alter_on_schedule_completion", "opt_ev_rename_to",
  "opt_ev_sql_stmt", "ident_or_empty", "alter_commands", "@76", "@77",
  "@78", "@79", "remove_partitioning", "all_or_alt_part_name_list",
  "add_partition_rule", "@80", "add_part_extra", "reorg_partition_rule",
  "@81", "reorg_parts_rule", "@82", "alt_part_name_list",
  "alt_part_name_item", "alter_list", "add_column", "alter_list_item",
  "@83", "@84", "@85", "opt_column", "opt_ignore", "opt_restrict",
  "opt_place", "opt_to", "slave", "@86", "@87", "start",
  "start_transaction_opts", "slave_thread_opts", "@88",
  "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "restore", "@89", "backup", "@90", "checksum", "@91",
  "opt_checksum_type", "repair", "@92", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "analyze", "@93",
  "binlog_base64_event", "check", "@94", "opt_mi_check_type",
  "mi_check_types", "mi_check_type", "optimize", "@95",
  "opt_no_write_to_binlog", "rename", "@96", "@97", "rename_list",
  "table_to_table_list", "table_to_table", "db_to_db", "keycache",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload",
  "@98", "preload_list", "preload_keys", "cache_keys_spec", "@99",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select", "select_init",
  "select_paren", "select_init2", "@100", "select_part2", "@101", "@102",
  "select_into", "DBXP_select_options", "DBXP_select_from",
  "DBXP_select_item_list", "DBXP_where_clause", "select_from",
  "select_options", "select_option_list", "select_option",
  "select_lock_type", "select_item_list", "select_item", "remember_name",
  "remember_end", "select_item2", "select_alias", "optional_braces",
  "expr", "@103", "bool_or_expr", "bool_term", "@104", "bool_and_expr",
  "bool_factor", "bool_test", "bool_pri", "predicate", "bit_expr",
  "bit_term", "bit_factor", "value_expr", "term", "factor", "or", "and",
  "not", "not2", "comp_op", "all_or_any", "interval_expr", "simple_expr",
  "@105", "geometry_function", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "udf_expr_list",
  "udf_expr_list2", "@106", "udf_expr_list3", "udf_expr", "sum_expr",
  "@107", "@108", "@109", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "in_sum_expr", "@110", "cast_type", "expr_list",
  "@111", "expr_list2", "ident_list_arg", "ident_list", "@112",
  "ident_list2", "opt_expr", "opt_else", "when_list", "@113", "when_list2",
  "table_ref", "@114", "join_table_list", "derived_table_list",
  "join_table", "@115", "@116", "@117", "@118", "@119", "@120", "@121",
  "normal_join", "table_factor", "@122", "@123", "select_derived", "@124",
  "select_derived2", "@125", "@126", "get_select_lex",
  "select_derived_init", "opt_outer", "opt_key_definition",
  "key_usage_list", "@127", "key_list_or_empty", "key_usage_list2",
  "using_list", "interval", "interval_time_st", "date_time_type",
  "table_alias", "opt_table_alias", "opt_all", "where_clause", "@128",
  "having_clause", "@129", "opt_escape", "group_clause", "group_list",
  "olap_opt", "opt_order_clause", "order_clause", "@130", "order_list",
  "order_dir", "opt_limit_clause_init", "opt_limit_clause", "limit_clause",
  "limit_options", "limit_option", "delete_limit_clause", "ulong_num",
  "ulonglong_num", "procedure_clause", "@131", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "@132",
  "select_var_list", "select_var_ident", "into", "@133", "do", "@134",
  "drop", "@135", "table_list", "table_name", "if_exists", "opt_temporary",
  "insert", "@136", "@137", "replace", "@138", "@139",
  "insert_lock_option", "replace_lock_option", "insert2", "insert_table",
  "insert_field_spec", "@140", "fields", "insert_values", "@141", "@142",
  "values_list", "ident_eq_list", "ident_eq_value", "equal", "opt_equal",
  "no_braces", "@143", "opt_values", "values", "expr_or_default",
  "opt_insert_update", "@144", "update", "@145", "@146", "update_list",
  "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "@147", "single_multi", "@148", "@149",
  "@150", "table_wild_list", "table_wild_one", "opt_wild",
  "opt_delete_options", "opt_delete_option", "truncate", "opt_table_sym",
  "show", "@151", "show_param", "@152", "@153", "@154",
  "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "from_or_in", "binlog_in", "binlog_from", "wild_and_where",
  "describe", "@155", "@156", "describe_command", "opt_extended_describe",
  "opt_describe_column", "flush", "@157", "flush_options", "flush_option",
  "@158", "opt_table_list", "reset", "@159", "reset_options",
  "reset_option", "purge", "@160", "purge_options", "purge_option", "kill",
  "@161", "kill_option", "use", "load", "@162", "load_data", "@163",
  "@164", "@165", "opt_local", "load_data_lock", "opt_duplicate",
  "opt_field_term", "field_term_list", "field_term", "opt_line_term",
  "line_term_list", "line_term", "opt_ignore_lines",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "text_literal", "text_string", "param_marker",
  "signed_literal", "literal", "NUM_literal", "insert_ident", "table_wild",
  "order_ident", "simple_ident", "simple_ident_nospvar", "simple_ident_q",
  "field_ident", "table_ident", "table_ident_nodb", "IDENT_sys",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "ident", "label_ident", "ident_or_text", "user", "keyword", "keyword_sp",
  "set", "@166", "opt_option", "option_value_list", "option_type_value",
  "@167", "option_type", "option_type2", "opt_var_type",
  "opt_var_ident_type", "ext_option_value", "sys_option_value",
  "option_value", "internal_variable_name", "isolation_types",
  "text_or_password", "set_expr_or_default", "lock", "@168",
  "table_or_tables", "table_lock_list", "table_lock", "lock_option",
  "unlock", "@169", "handler", "@170", "handler_read_or_scan",
  "handler_scan_function", "handler_rkey_function", "@171",
  "handler_rkey_mode", "revoke", "revoke_command", "grant",
  "grant_command", "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "@172", "@173", "@174",
  "@175", "opt_and", "require_list", "require_list_element", "grant_ident",
  "user_list", "grant_list", "grant_user", "opt_column_list",
  "column_list", "column_list_id", "require_clause", "grant_options",
  "grant_option_list", "grant_option", "begin", "@176", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "union_clause", "union_list", "@177",
  "union_opt", "union_order_or_limit", "@178", "order_or_limit",
  "union_option", "singlerow_subselect", "singlerow_subselect_init",
  "exists_subselect", "exists_subselect_init", "in_subselect",
  "in_subselect_init", "subselect_start", "subselect_end",
  "view_or_trigger_or_sp", "view_or_trigger_or_sp_tail", "definer",
  "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_algorithm_opt", "view_suid", "view_tail", "@179", "view_list_opt",
  "view_list", "view_select", "view_check_option", "trigger_tail", "@180",
  "sp_tail", "@181", "@182", "@183", "@184", "@185", "xa", "xid",
  "begin_or_start", "opt_join_or_resume", "opt_one_phase", "opt_suspend",
  "@186", "opt_migrate", "install", "uninstall", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const unsigned short int yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   124,    38,    45,    43,    42,    47,    37,
      94,   126,   848,    40,    41,    44,    33,   123,   125,    64,
      46,    59,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const unsigned short int yyr1[] =
{
       0,   613,   614,   614,   615,   615,   616,   616,   616,   616,
     616,   616,   616,   616,   616,   616,   616,   616,   616,   616,
     616,   616,   616,   616,   616,   616,   616,   616,   616,   616,
     616,   616,   616,   616,   616,   616,   616,   616,   616,   616,
     616,   616,   616,   616,   616,   616,   616,   616,   616,   616,
     616,   616,   616,   616,   616,   616,   616,   617,   618,   618,
     619,   620,   620,   622,   621,   623,   623,   624,   624,   625,
     627,   626,   629,   628,   630,   630,   631,   631,   631,   631,
     631,   631,   631,   631,   631,   631,   631,   631,   632,   632,
     632,   632,   634,   633,   635,   633,   636,   633,   637,   633,
     638,   633,   633,   633,   633,   640,   639,   639,   641,   641,
     641,   642,   642,   643,   643,   644,   644,   645,   645,   646,
     646,   648,   647,   649,   649,   649,   649,   649,   649,   649,
     649,   649,   649,   649,   649,   649,   649,   650,   651,   651,
     652,   653,   654,   655,   656,   657,   652,   658,   658,   659,
     659,   660,   660,   660,   660,   660,   660,   660,   661,   661,
     661,   662,   662,   664,   663,   665,   665,   666,   666,   667,
     667,   668,   668,   669,   670,   671,   671,   672,   672,   673,
     674,   674,   674,   674,   675,   675,   676,   676,   677,   677,
     679,   678,   678,   680,   678,   678,   682,   681,   683,   683,
     684,   684,   685,   685,   686,   686,   687,   687,   687,   687,
     687,   688,   688,   689,   689,   690,   690,   690,   690,   690,
     690,   690,   690,   690,   690,   690,   690,   690,   690,   692,
     691,   694,   693,   696,   695,   698,   697,   700,   701,   699,
     703,   702,   704,   705,   706,   707,   708,   710,   709,   711,
     712,   712,   712,   713,   713,   715,   716,   717,   714,   718,
     718,   718,   720,   721,   722,   719,   723,   723,   723,   725,
     724,   726,   726,   728,   727,   727,   729,   730,   727,   731,
     727,   732,   732,   733,   733,   733,   734,   735,   736,   737,
     737,   738,   738,   739,   740,   741,   741,   743,   742,   744,
     744,   744,   745,   745,   745,   747,   746,   748,   748,   748,
     749,   749,   749,   749,   749,   749,   749,   749,   751,   750,
     752,   752,   752,   753,   753,   753,   753,   753,   755,   754,
     756,   756,   756,   757,   757,   757,   757,   757,   757,   757,
     759,   758,   760,   760,   760,   761,   761,   761,   762,   763,
     764,   765,   766,   767,   767,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   777,   778,   778,   779,
     779,   780,   781,   780,   780,   780,   783,   782,   784,   785,
     782,   786,   787,   786,   788,   786,   789,   789,   791,   790,
     793,   792,   795,   796,   794,   797,   798,   797,   799,   797,
     800,   797,   801,   801,   802,   802,   803,   803,   804,   805,
     806,   807,   807,   808,   809,   808,   810,   808,   811,   811,
     812,   813,   814,   814,   815,   815,   816,   816,   818,   819,
     820,   821,   817,   822,   823,   823,   823,   824,   824,   825,
     826,   826,   827,   828,   829,   829,   830,   830,   832,   831,
     833,   834,   834,   835,   835,   836,   836,   836,   836,   836,
     836,   836,   836,   838,   839,   837,   840,   840,   841,   841,
     842,   842,   843,   843,   844,   844,   845,   845,   846,   847,
     847,   848,   848,   849,   849,   850,   850,   850,   851,   851,
     851,   851,   851,   851,   851,   851,   851,   851,   851,   851,
     851,   851,   851,   851,   851,   851,   851,   851,   851,   851,
     851,   852,   853,   854,   855,   855,   855,   855,   855,   855,
     856,   856,   856,   857,   857,   858,   858,   859,   859,   859,
     859,   860,   860,   861,   861,   862,   862,   863,   863,   863,
     863,   863,   864,   864,   865,   865,   866,   867,   867,   868,
     870,   869,   871,   871,   871,   871,   871,   871,   871,   871,
     871,   871,   871,   871,   871,   871,   871,   871,   871,   871,
     871,   871,   871,   871,   871,   871,   871,   871,   871,   871,
     871,   871,   871,   871,   871,   871,   871,   872,   871,   873,
     871,   871,   871,   874,   874,   874,   874,   874,   874,   874,
     874,   875,   876,   876,   877,   877,   878,   878,   878,   878,
     878,   879,   879,   879,   879,   879,   880,   880,   880,   881,
     881,   881,   882,   883,   883,   884,   884,   885,   885,   885,
     886,   886,   887,   887,   888,   888,   889,   889,   890,   890,
     890,   890,   890,   890,   890,   890,   890,   890,   890,   891,
     891,   892,   892,   893,   893,   894,   894,   895,   895,   896,
     896,   897,   898,   898,   899,   899,   900,   900,   901,   901,
     901,   901,   901,   901,   902,   902,   903,   903,   903,   903,
     904,   904,   906,   905,   907,   907,   908,   908,   909,   909,
     910,   910,   911,   911,   911,   911,   911,   912,   912,   912,
     912,   912,   913,   913,   913,   914,   914,   915,   915,   916,
     916,   917,   917,   917,   918,   918,   918,   918,   919,   919,
     919,   920,   920,   920,   921,   921,   922,   922,   923,   923,
     924,   924,   925,   925,   927,   926,   928,   926,   929,   926,
     930,   926,   931,   926,   932,   926,   926,   926,   926,   926,
     933,   933,   933,   933,   934,   934,   935,   935,   936,   936,
     937,   937,   937,   937,   937,   937,   937,   937,   937,   937,
     938,   937,   939,   937,   940,   937,   941,   937,   937,   937,
     942,   943,   943,   945,   944,   946,   946,   946,   948,   947,
     949,   950,   949,   951,   951,   952,   953,   953,   954,   955,
     955,   955,   956,   955,   957,   958,   955,   955,   955,   955,
     955,   955,   955,   955,   955,   955,   955,   955,   955,   955,
     959,   959,   960,   960,   961,   961,   961,   962,   962,   962,
     963,   963,   963,   963,   965,   964,   964,   966,   964,   964,
     967,   968,   968,   970,   969,   971,   971,   972,   972,   972,
     973,   973,   974,   974,   976,   975,   978,   977,   980,   979,
     981,   981,   981,   983,   982,   984,   984,   985,   985,   986,
     986,   986,   988,   987,   989,   991,   990,   992,   992,   993,
     993,   994,   994,   994,   994,   994,   994,   996,   995,   997,
     997,   997,   999,   998,  1000,   998,   998,  1001,  1001,  1002,
    1002,  1003,  1004,  1005,  1006,  1006,  1007,  1008,  1008,  1010,
    1009,  1011,  1011,  1012,  1014,  1013,  1015,  1015,  1016,  1016,
    1017,  1017,  1018,  1018,  1019,  1019,  1021,  1020,  1023,  1024,
    1022,  1025,  1025,  1025,  1025,  1025,  1026,  1026,  1026,  1027,
    1028,  1028,  1028,  1028,  1029,  1029,  1030,  1030,  1031,  1031,
    1032,  1032,  1033,  1033,  1033,  1033,  1033,  1033,  1033,  1033,
    1033,  1033,  1034,  1034,  1034,  1035,  1035,  1035,  1036,  1037,
    1038,  1039,  1039,  1040,  1040,  1040,  1040,  1040,  1041,  1041,
    1043,  1042,  1044,  1044,  1045,  1046,  1045,  1047,  1047,  1048,
    1048,  1049,  1049,  1049,  1049,  1049,  1049,  1049,  1050,  1050,
    1050,  1050,  1050,  1050,  1051,  1051,  1051,  1051,  1051,  1051,
    1051,  1051,  1051,  1051,  1051,  1051,  1052,  1052,  1053,  1053,
    1054,  1054,  1054,  1055,  1055,  1055,  1055,  1055,  1056,  1056,
    1056,  1056,  1056,  1056,  1057,  1057,  1058,  1058,  1059,  1059,
    1060,  1060,  1061,  1061,  1062,  1062,  1062,  1062,  1062,  1062,
    1063,  1063,  1064,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1066,  1065,  1065,  1065,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,  1065,
    1067,  1067,  1067,  1067,  1067,  1067,  1067,  1067,  1067,  1067,
    1067,  1067,  1067,  1067,  1067,  1067,  1067,  1067,  1067,  1067,
    1067,  1067,  1067,  1067,  1067,  1067,  1068,  1068,  1069,  1069,
    1070,  1070,  1071,  1071,  1073,  1072,  1074,  1074,  1075,  1076,
    1076,  1076,  1076,  1076,  1076,  1076,  1077,  1078,  1076,  1076,
    1076,  1076,  1076,  1076,  1076,  1076,  1076,  1076,  1076,  1076,
    1079,  1076,  1080,  1080,  1081,  1081,  1082,  1082,  1084,  1083,
    1085,  1085,  1085,  1085,  1085,  1085,  1085,  1085,  1085,  1085,
    1085,  1087,  1086,  1088,  1088,  1089,  1089,  1091,  1090,  1092,
    1092,  1093,  1093,  1094,  1094,  1096,  1095,  1097,  1097,  1098,
    1099,  1098,  1100,  1101,  1101,  1102,  1102,  1103,  1102,  1104,
    1102,  1105,  1102,  1102,  1106,  1102,  1107,  1102,  1102,  1108,
    1102,  1109,  1102,  1102,  1110,  1110,  1110,  1112,  1111,  1113,
    1111,  1111,  1111,  1115,  1114,  1117,  1118,  1116,  1119,  1120,
    1121,  1121,  1122,  1122,  1122,  1122,  1124,  1123,  1125,  1125,
    1126,  1126,  1126,  1127,  1127,  1128,  1128,  1128,  1128,  1128,
    1128,  1128,  1128,  1128,  1128,  1128,  1128,  1128,  1129,  1129,
    1129,  1129,  1129,  1129,  1129,  1129,  1129,  1130,  1130,  1130,
    1130,  1131,  1131,  1131,  1132,  1132,  1133,  1133,  1134,  1135,
    1134,  1136,  1137,  1136,  1138,  1138,  1139,  1139,  1140,  1140,
    1141,  1141,  1141,  1142,  1142,  1144,  1143,  1145,  1145,  1146,
    1146,  1146,  1147,  1147,  1148,  1148,  1149,  1150,  1150,  1150,
    1151,  1151,  1151,  1151,  1152,  1152,  1153,  1153,  1153,  1153,
    1153,  1153,  1154,  1154,  1154,  1154,  1154,  1155,  1156,  1155,
    1157,  1157,  1158,  1158,  1159,  1161,  1160,  1162,  1162,  1163,
    1163,  1165,  1164,  1164,  1164,  1167,  1166,  1168,  1169,  1168,
    1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,  1170,
    1170,  1171,  1172,  1172,  1173,  1173,  1175,  1176,  1174,  1178,
    1179,  1177,  1180,  1180,  1180,  1180,  1181,  1181,  1182,  1182,
    1183,  1184,  1184,  1184,  1185,  1184,  1186,  1186,  1187,  1187,
    1188,  1187,  1189,  1187,  1190,  1190,  1191,  1191,  1192,  1193,
    1193,  1194,  1194,  1196,  1195,  1197,  1197,  1198,  1198,  1199,
    1199,  1200,  1201,  1200,  1203,  1204,  1202,  1205,  1205,  1206,
    1207,  1207,  1208,  1209,  1209,  1211,  1210,  1213,  1212,  1214,
    1212,  1215,  1212,  1216,  1216,  1217,  1217,  1218,  1218,  1219,
    1219,  1220,  1220,  1220,  1221,  1222,  1222,  1223,  1224,  1223,
    1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,  1226,  1225,
    1227,  1225,  1225,  1225,  1225,  1225,  1228,  1225,  1225,  1225,
    1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,
    1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,
    1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,  1225,
    1225,  1225,  1229,  1229,  1229,  1230,  1230,  1231,  1231,  1232,
    1232,  1233,  1233,  1234,  1234,  1235,  1235,  1236,  1236,  1237,
    1237,  1237,  1238,  1239,  1238,  1240,  1238,  1241,  1241,  1242,
    1242,  1242,  1243,  1243,  1243,  1245,  1244,  1246,  1246,  1248,
    1247,  1247,  1247,  1247,  1247,  1247,  1247,  1247,  1247,  1247,
    1247,  1249,  1249,  1251,  1250,  1252,  1252,  1253,  1253,  1253,
    1255,  1254,  1256,  1257,  1257,  1259,  1258,  1260,  1260,  1260,
    1261,  1263,  1262,  1262,  1265,  1266,  1267,  1264,  1264,  1268,
    1268,  1269,  1269,  1269,  1270,  1270,  1270,  1271,  1271,  1272,
    1272,  1273,  1273,  1273,  1273,  1274,  1274,  1275,  1275,  1276,
    1276,  1277,  1277,  1278,  1278,  1278,  1279,  1279,  1280,  1280,
    1281,  1281,  1282,  1282,  1282,  1282,  1283,  1283,  1283,  1284,
    1285,  1285,  1285,  1286,  1286,  1286,  1286,  1286,  1286,  1286,
    1286,  1286,  1286,  1286,  1286,  1287,  1287,  1287,  1287,  1287,
    1288,  1288,  1289,  1289,  1290,  1291,  1291,  1292,  1292,  1293,
    1293,  1293,  1294,  1294,  1294,  1294,  1295,  1295,  1295,  1296,
    1297,  1297,  1298,  1299,  1300,  1301,  1301,  1301,  1302,  1302,
    1303,  1303,  1303,  1304,  1304,  1304,  1305,  1305,  1305,  1305,
    1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,
    1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,
    1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,
    1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,  1305,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,  1306,
    1306,  1306,  1306,  1308,  1307,  1309,  1309,  1310,  1310,  1312,
    1311,  1313,  1313,  1313,  1313,  1314,  1314,  1315,  1315,  1315,
    1315,  1316,  1316,  1316,  1316,  1317,  1317,  1318,  1318,  1319,
    1319,  1319,  1319,  1319,  1319,  1319,  1320,  1320,  1320,  1321,
    1321,  1321,  1321,  1322,  1322,  1322,  1323,  1323,  1323,  1323,
    1323,  1325,  1324,  1326,  1326,  1327,  1327,  1328,  1329,  1329,
    1329,  1329,  1331,  1330,  1332,  1332,  1333,  1332,  1334,  1334,
    1335,  1335,  1336,  1336,  1336,  1336,  1337,  1336,  1338,  1338,
    1338,  1338,  1338,  1339,  1340,  1340,  1340,  1340,  1341,  1342,
    1342,  1342,  1343,  1343,  1344,  1344,  1345,  1345,  1346,  1346,
    1348,  1347,  1349,  1347,  1350,  1347,  1351,  1347,  1347,  1347,
    1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,
    1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,
    1347,  1347,  1347,  1352,  1352,  1353,  1353,  1354,  1354,  1354,
    1355,  1355,  1355,  1355,  1356,  1356,  1357,  1357,  1358,  1358,
    1358,  1359,  1359,  1360,  1360,  1361,  1362,  1362,  1362,  1362,
    1362,  1363,  1363,  1364,  1364,  1365,  1365,  1365,  1365,  1365,
    1367,  1366,  1368,  1368,  1369,  1369,  1369,  1370,  1370,  1370,
    1371,  1371,  1372,  1373,  1373,  1374,  1375,  1376,  1376,  1378,
    1377,  1379,  1379,  1379,  1381,  1380,  1382,  1382,  1383,  1383,
    1383,  1384,  1385,  1386,  1387,  1388,  1389,  1390,  1391,  1392,
    1392,  1393,  1393,  1393,  1394,  1394,  1394,  1395,  1395,  1395,
    1396,  1397,  1397,  1397,  1398,  1398,  1399,  1399,  1399,  1401,
    1400,  1402,  1402,  1403,  1403,  1404,  1404,  1405,  1405,  1405,
    1405,  1407,  1406,  1409,  1408,  1410,  1411,  1412,  1413,  1408,
    1414,  1414,  1414,  1414,  1414,  1414,  1415,  1415,  1415,  1416,
    1416,  1417,  1417,  1417,  1418,  1418,  1419,  1420,  1419,  1421,
    1421,  1422,  1423
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const unsigned char yyr2[] =
{
       0,     2,     1,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       4,     1,     2,     0,     4,     0,     2,     3,     1,     2,
       0,     3,     0,     5,     1,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     1,     3,     3,
       3,     3,     0,     7,     0,    12,     0,     6,     0,    13,
       0,     3,     4,     4,     3,     0,     6,     2,     0,     1,
       1,     0,     2,     0,     2,     0,     1,     3,     4,     0,
       2,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     3,     1,
       4,     0,     0,     0,     0,     0,    12,     0,     2,     0,
       2,     2,     2,     2,     2,     3,     3,     1,     1,     1,
       2,     3,     3,     0,     6,     0,     1,     3,     1,     0,
       1,     3,     1,     0,     3,     0,     1,     3,     1,     4,
       0,     1,     1,     1,     0,     3,     2,     3,     0,     3,
       0,     5,     5,     0,     7,     5,     0,     2,     1,     1,
       1,     3,     1,     3,     0,     1,     1,     1,     1,     2,
       1,     1,     3,     0,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       5,     0,     2,     0,     3,     0,     6,     0,     0,     8,
       0,     2,     2,     2,     2,     2,     2,     0,     6,     2,
       0,     2,     1,     1,     3,     0,     0,     0,     7,     0,
       2,     2,     0,     0,     0,     7,     0,     2,     2,     0,
       5,     0,     1,     0,     5,     4,     0,     0,     8,     0,
       7,     1,     1,     1,     1,     1,     2,     4,     5,     0,
       4,     4,     4,     3,     3,     2,     2,     0,     2,     1,
       2,     3,     1,     1,     1,     0,     2,     1,     2,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     2,
       1,     2,     3,     1,     1,     1,     1,     1,     0,     2,
       1,     2,     3,     1,     1,     1,     1,     1,     1,     1,
       0,     2,     1,     2,     3,     1,     1,     1,     2,     2,
       2,     1,     1,     1,     1,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     4,     0,     1,     1,     1,     1,
       1,     2,     0,     4,     2,     4,     0,     6,     0,     0,
       6,     0,     0,     5,     0,     7,     0,     1,     0,     3,
       0,     3,     0,     0,     7,     5,     0,     4,     0,     3,
       0,     3,     0,     1,     0,     1,     1,     3,     1,     5,
       5,     0,     2,     0,     0,     7,     0,     9,     1,     3,
       1,     1,     0,     2,     0,     3,     1,     3,     0,     0,
       0,     0,     9,     1,     0,     4,     5,     1,     1,     3,
       1,     3,     1,     1,     0,     3,     1,     3,     0,     4,
       1,     0,     1,     2,     1,     3,     4,     3,     3,     3,
       4,     4,     3,     0,     0,     6,     0,     1,     0,     1,
       1,     2,     1,     1,     0,     1,     1,     2,     1,     0,
       3,     0,     1,     1,     2,     1,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     5,     1,     1,     3,     4,     4,     2,     2,     2,
       3,     4,     4,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     0,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     2,     2,     7,     7,     8,
       2,     2,     0,     3,     0,     1,     2,     0,     1,     2,
       0,     4,     3,     3,     3,     1,     4,     1,     1,     5,
       2,     5,     2,     4,     1,     5,     5,     4,     3,     1,
       1,     2,     1,     1,     2,     1,     1,     1,     2,     3,
       2,     3,     2,     2,     3,     3,     3,     0,     6,     0,
       6,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     2,     1,     2,     3,
       2,     1,     1,     1,     1,     1,     1,     1,     2,     0,
       3,     1,     5,     0,     1,     2,     1,     1,     1,     1,
       0,     3,     0,     1,     0,     1,     2,     1,     1,     2,
       2,     4,     1,     3,     2,     1,     2,     2,     2,     2,
       1,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     2,     1,     1,     0,     1,     0,     2,
       1,     2,     3,     2,     0,     1,     0,     1,     1,     2,
       0,     1,     0,     4,     1,     4,     3,     1,     0,     1,
       2,     1,     3,     3,     2,     2,     2,     1,     1,     2,
       2,     2,     1,     2,     2,     2,     2,     1,     1,     0,
       1,     1,     1,     1,     0,     1,     1,     1,     0,     2,
       2,     1,     1,     1,     4,     2,     1,     4,     0,     1,
       0,     2,     1,     3,     0,     6,     0,     5,     0,     5,
       0,     5,     0,    11,     0,     9,     3,     4,     3,     3,
       0,     3,     1,     4,     0,     3,     0,     2,     0,     1,
       0,     2,     2,     2,     2,     1,     1,     1,     3,     4,
       0,     7,     0,     6,     0,     5,     0,     6,     4,     1,
       2,     1,     1,     0,     5,     0,     3,     2,     0,     5,
       0,     0,     6,     1,     3,     1,     1,     3,     2,     3,
       2,     4,     0,     6,     0,     0,     8,     4,     4,     3,
       3,     2,     2,     6,     5,     3,     5,     1,     1,     1,
       0,     1,     0,     1,     0,     1,     1,     0,     2,     1,
       0,     1,     1,     1,     0,     5,     3,     0,     5,     3,
       3,     0,     3,     0,     2,     1,     3,     0,     1,     1,
       0,     2,     1,     3,     0,     6,     0,     6,     0,     5,
       0,     1,     1,     0,     6,     0,     1,     1,     2,     1,
       1,     1,     0,     6,     2,     0,     5,     0,     1,     1,
       2,     1,     1,     1,     1,     1,     2,     0,     6,     0,
       1,     1,     0,     4,     0,     4,     4,     3,     5,     1,
       3,     3,     3,     5,     1,     3,     2,     1,     1,     0,
       6,     1,     3,     3,     0,     2,     0,     4,     0,     2,
       5,     1,     2,     4,     2,     3,     0,     3,     0,     0,
       6,     2,     1,     1,     2,     2,     0,     1,     4,     3,
       0,     3,     1,     1,     0,     2,     8,     4,     0,     1,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     2,     4,     3,     1,     1,     4,     0,
       0,     1,     1,     0,     2,     2,     1,     1,     0,     2,
       0,     3,     0,     3,     3,     0,     3,     0,     3,     2,
       1,     3,     4,     3,     4,     3,     4,     1,     3,     4,
       3,     3,     4,     1,     5,     6,     3,     4,     5,     6,
       4,     4,     5,     3,     4,     1,     3,     1,     3,     1,
       3,     3,     1,     3,     3,     4,     4,     1,     3,     3,
       3,     3,     3,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     1,     3,     1,     1,     4,     2,     5,
       1,     3,     2,     2,     2,     2,     3,     5,     6,     2,
       1,     4,     7,     4,     2,     6,     6,     6,     6,     4,
       4,     3,     4,     6,     8,     6,     8,     6,     4,     6,
       4,     6,     4,     4,     4,     4,     6,     8,     2,     2,
       4,     2,     7,     7,     3,     4,     4,     6,     6,     4,
       6,     6,     6,     4,     6,     4,     6,     8,    10,    12,
       6,     4,     6,     6,     1,     6,     4,     8,    10,     4,
       1,     3,     4,     6,     6,     8,     6,     6,     4,     6,
       6,     8,     4,     4,     6,     4,     2,     4,     4,     4,
       6,     4,     4,     3,     8,     6,     4,     6,     3,     6,
       8,     4,     8,     6,     8,     6,     8,     2,     4,     4,
       4,     6,     8,     8,     4,     7,     7,     7,     6,     6,
       6,     6,     6,     6,     0,     5,    10,     3,     4,     3,
       2,     2,     2,     4,     6,     4,     4,     6,     6,     6,
       6,     4,     6,     4,     6,     4,     4,     4,     4,     6,
       4,     6,     4,     6,     4,     4,     6,     4,     6,     4,
       6,     4,     4,     6,     4,     6,     2,     3,     0,     4,
       0,     3,     0,     1,     0,     2,     1,     3,     4,     4,
       5,     4,     4,     4,     5,     4,     0,     0,     7,    10,
       4,     5,     4,     5,     4,     4,     4,     4,     4,     5,
       0,     8,     0,     1,     0,     2,     0,     1,     0,     3,
       2,     3,     2,     1,     2,     1,     2,     1,     1,     1,
       2,     0,     2,     1,     3,     1,     3,     0,     2,     1,
       3,     0,     1,     0,     2,     0,     2,     3,     5,     1,
       0,     2,     1,     1,     3,     3,     3,     0,     6,     0,
       6,     0,     8,     4,     0,     8,     0,    10,     6,     0,
       8,     0,    10,     6,     1,     2,     2,     0,     4,     0,
      11,     3,     6,     0,     3,     0,     0,     5,     0,     1,
       0,     1,     0,     2,     2,     2,     0,     5,     0,     1,
       3,     1,     1,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     0,     2,     0,     1,     0,     0,
       3,     0,     0,     3,     2,     0,     0,     4,     4,     2,
       0,     2,     2,     0,     1,     0,     4,     4,     2,     0,
       1,     1,     0,     1,     0,     1,     2,     1,     3,     3,
       1,     1,     1,     1,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     0,     6,
       0,     1,     3,     1,     2,     0,     2,     3,     1,     2,
       1,     0,     6,     3,     2,     0,     3,     6,     0,     6,
       4,     4,     4,     4,     5,     4,     3,     5,     6,     1,
       3,     1,     0,     2,     0,     1,     0,     0,     8,     0,
       0,     6,     0,     1,     1,     1,     1,     1,     2,     1,
       1,     1,     3,     4,     0,     3,     3,     1,     2,     2,
       0,     3,     0,     5,     3,     1,     3,     1,     3,     1,
       1,     0,     1,     0,     4,     0,     1,     3,     1,     1,
       1,     0,     0,     6,     0,     0,    11,     3,     1,     3,
       3,     1,     3,     0,     1,     0,     4,     0,     6,     0,
       5,     0,     6,     1,     3,     3,     5,     0,     2,     0,
       2,     1,     1,     1,     3,     0,     1,     2,     0,     3,
       2,     4,     4,     4,     4,     4,     1,     1,     0,     4,
       0,     4,     6,    16,     2,     2,     0,     6,     5,     2,
       2,     2,     1,     1,     1,     5,     5,     2,     2,     3,
       2,     2,     2,     3,     2,     2,     2,     1,     1,     3,
       4,     3,     3,     2,     2,     3,     3,     3,     3,     3,
       3,     3,     1,     1,     1,     1,     1,     0,     1,     0,
       2,     0,     1,     1,     1,     0,     2,     0,     2,     0,
       2,     2,     6,     0,     4,     0,     4,     1,     1,     0,
       1,     1,     0,     1,     1,     0,     4,     3,     1,     0,
       3,     4,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     0,     3,     3,     1,     1,     1,     2,
       0,     3,     3,     2,     2,     0,     4,     0,     1,     1,
       2,     0,     4,     5,     0,     0,     0,    16,     2,     0,
       1,     0,     1,     1,     0,     1,     1,     0,     2,     2,
       1,     3,     4,     3,     3,     0,     2,     2,     1,     3,
       3,     0,     3,     0,     3,     2,     3,     1,     1,     2,
       0,     2,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     2,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     3,     5,     1,     1,     1,     1,     1,     3,
       4,     5,     1,     5,     3,     2,     1,     3,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     4,     0,     1,     1,     3,     0,
       2,     1,     1,     1,     1,     0,     1,     0,     1,     1,
       1,     0,     2,     2,     2,     1,     2,     4,     5,     4,
       6,     2,     3,     3,     3,     5,     1,     3,     3,     2,
       2,     2,     1,     1,     4,     4,     1,     1,     1,     1,
       1,     0,     4,     1,     1,     1,     3,     3,     1,     1,
       2,     2,     0,     3,     4,     3,     0,     7,     1,     2,
       1,     1,     1,     1,     1,     1,     0,     5,     1,     1,
       1,     1,     1,     3,     6,     6,     6,     7,     3,     8,
       8,     8,     0,     1,     1,     2,     0,     1,     1,     3,
       0,     3,     0,     3,     0,     3,     0,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     3,     2,     2,     2,     2,     2,     2,     2,
       2,     1,     1,     0,     1,     3,     1,     2,     2,     2,
       1,     3,     3,     1,     1,     3,     1,     3,     4,     5,
       1,     0,     3,     3,     1,     1,     0,     2,     2,     2,
       2,     0,     2,     2,     1,     2,     2,     2,     2,     2,
       0,     3,     0,     1,     0,     3,     2,     0,     1,     2,
       0,     1,     4,     4,     5,     2,     3,     0,     1,     0,
       4,     0,     1,     1,     0,     2,     2,     1,     0,     1,
       1,     3,     1,     3,     1,     3,     1,     2,     1,     2,
       3,     1,     1,     1,     0,     4,     5,     1,     2,     1,
       2,     3,     3,     3,     0,     1,     0,     3,     3,     0,
       8,     0,     3,     1,     3,     3,     5,     0,     3,     4,
       4,     0,    14,     0,     6,     0,     0,     0,     0,    12,
       4,     4,     3,     4,     3,     2,     1,     3,     5,     1,
       1,     0,     1,     1,     0,     2,     0,     0,     3,     0,
       2,     5,     3
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const unsigned short int yydefact[] =
{
       0,     2,  2294,   889,     0,  2240,     0,     0,     0,     0,
       0,     0,  2242,   100,    58,  1535,  1637,  1638,  1455,  1474,
       0,   889,   137,     0,    70,  1476,     0,  1675,     0,     0,
     889,   390,     0,  1670,     0,     0,   889,  1479,  1663,     0,
     137,  2242,     0,   928,  2075,  1558,     0,     0,     0,  1555,
       0,  2132,  1524,     0,     0,     0,     0,     0,     4,    16,
       0,    35,    21,    25,    11,    15,    10,    33,     6,    49,
      50,    42,     8,    13,    39,     7,     9,    12,    31,    38,
      32,    34,    46,   921,    19,    20,    26,    40,    54,    17,
      51,    48,    18,  1639,    22,    41,    36,    28,    55,    29,
      47,    30,    53,    24,    43,    23,     5,    14,    44,    45,
      37,    56,    27,    52,     0,   758,     0,     0,   823,     0,
       0,     0,     0,  2295,  2284,   891,   890,     0,  2124,  2123,
     856,  2242,  1772,   874,     0,  1829,  1830,  1831,  1832,  1833,
    1834,  1835,  1787,  1836,  1788,  1837,  1838,  1839,  1840,  1789,
    1790,  1841,  1842,  1843,  1845,  1844,  1846,  1791,  1792,  1847,
    1848,  1849,  1793,  1794,  1850,  1851,  1795,  1852,  1853,  1854,
    1855,  1796,  1856,  1797,  1857,  1858,  1859,  1860,  1861,  1798,
    1862,  1864,  1863,  1865,  1866,  1867,  1799,  1868,  1869,  1870,
    1871,  1872,  1873,  1874,  1875,  1800,  1876,  1877,  1878,  1893,
    1801,  1879,  1882,  1881,  1880,  1883,  1884,  1885,  1886,  1887,
    1802,  1888,  1889,  1890,  1891,  1895,  1896,  1897,  1803,  1892,
    1898,  1894,  2055,  1900,  1899,  1901,  1903,  1902,  1804,  1904,
    1805,  1905,  1906,  1770,  1907,  1771,  1909,  1910,  1911,  1914,
    1915,  1806,  1908,  1912,  1913,  1807,  1917,  1918,  1919,  1920,
    1921,  1922,  1923,  1924,  1925,  1926,  1936,  1929,  1931,  1932,
    1934,  1930,  1935,  1939,  1938,  1940,  1941,  1942,  1937,  1928,
    1933,  1943,  1944,  1927,  1945,  1946,  1947,  1948,  1949,  1950,
    1951,  1952,  1953,  1954,  1955,  1957,  1956,  1958,  1959,  1960,
    1961,  1962,  1964,  1963,  1965,  1966,  1967,  1969,  1968,  1971,
    1972,  1808,  1970,  1973,  1974,  1975,  1976,  1977,  1809,  1978,
    1810,  1979,  1811,  1980,  1981,  1982,  1983,  1984,  1985,  1986,
    1987,  1812,  1988,  1989,  1990,  1991,  1992,  1993,  1994,  1995,
    1776,  1996,  1997,  1998,  1999,  2000,  2001,  2002,  1916,  2003,
    1813,  2004,  1814,  2005,  2006,  1815,  2007,  1816,  2008,  2009,
    1817,  2010,  2011,  2012,  2013,  2014,  2015,  1818,  2016,  2017,
    1819,  2019,  2018,  2020,  2022,  2023,  1820,  2021,  1821,  2024,
    1822,  2025,  2027,  2026,  2028,  2029,  1823,  2030,  2031,  1824,
    2032,  2033,  2034,  2035,  2036,  2037,  2038,  2039,  2040,  2041,
    2042,  2043,  2044,  2048,  2049,  2050,  2051,  2045,  2046,  2047,
    1825,  2052,  2053,  2054,  2056,  2057,  2058,  2059,  1826,  1827,
    2060,  2061,  2062,  2063,  2066,  2064,  2065,  2068,  2067,  2069,
    2070,  2071,  1828,  2072,   163,  1775,   139,  1777,  1786,     0,
     858,   875,  2243,  2244,   479,   479,   716,     0,   717,     0,
     478,   715,   137,  2284,     0,   475,   476,     0,  1549,  1281,
    1472,  1472,  1472,     0,     0,  1472,     0,  1475,     0,   137,
    1472,     0,    63,  1645,     0,     0,     0,     0,  1769,     0,
    1482,     0,  1677,  1681,     0,     0,  2121,     0,     0,     0,
       0,     0,   894,   137,   892,     0,  1533,     0,   854,     0,
    2244,  2255,   936,   922,   926,   948,  2076,  2073,  1557,  1621,
     843,   843,   843,   841,   843,  1556,     0,     0,     0,  1533,
    1680,  2329,     0,     0,     0,  2325,     0,  2330,     0,   928,
       0,     0,     1,     3,     0,  1889,  1981,     0,  1635,  1633,
    1766,     0,   736,   759,   744,   740,     0,   738,   749,   748,
     746,     0,   351,     0,     0,  2296,   872,     0,  2241,     0,
     904,   914,     0,     0,    72,     0,     0,     0,  2247,     0,
       0,     0,     0,   104,     0,     0,     0,   101,   525,  2284,
    2287,  2289,   479,   477,     0,  1553,  1552,  1551,     0,  1549,
    1456,     0,     0,     0,     0,     0,     0,     0,     0,  1617,
    1466,     0,     0,  1472,    65,     0,  2166,  2181,  2182,  2178,
    2183,  2201,  2184,  2188,     0,  2180,  2172,     0,  2187,  2176,
    2185,     0,  2170,     0,  2186,  2191,  2202,  2174,  2179,  2158,
       0,  2164,  2168,  1768,  1381,  2135,  2136,     0,  1782,  1781,
    1780,    71,  1484,  1485,  1483,   822,     0,  1678,  1679,     0,
    1691,     0,     0,     0,   887,   402,   391,     0,  1616,  1615,
       0,  1671,  2256,     0,     0,     0,   863,  1487,  1534,     0,
    1486,  1668,     0,  1667,  1664,  1666,     0,  2166,  2153,     0,
    2250,  2247,     0,   937,   969,  2257,   961,   954,   953,   956,
     957,   960,   958,   959,   955,   952,   969,   949,   951,  2079,
    1583,     0,     0,   652,     0,  1629,     0,     0,     0,  1629,
    1582,     0,  1412,  1622,     0,  2088,  1598,   713,   712,     0,
     711,  2089,  1597,  1615,     0,     0,     0,  1566,  1567,  1584,
       0,  2090,     0,  1618,     0,  1412,  1629,     0,  1559,     0,
       0,     0,     0,   837,   847,   839,   834,     0,   840,   836,
    1554,  1471,  2342,  2133,   822,  1728,  1727,  1773,  2326,  1726,
    2334,  2336,  2322,  2324,  2331,   924,     0,  2261,    57,   936,
       0,  1642,  2292,  2293,  2291,   666,   750,   147,   747,     0,
     352,   147,     0,     0,     0,     0,   353,   354,   286,   734,
       0,     0,     0,     0,     0,  1469,     0,     0,   906,   916,
     165,   138,     0,   860,   877,  2246,     0,     0,  2248,  2252,
    1041,  1040,     0,    96,    98,   103,     0,     0,   978,  1783,
    2220,   102,  2216,  2290,   526,   969,   969,   969,  2279,     0,
    2281,  2282,  2283,  2296,  2288,     0,   718,     0,  1536,  1539,
    1543,  1547,  1550,  1830,  1787,     0,  1840,     0,     0,  1739,
       0,     0,     0,     0,  1793,     0,  1852,  1854,     0,     0,
    1798,     0,     0,     0,   978,   978,   978,     0,     0,     0,
    1866,  1867,  1748,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1736,     0,  1749,     0,     0,     0,     0,
       0,     0,     0,  1900,     0,     0,  1901,     0,     0,     0,
    1738,  1906,     0,     0,     0,     0,     0,     0,     0,  1921,
       0,     0,  1746,     0,     0,  1287,     0,  1952,  1954,     0,
       0,     0,  1958,     0,     0,  1959,  1960,  1961,  1723,  1043,
       0,   978,  1735,  1745,  1975,  1982,  1729,     0,  1986,     0,
    1987,     0,  1993,     0,     0,     0,     0,     0,     0,  2014,
    2017,     0,     0,  2034,     0,     0,     0,   978,  2048,  2049,
    2050,  2051,     0,  1737,  1825,  1747,     0,     0,     0,  2062,
     978,   978,   978,     0,     0,     0,  2069,     0,  2072,  1291,
       0,     0,     0,     0,  1042,     0,     0,     0,  1283,   980,
     985,   990,   997,  1003,  1015,  1017,  1019,  1022,  1027,  1033,
       0,  1130,  1035,  1124,  1060,  1282,  1733,  1056,  1055,  1734,
    1053,  1756,  1775,  1722,  1755,  1070,   928,  1473,  1460,  1465,
    1461,     0,  1617,  1462,   365,     0,  2214,  1463,   824,     0,
       0,    64,  1659,  1653,  1655,  1658,  1654,     0,  1660,  1657,
    1656,  2124,  1646,  1648,  1649,  2167,  2165,  2199,  2198,     0,
    2200,  2196,  2189,  2221,  2193,  2221,  2195,  2194,  2221,  2190,
    2197,  2221,  2162,     0,  1382,  1383,     0,  2134,     0,  1767,
       0,     0,  1676,  1692,     0,  1693,  1682,  1689,   909,     0,
    1381,  2122,  2125,     0,   403,   400,   398,   411,     0,     0,
      60,    61,     0,   895,     0,   896,     0,   893,   899,     0,
       0,     0,  1490,  1480,  1489,  1669,     0,     0,  2165,  2162,
    2251,     0,  2253,     0,   943,     0,   942,     0,  2268,   927,
    2258,   967,   929,   966,   950,  2074,  2077,  2085,  1596,  1625,
     651,     0,     0,  1595,  1579,     0,   479,     0,     0,     0,
       0,     0,  1560,  1570,  1568,   513,     0,  1588,  1413,     0,
    1629,     0,  1590,  1603,  1591,     0,  1619,     0,  1629,  1575,
    1604,  1619,  1580,  1587,  1594,  1623,  1624,     0,  1574,  1581,
       0,  1619,  1592,  1619,  1619,  1629,  1629,   850,   849,   848,
     844,   845,   850,     0,  1327,     0,     0,  2323,  2337,  2321,
    2332,  2333,  2320,   925,  2262,   923,  2263,     0,   969,  1636,
    1634,  1643,  1644,   667,   737,   666,   470,   473,   472,     0,
       0,   752,   754,   741,     0,   340,   739,     0,   318,   297,
     318,   355,   666,   978,     0,     0,     0,   877,     0,     0,
     908,   903,   907,   905,   708,   707,   710,     0,   915,     0,
     166,   168,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    73,    74,    87,
     862,   861,   859,   885,   884,   882,     0,   883,   881,   876,
     878,   879,  2245,  2249,   480,   666,     0,   328,   289,     0,
    1785,     0,     0,     0,     0,     0,     0,     0,  2280,    92,
       0,     0,     0,  1541,  1537,  1547,     0,     0,     0,  1381,
       0,     0,     0,  1386,     0,  1074,  1386,  1386,  1386,     0,
       0,  1281,  1281,     0,  1281,     0,     0,     0,     0,  1386,
    1098,  1101,     0,  1099,     0,     0,     0,     0,     0,  1742,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1069,
     928,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1281,     0,     0,     0,     0,  1262,     0,     0,     0,
       0,  1052,     0,     0,     0,     0,  1281,     0,     0,     0,
       0,  1287,     0,  1285,     0,  1386,     0,     0,  1386,     0,
       0,     0,     0,     0,  1281,  1281,  1281,   989,     0,  1146,
       0,     0,     0,     0,     0,  1281,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1386,  1386,     0,     0,
       0,  1386,     0,  1167,     0,  1744,     0,     0,     0,  1743,
       0,     0,  1741,  1740,  1724,     0,     0,     0,  1190,  1192,
    1191,  1386,     0,  1386,     0,     0,     0,  1292,     0,  1063,
    1062,  1064,  2277,     0,     0,  2091,  1058,     0,     0,   982,
     987,  1044,     0,  1045,  1046,     0,  1047,  1048,  1049,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1065,  1356,
    1357,  1358,  1359,  1368,  1371,  1360,  1361,  1362,  1370,  1363,
    1364,  1365,  1372,  1373,  1374,  1366,  1375,  1369,  1367,  1376,
       0,  1355,     0,     0,     0,  1725,  1184,     0,  2272,     0,
    1458,   365,   368,   367,  1467,   366,  1511,     0,   826,   825,
    1464,   824,     0,    66,    68,  1652,     0,     0,  1661,  2192,
       0,  2173,  2177,  2171,  2175,     0,     0,  2163,     0,  2169,
    1385,  1896,  1968,     0,  1388,  2138,  1477,  2341,  1688,  1690,
       0,     0,  1683,     0,     0,   877,     0,     0,     0,   392,
     396,     0,    62,     0,     0,  1672,     0,     0,     0,     0,
       0,   865,  1488,     0,  1665,     0,     0,     0,     0,     0,
    2254,     0,  1327,   969,   920,   970,   972,   971,  1755,  2270,
    2269,  2259,   969,  1403,  2079,  2082,  2083,  2086,  2084,     0,
    2081,  2080,  2095,     0,  1627,  1630,  1631,     0,     0,  1611,
    1606,  1605,  1601,  1602,     0,     0,  1422,  1423,  1421,  1416,
    1417,  1420,  1610,  1608,  1599,     0,  1629,     0,  1609,  1607,
    1629,  1619,     0,  1629,  1629,  1629,  1589,  1593,     0,   838,
     847,   835,   842,  1339,  1338,     0,  1303,     0,  1302,  1300,
    1299,     0,  1338,  2327,  2335,  2339,     0,  1412,  2267,  2265,
       0,   471,  1511,  1511,     0,     0,     0,   108,     0,     0,
       0,     0,     0,     0,     0,   148,   157,     0,     0,   295,
     296,   294,  1617,   348,   291,  1617,   287,     0,   292,   820,
     820,     0,  1511,  1511,   820,  1511,     0,     0,  1511,  1511,
       0,     0,  1511,     0,     0,   820,     0,  1511,   818,     0,
       0,  1511,  1511,  1511,   820,     0,  1511,   388,  1511,     0,
       0,   830,     0,     0,  1511,     0,     0,  1511,  1511,   766,
     817,   483,   502,   503,   735,   765,   767,   779,   386,     0,
     796,   819,  2285,     0,  2297,  2298,   742,   873,   857,  1470,
       0,   164,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   886,
     880,    97,     0,   293,  1617,     0,   305,   979,  1784,     0,
    2217,  2315,     0,     0,  2299,   481,   721,   723,   722,   720,
     719,     0,     0,  1388,     0,  1544,  1327,  1548,  1547,  1545,
       0,     0,     0,  1387,  1386,     0,  1268,  1430,  1431,  1427,
    1428,  1426,  1429,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1246,     0,  1268,
       0,  1104,     0,     0,     0,     0,     0,     0,  1755,     0,
       0,     0,     0,     0,  2274,     0,     0,     0,     0,     0,
       0,  1081,     0,     0,     0,     0,     0,     0,     0,  1379,
    1377,  1380,  1378,     0,     0,  1263,  1260,     0,     0,     0,
       0,  1131,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1288,  1289,  1386,     0,     0,     0,  1386,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1153,     0,
       0,     0,     0,     0,  1158,     0,     0,     0,     0,     0,
       0,     0,  1386,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1187,     0,  1189,     0,     0,
    1758,  1757,     0,     0,     0,     0,  1295,  1066,  1281,     0,
       0,     0,     0,     0,     0,     0,   984,   981,   986,  1000,
     993,   998,   991,   995,     0,  1050,  1835,  1001,     0,  1281,
    1006,   928,  1395,  1013,     0,     0,  1016,     0,     0,     0,
       0,  1018,  1020,  1021,  1024,  1130,  1023,  1130,  1031,  1032,
    1028,  1029,  1030,  1034,     0,  1054,  1061,  1284,  1234,  1759,
    2278,  2271,  1459,  1468,  1509,  1510,  1512,     0,  2215,  1457,
      69,     0,     0,  1647,  1662,  1650,  2225,     0,  2224,  2210,
    2213,  1766,     0,     0,     0,  2148,  2142,  2149,  2151,  2145,
    2150,  2152,  2143,  2144,  2139,  2146,  1389,  1414,     0,     0,
     910,   911,   914,     0,  2128,  2129,  2127,  2126,   888,   969,
     401,   399,   412,   413,     0,   404,  1674,  1673,   902,     0,
     897,   900,   901,   870,   869,   871,   864,   866,   867,   463,
    1494,     0,     0,     0,  1500,  1481,  1491,   855,     0,     0,
       0,     0,   938,   944,   941,   973,     0,     0,   965,  1327,
    1445,   962,   933,  1414,  1404,   932,  2078,     0,  2046,  2106,
       0,     0,     0,     0,     0,  2096,  1626,     0,  1576,     0,
    1600,  1614,  1613,  1612,  1571,  1569,     0,     0,     0,  1565,
    1620,  1564,  1388,  1619,  1563,  1561,  1562,   852,   851,   846,
    1338,  1327,     0,     0,  1324,  1340,     0,  1340,  1327,  1327,
       0,  1327,  1301,  1381,  1335,     0,     0,  2338,  1405,  2266,
    1632,     0,     0,     0,   117,     0,     0,   751,     0,   110,
     109,   119,   151,   154,   152,     0,   153,     0,     0,   350,
     349,  1511,   341,   342,   345,   346,   347,  1511,  1511,   319,
     320,   323,   324,   325,   326,   327,   298,   299,   302,   303,
     304,   821,   728,   709,   889,   709,   800,     0,   544,   728,
     702,   798,     0,   889,     0,     0,     0,     0,     0,   889,
       0,     0,     0,  1511,     0,   811,   761,     0,     0,     0,
       0,     0,   812,     0,   762,  1511,     0,     0,     0,     0,
     889,     0,     0,     0,   889,   780,   833,   832,   831,     0,
     889,   889,     0,   508,   509,   507,     0,     0,   484,   666,
     763,   387,   764,   547,     0,   827,   544,   550,  1762,  2286,
    2301,  1352,     0,  1351,   167,    80,    76,    88,  1435,  1436,
    1434,  1432,  1433,    89,    78,    79,    83,    82,    84,    85,
      86,    81,    77,    90,    91,    75,     0,  1511,  1511,  1511,
    1511,   329,   330,   333,   334,   335,   336,   339,   337,   338,
       0,   288,  1617,     0,  2218,     0,   282,   281,     0,  2313,
    2301,     0,   547,    93,   386,   482,   485,    94,  1327,  1403,
    1547,  1388,     0,  1381,     0,  1073,  1088,     0,     0,  1239,
       0,     0,  1241,  1242,  1243,     0,  1092,     0,  1090,  1093,
    1094,  1095,  1281,     0,     0,     0,     0,  1281,  1245,     0,
    1100,     0,     0,  1105,  1106,     0,  1079,     0,  1113,     0,
    1115,     0,  1281,     0,  1109,     0,  2273,     0,     0,  1281,
       0,  1121,     0,  1082,     0,     0,  1222,     0,  1205,  1201,
       0,  1203,     0,     0,  1281,  1281,     0,  1126,     0,     0,
    1132,  1281,     0,  1224,     0,  1206,     0,  1138,     0,  1281,
       0,  1286,     0,     0,     0,  1252,  1142,  1143,     0,  1250,
    1208,     0,     0,  1145,  1210,     0,  1212,     0,  1207,  1214,
    1215,  1147,  1149,  1148,  1217,     0,     0,  1219,     0,  1221,
       0,  1151,  1152,     0,     0,     0,  1156,     0,  1281,  1161,
    1254,  1256,     0,     0,     0,     0,     0,  1258,  1168,  1170,
       0,     0,     0,  1169,     0,     0,     0,     0,     0,     0,
       0,  1174,     0,     0,  1188,  1257,  1080,  1255,  1193,     0,
    1196,     0,  1195,  1293,     0,     0,  1071,  2092,  2093,  2094,
     730,  1057,  1760,  1037,  1036,     0,  1039,  1038,     0,   994,
     999,   992,   996,  1002,     0,  2276,     0,     0,  1011,  1010,
       0,  1281,  1007,  1395,  1014,     0,  1026,  1025,  1129,     0,
    1233,   969,  1234,     0,   364,    67,  1651,  2222,     0,     0,
       0,     0,     0,     0,     0,     0,  2137,  1415,  1521,  1774,
    1684,     0,   918,  2130,  2131,     0,     0,   393,   397,     0,
     405,   406,   408,     0,   868,   948,     0,  1513,  1498,  1505,
    1499,     0,     0,     0,  1497,  1751,  1750,  1757,  2257,     0,
       0,     0,     0,     0,   939,     0,   968,   977,   976,  1752,
    1759,   928,  2260,  1388,  1388,     0,     0,  1454,     0,     0,
       0,   930,   935,   931,   934,     0,     0,     0,     0,   654,
     656,   655,   662,     0,   653,     0,     0,  2091,     0,   658,
     660,   659,  2101,   657,  1628,  1412,  1586,  1585,  1419,  1418,
       0,  1578,  1629,     0,  2264,  1333,     0,  1326,  1325,  1341,
       0,  1327,  1340,  1340,     0,  1306,  1305,  1525,  1528,     0,
    1304,  1342,  1331,   948,  2328,  2340,     0,   665,   664,   512,
     661,   511,   118,   107,     0,     0,   753,   755,     0,   756,
     156,   155,   161,   162,     0,  1617,   343,     0,     0,  1617,
     321,     0,   300,   549,   729,   703,   783,   704,     0,     0,
       0,   709,   541,   728,   540,   545,   718,     0,     0,   495,
     492,   802,   498,   781,   774,   782,   793,   795,     0,   494,
     510,     0,     0,   499,   728,   768,   809,   810,   824,   488,
       0,   521,   522,   520,   504,   490,   491,   804,     0,   497,
     496,   389,   493,     0,   815,   788,     0,   519,   517,   514,
     516,   515,   518,   500,   489,     0,   820,   820,   797,     0,
     531,   533,   534,  1765,     0,   829,   799,     0,   535,   536,
       0,     0,     0,     0,   917,     0,   115,     0,     0,     0,
       0,  1617,   331,     0,  1511,   306,   307,   310,   311,   312,
     313,   314,   317,   315,   316,  2219,  2316,   285,   283,   284,
       0,     0,     0,   374,     0,  1811,   371,   378,     0,   372,
     666,   486,     0,  1388,  1424,  1540,  1546,     0,     0,     0,
    1240,  1269,     0,   630,   630,  1279,  1277,   619,   630,  1273,
    1278,  1275,     0,     0,     0,     0,     0,     0,     0,  1247,
    1244,     0,     0,     0,  1759,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1266,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1228,  1290,  1253,  1251,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1259,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1296,  1067,     0,  1059,   983,   988,  1004,
    2275,  1394,  1008,     0,  1012,     0,  1185,     0,  1235,  1236,
       0,  1761,  2223,  2212,  2211,  2226,  2226,  2226,     0,  1390,
       0,  1478,  1694,   912,     0,   913,   970,   421,   402,   424,
     395,     0,   898,   969,  1495,  1507,     0,  1515,     0,     0,
    1492,  1502,     0,     0,     0,  1501,     0,  2155,  2156,  2154,
     945,   975,   974,     0,  1414,  1396,  1453,  1451,     0,  1446,
    1448,  1450,   963,     0,  2108,     0,  2107,  2119,  2120,  2117,
    2118,  2116,  2097,     0,  2103,  2102,     0,     0,     0,  2113,
    2104,     0,     0,  1577,     0,  1572,   853,     0,  1327,  1340,
    1327,  1313,     0,     0,  1327,  1309,  1307,  1311,     0,  1388,
       0,     0,     0,     0,  1328,   969,  1754,  1406,  1409,   105,
     120,   121,   745,   370,   356,   369,   344,   357,   358,   322,
     301,   785,   546,   728,   705,   706,   718,     0,     0,     0,
     772,     0,   877,     0,   778,   662,   505,   808,   807,   506,
       0,   770,   769,   790,   776,     0,   801,   547,   828,   682,
     615,   564,   555,   630,   558,   557,   601,   572,   569,   619,
     617,   587,   619,   619,   594,   593,   611,   597,   577,   668,
     668,   576,   614,   668,   598,   596,   600,     0,   602,   619,
     607,   595,   599,   616,   592,   589,   613,   630,   630,   570,
     573,   612,   668,     0,   605,   630,   634,   575,   668,   674,
       0,     0,   630,   632,  1764,  2303,     0,     0,  1350,   108,
     116,   363,   362,   361,   360,   332,   290,     0,  1617,   308,
     180,   969,     0,   141,  2314,     0,     0,     0,   481,  1694,
     487,     0,  1542,     0,  1538,  1052,  1085,  1089,  1198,     0,
    1270,   668,     0,  1280,   621,  1272,  1274,  1276,  1075,  1091,
    1096,  1200,  1078,  1077,     0,     0,     0,     0,  1111,  1114,
    1116,  1107,  1112,  1110,     0,  1199,  1123,  1120,  1122,  1083,
       0,  1223,  1202,  1204,  1125,  1136,  1264,  1267,     0,     0,
       0,  1137,  1133,  1225,  1134,     0,  1139,  1108,  1140,     0,
       0,     0,  1230,  1209,  1144,  1211,  1213,  1218,  1216,  1220,
    1150,  1087,     0,  1155,  1157,  1068,  1052,  1159,     0,  1165,
    1163,     0,     0,  1171,     0,     0,  1180,     0,  1178,     0,
    1179,     0,  1181,  1182,     0,  1194,  1197,  1294,  1076,     0,
       0,   731,  1005,  1009,   970,   969,  1183,     0,  2231,  2231,
    2231,  1520,  1519,     0,  1518,  1522,  1696,  1695,     0,   919,
       0,     0,     0,   394,   407,   464,     0,     0,     0,  1516,
    1504,  2261,  1493,  1496,  1759,  2157,  1753,   947,     0,  1391,
    1697,  1449,     0,     0,     0,     0,  2112,  2098,   663,     0,
       0,     0,     0,  2099,     0,  1381,  1334,     0,     0,  1299,
    1327,  1327,     0,  1299,     0,     0,     0,  1527,  1403,  1529,
    1346,  1344,  1345,  1343,  1336,     0,  1410,  1411,  1408,   111,
     757,   231,     0,     0,   784,     0,     0,     0,   814,     0,
     877,   827,   775,   794,   816,   634,   889,   789,   791,   865,
     501,   532,   688,     0,     0,   574,   623,   618,     0,   623,
     623,   674,   676,   670,   674,     0,   583,   601,   578,     0,
     668,   591,   582,   603,   606,   608,   610,   623,     0,   668,
     571,   580,     0,   623,   642,     0,     0,     0,   638,     0,
     681,     0,   645,   551,   635,   637,     0,     0,   604,     0,
     560,   675,     0,   562,     0,     0,   623,     0,   633,   623,
       0,  2302,     0,   969,   969,  2307,   119,   359,   309,   183,
     181,   182,     0,   176,   178,   173,     0,   529,   530,   528,
     527,     0,   169,  2307,   375,     0,   386,   373,   466,     0,
    1409,   726,  1425,     0,     0,  1271,     0,     0,  1248,  1102,
    1103,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1072,     0,  1226,     0,     0,     0,     0,     0,
       0,     0,  1177,  1175,  1176,     0,  1297,     0,   973,  1237,
       0,     0,  2230,  2228,     0,  2229,  2227,  2203,     0,  2160,
    2161,  2159,  2147,     0,     0,  1685,   409,     0,     0,   428,
       0,   426,  1414,  1506,  1508,  1514,  1503,     0,  1392,  1403,
       0,  1705,  1447,   964,  2110,  2109,  2111,  2105,     0,     0,
       0,     0,  1332,  1327,  1314,     0,  1318,  1323,  1319,     0,
    1310,  1308,     0,  1424,     0,  1414,  1409,     0,   113,     0,
     250,     0,   229,     0,     0,     0,     0,   233,   237,   122,
     125,   123,     0,   124,   126,   127,   129,     0,   130,   131,
     132,   133,   134,   135,   136,   128,  1778,     0,  1779,   787,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   813,
    1730,   773,   803,   805,   877,     0,   777,     0,     0,     0,
     683,   684,   689,   691,     0,     0,   627,   628,   629,   584,
     624,   626,     0,   586,   554,   669,   677,   678,     0,   673,
     671,   674,   579,   609,   585,     0,   581,     0,   568,   648,
     647,   978,   640,   650,     0,     0,   646,   636,   644,   639,
       0,     0,     0,     0,   552,     0,   553,  1763,  2304,   928,
       0,     0,   743,     0,  2317,   180,     0,     0,     0,     0,
     170,   172,   173,  2300,   379,   376,   467,     0,   542,     0,
     725,     0,  1086,   631,   620,     0,  1097,  1117,     0,  1084,
    1265,  1261,  1386,  1127,     0,  1135,  1141,  1227,     0,     0,
    1154,  1160,  1164,  1162,  1166,  1172,  1173,  1281,     0,  1238,
    2209,  2208,  2207,  2204,     0,     0,     0,     0,     0,     0,
    2232,  2234,  1517,     0,     0,   969,   414,     0,     0,   425,
       0,   465,   962,   523,  1400,  1409,     0,  1414,     0,     0,
       0,     0,  1698,  1700,     0,  1452,  2115,  2114,  2100,     0,
       0,     0,     0,     0,     0,     0,  1353,  1526,  1348,  1337,
    1407,   112,     0,   106,   249,   252,     0,     0,   245,   255,
     243,   244,   242,   246,     0,   235,     0,   232,   273,   231,
     231,   276,   241,   269,   786,     0,     0,   542,  1732,  1731,
     827,   771,     0,   694,   695,   696,     0,     0,     0,   687,
     690,   563,   556,   625,     0,   732,   679,   672,     0,   567,
     649,   978,   643,   668,   674,   668,   674,  2305,     0,     0,
       0,     0,   121,   149,   177,     0,   969,   140,   142,     0,
       0,  2261,  1694,     0,   382,     0,    95,  1409,     0,     0,
       0,     0,     0,  1229,  1231,     0,  1298,  2205,  2235,  2238,
    2236,  2237,  2239,  2233,     0,     0,     0,   422,     0,   418,
     420,   429,   433,   427,   524,     0,     0,  1397,  1399,  1393,
    1437,     0,     0,     0,     0,  1699,     0,     0,  1706,  1708,
       0,  1329,  1315,     0,  1320,     0,  1312,     0,     0,  1349,
     114,   251,     0,     0,     0,   234,   262,     0,   188,   231,
       0,   217,   215,   216,   218,   219,   221,   222,   223,   224,
     225,   226,   227,   228,   220,   231,     0,     0,     0,   538,
     537,   806,     0,   698,     0,   697,     0,   692,   693,   688,
       0,   668,     0,   668,   641,   559,   561,   565,   566,  2261,
       0,  2308,     0,    99,  2318,   179,     0,     0,   171,   174,
     380,   377,     0,  2257,     0,   724,   727,   622,  1118,     0,
    1249,  1128,  1186,  1523,  1531,     0,  1686,   970,     0,   415,
     416,     0,   434,  1401,  1402,  1409,     0,   946,  1703,  1704,
       0,  1701,     0,     0,  1707,     0,     0,     0,     0,  1354,
    1347,   247,     0,     0,     0,     0,   238,   184,     0,     0,
     186,   279,     0,   271,   539,     0,   700,   701,   699,   685,
     686,   588,   733,   590,  2306,  2309,  2310,   159,   158,   150,
       0,   231,     0,   143,   384,   383,   543,     0,     0,     0,
    1697,     0,   423,   422,   419,     0,   430,  1398,  1438,  1702,
    1710,  1709,     0,     0,  1317,  1322,     0,   230,   256,     0,
       0,   262,     0,   231,     0,   275,   187,     0,   277,   270,
     272,   792,   160,  2319,  2311,     0,  2261,  1119,  1530,  1532,
    1705,   410,   417,     0,     0,   451,     0,     0,  1330,   248,
     253,   231,   236,   263,     0,   199,   198,     0,   190,   211,
     274,     0,   189,     0,   231,   231,   144,   385,  1711,     0,
       0,  1511,     0,     0,  1511,  1511,  1511,  1511,   431,   452,
     454,     0,   969,     0,     0,   231,   231,     0,     0,     0,
       0,     0,     0,   185,     0,   231,  2312,   149,     0,  1713,
       0,   440,   442,   443,   437,     0,   435,   438,     0,  1511,
    1511,     0,     0,     0,     0,   444,   453,  1511,     0,     0,
    1441,  1443,     0,   254,   259,   231,   239,   193,   212,   213,
       0,   196,   280,     0,   145,     0,     0,  1720,   436,     0,
       0,   462,     0,     0,   458,   459,   457,   455,     0,   432,
       0,  1444,  1439,   969,  1573,   255,   231,   258,   266,     0,
       0,   191,   204,   192,   202,   195,     0,   278,   231,  1712,
    1715,     0,     0,  1717,  1718,     0,  1687,   441,   439,   460,
     461,   448,     0,   446,   456,  1442,   260,   231,   262,   231,
     265,   210,   208,   231,   206,   200,     0,   207,   214,   205,
       0,   197,   146,  1719,  1714,     0,  1721,     0,   445,     0,
     268,   231,     0,   194,   209,   203,  1716,   451,   450,   447,
     201,   449
};

/* YYDEFGOTO[NTERM-NUM]. */
static const short int yydefgoto[] =
{
      -1,    56,    57,    58,    59,    60,    61,  1080,    62,   594,
    1021,  1513,  1514,    63,   469,    64,   792,  1247,  1248,  1249,
      65,  1775,  2772,  1265,  1266,   443,  2147,  3289,  2151,  3498,
    3703,  3089,  1201,  2639,  3290,  3291,  3509,   464,   424,  3104,
    3392,  3887,  4005,  4067,  4138,  1203,  3884,  1665,  3959,  1666,
      66,   552,  1229,  1230,  3609,  3610,  3606,  3611,  3382,  3383,
    3384,  3385,  3993,  3839,  3937,  3994,  4060,  4129,  4135,  4136,
    4027,  4163,  4164,  4170,  4165,  4028,  4131,  3840,  3841,  3709,
    3842,  3512,  3843,  3714,  3844,  3836,  3845,  3716,  3991,  3846,
    3517,  3847,  3848,  3849,  3850,  3851,  3852,  3986,  3853,  3707,
    4019,  3833,  3834,  4021,  4094,  4127,  3934,  3935,  4056,  4128,
    4160,  3854,  3857,  3999,  3722,  3838,  3856,  4034,  3997,  2298,
    2760,   538,   539,   563,  1766,   540,   805,   768,  1205,  1676,
    1677,  2176,  2177,  2291,  2292,  2745,  2746,  1674,  1675,  2169,
    2170,  1763,  1764,  2281,  2282,  1671,  1672,  2162,  2163,  1208,
    1669,  1670,   541,   769,   778,  2164,  2172,  2173,  2750,  2284,
    2285,  2286,  2287,  2165,  1504,  2166,  2994,  2303,  3109,  2766,
    3772,  3107,  3771,  3397,  3893,  4006,  2240,  2241,  2222,    67,
     478,   646,  2043,  2909,  1077,  2044,  1547,  1546,  1078,  2529,
    2530,  2531,  2040,  3666,  1549,  2527,  3797,  3973,  3798,  3799,
    2906,  3909,  3233,  3460,  3461,  3668,  3912,  4015,  4085,  3801,
    3976,  4076,  4077,  4070,  4071,  4072,  4119,  4152,  4153,  4177,
    4187,  4048,  4049,  4050,  2064,  2535,  3462,  3617,  1194,  1195,
    1196,   444,   445,   446,   560,  2304,  1720,  2305,  2306,  1722,
    1723,  1134,  2713,  2694,  3671,   817,  3391,  2719,  2720,  2721,
    2722,  3776,  2664,  2665,  2187,  2188,  2246,  2730,  3076,  3318,
    3338,  3077,  3078,  3079,  3080,  3081,  3082,  3083,  3123,  3124,
    3559,  3560,  3561,  3120,  3369,  3353,  3354,  3355,  3582,  3325,
    2581,  2582,  2591,  2592,  2628,  2954,  2629,  1199,  3326,  3363,
    3569,  3356,  2729,  3312,  3550,  3738,  3551,  3552,  3553,  3867,
    2189,  2663,  2190,  1227,   727,   447,  1282,  1779,  3399,  3400,
    2653,  2876,  3744,    68,  1212,   765,   771,   767,  2250,   766,
    1202,  1657,  2992,   532,  1724,  3306,  3300,  3012,  3309,  1725,
    2674,  1726,  3001,  3294,  1727,  3023,  3307,  3545,  2675,  2676,
    1728,  1729,  1730,  3011,  3020,  3730,  2191,   122,  1510,  2726,
    2229,    69,  1172,  1167,    70,   738,   733,   734,  1170,  1171,
    1629,  2118,    71,   666,    72,   547,    73,   555,  1252,    74,
    1090,  2056,  2057,  2058,    75,   783,    76,    77,   556,  1259,
    1260,  1261,    78,  1073,   127,    79,   655,   653,  1085,  1087,
    1088,  1083,    80,   549,   550,  1221,    81,  1541,  2030,  2031,
     788,   789,  1228,  2905,    82,    83,   521,   493,   675,   494,
     495,  1583,  2081,   674,  1574,  1105,  2554,  3672,   686,   687,
     688,  2571,  1112,  1113,  1107,  2075,  1575,  2556,  1270,  3222,
    1439,  1947,   979,  1440,  1948,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,  2475,  2478,  3357,   990,  1449,
    1958,   991,   992,  1988,   993,  3171,  3172,  3424,  2499,  2500,
    2501,  2888,  2889,   994,  2337,  3135,  2375,  1856,  3414,  3156,
    1795,  2320,  2792,   580,   581,   995,  1362,  1363,  1364,  1873,
    1428,  2871,  2463,  2464,  2873,  1636,  2132,  1637,  1638,  1639,
    3275,  3274,  3276,  3691,  3485,  3693,  3489,  2129,  1640,  1641,
    3926,  2604,  2968,  2622,  2623,  3495,  2120,  1642,  2610,  2984,
    3281,  3494,  3828,  2252,  3695,  1490,  1491,  1853,  1056,  1057,
    1796,  2027,  2515,  3469,  3676,  2488,  3249,  3674,  3807,  2083,
    2084,  2626,  2987,  3288,  1137,  3673,  2517,  1609,  1610,  3114,
    2995,  2263,  3917,  4016,  4089,  4090,  4091,  2567,  2568,  2939,
    2940,  2085,  3250,    84,   449,    85,  1992,   784,   785,   583,
     461,    86,   470,  2028,    87,   486,  1563,   635,   659,  1093,
    1094,  2065,  2536,  2543,  2066,  2548,  3241,  2538,  2914,  2915,
    1996,  1997,  2539,  2917,  3238,  3223,  3224,  2901,  3454,    88,
     509,  2979,  2617,  2618,  3903,  3904,   660,    89,   448,   828,
    1783,  1287,  1782,   829,   830,  1289,   578,   579,    90,   506,
      91,   499,   728,  1605,  1604,  2595,  2104,   650,  1015,  1616,
     731,  1617,  1594,  2098,  1123,    92,   761,   760,    93,   528,
    1190,    94,   595,  1032,  1033,  1518,  2005,    95,   487,   664,
     665,    96,   480,   651,  1555,    97,   472,   639,    98,    99,
     640,  1066,  2902,  3664,  3970,  1540,  1067,  3398,  3471,  3682,
    3683,  3685,  3818,  3819,  4069,  4107,  4142,  4143,  4146,   996,
     748,   997,  3539,   998,   999,  2544,  2545,  2988,  1000,  3905,
    1001,  2247,   741,   467,   425,   629,  1003,  2520,  1004,  3527,
     809,   810,   427,   428,   100,   689,   497,  1115,  1116,  1117,
    1589,  1590,   732,  1943,  1591,  1592,  2095,  2090,  3257,  2960,
    2952,   101,   643,  1034,  1071,  1072,  2036,   102,   508,   103,
    1058,  1534,  1535,  2024,  2514,  2025,   104,   668,   105,   619,
    1528,   620,  1036,   621,   622,  1048,  1043,  1051,  1045,  3654,
    3446,  3447,  2012,  1017,   811,   812,  1521,  2007,  2008,  3218,
    3449,  3660,  3661,   106,   131,   433,   558,   799,  1101,   107,
     108,   109,   110,  1109,  1184,  2077,  1185,  1186,  1187,  1649,
    1581,  1005,  1499,  1329,  1835,  1960,  2486,  1006,  1991,   567,
     818,   545,   569,   570,   123,   124,   819,   820,  2300,  2733,
    3086,  3375,  3602,   821,  4035,   822,  2761,  2295,  3100,  3763,
    3961,   111,   750,   518,  1182,  1177,  1179,  1645,  2137,   112,
     113
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -3568
static const int yypact[] =
{
    3460, -3568,   801,    81,   467, -3568,  -143,   803, 47003,   804,
     467,   467,  -183,  1030, -3568, -3568, -3568, -3568, -3568,  1401,
   47003,    81, -3568, 23771, -3568, -3568,   612, -3568,   287,   467,
      81, -3568, 47003, -3568,   838,   292,    81, -3568, -3568,   467,
   -3568,  -183, 47003,  1189,   831,  1205,  1080,   -95,   874,   854,
     993, -3568, -3568, 47003,   751,  -157,  1389,  1378, -3568, -3568,
    1025, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, 20854, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568,  1271, 47003, 47003, 47003, -3568,  1245,
   47003, 47003,   924, -3568,  1349, -3568, -3568,   467, -3568, -3568,
   -3568,  -183, -3568, -3568, 23771, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568,   861, -3568, -3568,   976,
   -3568, -3568, -3568,  1498,  1311,  1311, -3568,  1359, -3568, 47003,
   -3568, -3568, -3568,   452,  1034, -3568,  1124,  1386,   639, -3568,
    1415,  1415,  1415, 47003,  1445,  1415, 47003, -3568, 47003, -3568,
    1415,   467, -3568, -3568,  2824, 47003,  1295,   208,   -61, 41213,
    1116, 47003,   449, -3568,  1428, 23771, -3568,   467,  1620,  1488,
     277, 47003, -3568, -3568, -3568,   467,   257,    31, -3568,  3003,
     158, -3568,   822, -3568, -3568,   841, -3568, -3568, -3568,  4965,
   -3568, -3568, -3568,  1104, -3568, -3568, 23771, 47003,   467,  1400,
   -3568, -3568,   209,   209,   209, -3568,   209, -3568,   209, -3568,
    -157,  1085, -3568, -3568, 47003,   -43,   576,  1585, -3568, -3568,
    1097,    -2, -3568, -3568, -3568, -3568, 47003, -3568, -3568, -3568,
   -3568,  1235, -3568, 23771,  1557,  1227, -3568, 23771, -3568,    22,
   -3568, -3568,  1114, 47003, -3568, 23771, 23771,   479,  1003,   599,
   47003, 47003, 47003, -3568,  1708, 37739,  1290, -3568,   237,  1349,
    1710, -3568,  1311, -3568, 47003, -3568, -3568, -3568, 42950,   639,
   -3568, 14888,  1565, 47003, 47003, 47003,  1370, 47003, 47003,  1250,
   -3568, 37739, 23771,  1415,  1174,  1686,  1362,  1334,   908, -3568,
   -3568, -3568, -3568, -3568,  1418, -3568, -3568,  1278, -3568, -3568,
   -3568,   324, -3568,   205, -3568, -3568, -3568, -3568, -3568, -3568,
    1431,  1198, -3568, -3568,   186, -3568, -3568, 47003, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568,  1570,  1341, -3568, -3568, 14888,
     201,  1759,  1627, 23771, -3568,  1048, -3568,   417, -3568, -3568,
    1542, -3568, -3568, 47003, 37739, 23771, -3568, -3568, -3568, 21433,
   -3568, -3568,  1776, -3568,  1234, -3568, 23771,  1362, -3568,  1470,
    1393,  1003,  1251, -3568,    59,  1333, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568,  1294,   841, -3568, -3568,
   -3568,  1622,  1739, -3568,  1441,    38,  1371,  1322,   747,    38,
   -3568, 38318,  1672, -3568,   160, -3568,  1763, -3568, -3568,  1454,
   -3568, -3568, -3568,  1457,  1464,  1670,  1473, -3568, -3568, -3568,
     171, -3568,   373, -3568,   520,  1672,    38,   778, -3568,  1711,
    1841,   434,   407, -3568,   -31, -3568, -3568,  1911, -3568, -3568,
   -3568, -3568, -3568, -3568,  1570, -3568, -3568, -3568,  1390, -3568,
    1631,  1490, -3568, -3568,   603, -3568,  1394,   622, -3568,   822,
     596, 38897, -3568, -3568, -3568,   146,  1639, -3568, -3568,  1994,
   -3568, -3568,  1904,  1904,  1904,  1998, -3568, -3568, -3568, -3568,
   39476,  1551,  1435, 23771,  -162, -3568, 43529, 23771, -3568,   252,
   14888, -3568,  2091,   191,   168, -3568,  1952,  1587, -3568, -3568,
   -3568, -3568,  1849, -3568, -3568, -3568,  1994,  1904,  1408,  1403,
    1792,  1416, -3568, -3568, -3568, -3568, -3568, -3568, -3568,  1446,
   -3568, -3568, -3568,  1227, -3568, 23771,  -155, 23771, -3568,  1417,
   -3568,  1410, -3568,  1420,  1421,  1422,  1423,  1430, 17913, -3568,
    1432,  1433,  1436,  1437,  1440,  1442,  1443,  1444,  1448,  1449,
    1450,  1451,  1455,  1456,  1408,  1408,  1458,  1460,  1461,  1462,
     769,  1463, -3568,  1466,  1468,  1469,  1472,  1474,  1475,  1478,
    1481,  1484,  1489, -3568,  1491, -3568,  1493,  1494,  1496,  1499,
    1501,  1503,  1505,  1507,  1512,  1513,  1514,  1515,  1518,  1520,
   -3568,  1521,  1522,  1523, 14888,  1524,  1525,  1526,  1527,  1528,
    1532,  1533, -3568,  1536,  1539,  1540,  1541,  1543,  1544,  1545,
    1546,  1549,  1550,  1558,  1560,  1561,  1562,  1563, -3568, -3568,
   14888,  1564, -3568, -3568,  1566,  1568, -3568,  1569,  1572,  1573,
    1576,  1579,  1580,  1582,  1584,  1586,  1588,  1590,  1591,  1593,
    1596,  1603,  1604,  1606,  1607,  1615,  1616,  1617,   816,  1619,
    1626,   921,  1630, -3568,  1635, -3568,   221,  1636,  1638,  1640,
    1408,  1408,  1408,  1641,  1642,  1644,  1645,  1646,  1647, 14888,
   17913, 17913, 17913, 10048, -3568, 47003, 25508, 47003, -3568,  1477,
   -3568, -3568,  1788, -3568,  1207,  1497,  1063,   996,   284,  1434,
   17913,  2831,   251, -3568, -3568,  1426,  1529, -3568, -3568, -3568,
   -3568, -3568,  1648, -3568,  1439, -3568, -3568, -3568, -3568, -3568,
   -3568, 23771,  1250, -3568,   -64,  1888, -3568,  1452,   105, 23771,
    1625, -3568, -3568, -3568, -3568, -3568, -3568,  2043, -3568, -3568,
   -3568,  1567,  1502, -3568, -3568, -3568, -3568, -3568, -3568,  1651,
   -3568, -3568, -3568,  1649, -3568,  1649, -3568, -3568,  1649, -3568,
   -3568,  1649,   112,  3225, -3568, -3568, 47003, -3568, 47582, -3568,
   21433,  -143, -3568, -3568,  1867, -3568, -3568,  1902, -3568,  1924,
     142,  1650, -3568, 23771, -3568, -3568, -3568,  1874,   990, 41213,
   -3568, -3568,   200, -3568,  1731,  1652,  1733,  1654, -3568,  1736,
   23771, 23771, -3568, -3568, -3568, -3568,    31,   181,  1657,   650,
   -3568, 47003, -3568,  1667, -3568,   182, -3568, 14888,   982, -3568,
   -3568, -3568,  1660, -3568, -3568,  1661, -3568,   885, -3568,  2026,
   -3568,  -143, 14888, -3568, -3568,  1671,  1311, 47003, 47003, 47003,
   23771, 23771, -3568, -3568, -3568, -3568,   684, -3568, -3568, 47003,
      38, 37739, -3568, -3568, -3568,  2088,   778, 47003,    38, -3568,
   -3568,   778, -3568, -3568, -3568, -3568, -3568, 23771, -3568, -3568,
     778,   778, -3568,   778,   778,    38,    38,  1718, -3568, -3568,
    1666, -3568,  1718,  1801,   799,   209,  1891, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568,    75,    59, -3568,
   -3568, -3568, -3568, -3568, -3568,   147, -3568, -3568, -3568,  1504,
     175, -3568,  1851,  1117,   -78, -3568,  1117,  -143, -3568, -3568,
   -3568, -3568,  2762,  1408,  1669,   219, 23771,   168,  -143, 23771,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568,  1673, -3568,  1676,
    1677, -3568,  2131,  2132,  2135,  2136,  2137,  2138,  2139,  2140,
    2143,  2144,  2145,  2151,  2152,  2155,  2156,  1704, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568,  1756, -3568, -3568, -3568,
   -3568,   876, -3568, -3568, -3568,   146,  1950, -3568,  1755,  1713,
   -3568, 41213,  2266, 37739, 47003, 47003,  2133, 23771, -3568, -3568,
     391,   391,  1959,  1417, -3568,   144, 47003,  2141, 27843,   125,
   14888, 14888, 14888,  1336,  1018,  2256,  2314,  2314,  2314, 14888,
   14888, -3568, -3568, 14888, -3568, 14888, 14888, 14888, 14888,  1354,
   -3568, -3568, 10653, -3568,  1724, 14888, 14888,  1814, 14888,  1529,
   14888, 14888, 24350, 14888, 14888, 14888, 14888, 14888,  1875, -3568,
   -3568, 14888,  2831, 14888, 14888, 14888,  1727, 14888, 14888, 14888,
   14888, -3568, 14888, 14888,   339, 14888,  2201,   761, 14888, 14888,
   14888, -3568, 11258, 14888, 14888, 14888, -3568, 14888, 14888, 14888,
   14888, -3568,  2323, -3568, 24350,  1375, 14888, 14888,  1385, 14888,
   14888, 14888, 14888, 14888, -3568, -3568, -3568, -3568, 10653, -3568,
   14888, 14888, 14888, 14888, 14888, -3568, 17913, 14888, 11863, 14888,
   14888, 14888, 14888,  1732, 14888, 14888,  2314,  2314, 14888, 14888,
   14888,  1412, 10653, -3568, 14888,  1529,   906,   906, 14888,  1529,
    8838, 14888, -3568, -3568, -3568,   761, 12468,  1734, -3568, -3568,
   -3568,  2314, 24350,  2314, 14888, 14888, 14888, -3568,  1760,  2256,
    2256,  2256, -3568,  1000, 14888,   746,  1879,  1738, 14888, -3568,
   -3568, -3568, 17913, -3568, -3568,   637, -3568, -3568, -3568, 15493,
    1743, 17913, 17913,  2074, 17913, 17913,    51, 17913, 17913, 17913,
   17913, 17913, 17913, 17913, 17913, 17913, 17913, 17913,  2256, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
    1746, -3568, 41213, 17913, 14888, -3568, -3568, 47003, -3568,  1745,
   -3568,   -64, -3568, -3568, -3568, -3568,   352, 37739, -3568, -3568,
   -3568,   105, 41213,  1747, -3568, -3568,  1935,  1686, 23771, -3568,
   47003, -3568, -3568, -3568, -3568, 22012, 22012, -3568, 22012, -3568,
   -3568,   133,   145,  1765,  1774, -3568, -3568, -3568, -3568, -3568,
    2129, 23771, -3568,   709, 23771,   168,  1757,  1757,  1018, -3568,
   -3568,  1758, -3568, 14888,  -143, -3568, 47003, 37739, 37739, 23771,
   23771,   188, -3568,   966, -3568,  -143,  2157, 22012, 22012, 22012,
   -3568,  1761,   799, -3568, -3568, -3568, -3568, -3568,  1752, -3568,
   -3568, -3568, -3568,   934, -3568, -3568, -3568, -3568, -3568, 44108,
     110, -3568, -3568,  -143,  2180, -3568, -3568,  1762, 47003, -3568,
   -3568, -3568, -3568, -3568,    64,    64, -3568, -3568, -3568, -3568,
     -54, -3568, -3568, -3568, -3568,  1898,    38, 47003, -3568, -3568,
      38,   778, 23771,    38,    38,    38, -3568, -3568,  1038, -3568,
     -31, -3568, -3568, -3568, -3568, 47003,   943,  1908,  1766, -3568,
   -3568, 23771, -3568,  1767, -3568,  2189,  2336,  1672, -3568, -3568,
     182, -3568,   352,   352,   923,   927,  1869,   268,  -143,  1906,
    1910,  1912,  1913,  1917,  1943, -3568, -3568,  -143,  -143, -3568,
   -3568, -3568,    25, -3568, -3568,   212, -3568,   868, -3568,  1160,
    2334,  2027,   352,   352,  2334,   352,  2028,  2029,   352,   352,
    1883,  2283,   352,  2165,  1903,  1340,  2168,   352, -3568,  1907,
    2292,   352,   352,   352,  2334,  2041,   352, -3568,   352,  2042,
    2044,   216,  2046,  2047,   352,   760, 47003,   352,   352, -3568,
   -3568,  2374, -3568, -3568, -3568, -3568, -3568, -3568,   -32, 22602,
   -3568, -3568, -3568, 41213, -3568, -3568, -3568, -3568, -3568, -3568,
   44687, -3568, 14888,  1018,  -143,  -143,   717,  -143,  1018,  -143,
    -143,  -143,  -143,  -143,  1018,  -143,  -143,  1018,  2091, -3568,
   -3568, -3568,  1970, -3568,   286,  2146, -3568, -3568, -3568,   -34,
   -3568, -3568,   383, 47003, -3568,   809, -3568, -3568, -3568, -3568,
   -3568, 23771,  1868,  1774, 27843, -3568,   799, -3568,  1816, -3568,
    1823,  1825,  1012, -3568,  2314,  1826, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568,  1830,  1832,  1833,  1834,  2420,  1836,   412,
    1838,  1839,  1840,  1842,  1843,  -192,  1844, -3568,  1846,  1854,
    1848, -3568,  1852,  1853,  1850,  1855,  1856,  1859,  1857,  1021,
    1044,  1861,  1863,  1052, -3568,  1745,  1864,  2269,  1865,  1866,
    1107, -3568,  1860,  1870,  1872,  1125,  1876,  1137,  1144, -3568,
   -3568, -3568, -3568,  1873,  1877, -3568, -3568,  -151,  1880,  1878,
    1882, -3568,  1881,  1885,  1886,  1159,  1884,  1889,  1162,  1892,
    1893,  1895,  1871,  1896, -3568,  2314,  1914,  1915,  1918,  2314,
    1922,  1164,  1901,  1923,  1166,  1185,  1925,  1926,  1928,  1929,
    1930,  1932,  1192,  1916,  1201,  1933,   229,  1934, -3568,  1941,
    1946,  1947,  1948,  1203, -3568,  1949,  1942,  1944,  1951,  1953,
     210,  1958,  2314,  1961,  1962,  1208,  1963,  1965,  1967, 13073,
   13678, 14283,    28,  1971,   432, -3568,  1968, -3568,  1974,  1975,
   -3568,  1857,  1976,  1212,  1216,  1977, -3568, -3568, -3568,  1899,
    1862,  1972,  1973, 41213, 14888, 47003, -3568,  1083,  1720, -3568,
   -3568, -3568, -3568, -3568,   743, -3568,  1890, -3568,  1481,  1875,
   -3568, -3568,   890,  1919, 17913,   121,  1497,  1905, 17913, 17913,
   17913,  1063,   996,   996,   284,  2831,   284,  2831,  1434,  1434,
    1434,  1434,  1434,  2256, 14888, -3568,  2256, -3568,  1982,  -220,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, 41213, -3568, -3568,
   -3568,  1625,  2181, -3568,  1983, -3568, -3568,  1220, -3568,  1979,
   -3568,  1980,  1954,  2014,  2031, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568,  1672,   966,  1981,
    1986, -3568, -3568,  2007,  2321, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568,  2092,  1757, 47003, -3568, -3568, -3568,  2069,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,   442, -3568,
   -3568,  1992,  1992, 19676, -3568, -3568, -3568, -3568,  2231,  2414,
    2415,  2416, -3568,  2030, -3568, 41792, 28424,   755, -3568,   204,
     173,   785,  2365,  1672, -3568,  2421, -3568,  2000,  2361,  2001,
     352, 36002,   422, 26093, 36581, -3568, -3568,   717, -3568,    95,
   -3568, -3568, -3568, -3568, -3568, -3568,   684,   684,  2035, -3568,
   -3568, -3568,  1774,   778, -3568, -3568, -3568, -3568,  2003, -3568,
   -3568,   799,  2368,  2369, -3568,  2244,   695,  2244,   799,   799,
   24350,   799, -3568,  1740, -3568,  1018,  2299, -3568, -3568, -3568,
   -3568, 40055, 37160,  2227, -3568, 14888, 14888,  2260, 47003, -3568,
   -3568,  2551, -3568, -3568, -3568,  2524, -3568,  2525,   226, -3568,
   -3568,   352,   781, -3568, -3568, -3568, -3568,   352,   352,   129,
   -3568, -3568, -3568, -3568, -3568, -3568,   169, -3568, -3568, -3568,
   -3568, -3568, 24929,   154,    81,   154, -3568,   246,   258, 24929,
   -3568, -3568, 24929,    81,   717,  1018, 24929,  1018, 45266,    81,
    -143,  -143,  1680,   352,  1018, -3568, -3568,  2378, 47003,  2379,
   24929, 24929, -3568, 41213, -3568,   352,  1008,   717,   717, 24929,
      81,  1226,  1620,  -143,    81, -3568, -3568, -3568, -3568, 23771,
      81,    81,  1120, -3568, -3568, -3568, 41213,  2025, -3568,  4820,
   -3568, -3568, -3568, 19097, 47003,   315,   224, -3568,  2019, -3568,
    2033, -3568,  1224, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568,   927,   352,   352,   352,
     352,   641, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
    2425, -3568,   289,  2116, -3568,  2034, -3568, -3568,   235, -3568,
    2033, 23771, 18518, -3568,  2254, -3568,  2296, -3568,   799,  2264,
     151,  1774,  2037,   125, 16098, -3568, -3568, 14888,  2036, -3568,
   14888, 14888, -3568, -3568, -3568,   270, -3568, 40634, -3568, -3568,
   -3568, -3568, -3568, 14888, 40634,   270, 14888, -3568, -3568,  2038,
   -3568,  2401,  2401, -3568, -3568,  1529, -3568, 47003, -3568, 14888,
   -3568, 14888, -3568,  1529, -3568, 14888, -3568, 14888, 14888, -3568,
    2285, -3568, 14888, -3568, 14888, 14888, -3568, 14888, -3568, -3568,
   14888, -3568, 14888, 14888, -3568, -3568,  2287, -3568, 14888, 14888,
   -3568, -3568, 14888, -3568, 14888, -3568, 14888, -3568, 14888, -3568,
   14888, -3568, 17913, 24350,  2040, -3568, -3568, -3568,  2045, -3568,
   -3568, 14888, 14888, -3568, -3568, 14888, -3568, 14888, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, 14888, 14888, -3568, 14888, -3568,
   14888, -3568, -3568, 14888, 14888, 14888, -3568, 14888, -3568, -3568,
   -3568, -3568, 16703, 14888, 14888, 14888,  2048, -3568, -3568, -3568,
   14888, 14888, 14888, -3568, 14888,  2455, 14888,  2461, 14888,  2462,
   14888, -3568, 14888,  2291, -3568, -3568, -3568, -3568, -3568, 14888,
   -3568, 14888, -3568,  2059, 14888,  2049, -3568, -3568, -3568, -3568,
    2051, -3568, -3568, -3568, -3568, 14888, -3568, -3568, 14888, -3568,
   -3568, -3568, -3568, -3568,  2052, -3568,  1745, 17913, -3568,  1919,
   17913,  1875, -3568,   890,  1919,   124, -3568, -3568, -3568,  2053,
   -3568, -3568,  1982, 47003, -3568, -3568, -3568, -3568, 47003,  2061,
   29005, 37739, 37739, 37739,  2056, 14888, -3568, -3568,  2289, -3568,
   -3568, 23771,  2439, -3568, -3568, 17913,  2616, -3568, -3568,  2062,
    2060, -3568, -3568, 37739, -3568,   841, 24350, -3568,  2064, -3568,
    2064,   895,  2063,  1230, -3568, -3568, -3568,  2065,  1333,  2486,
   37739, 37739, 37739, 14888, -3568, 45845, -3568, -3568, -3568, -3568,
     342, -3568, -3568,  1774,  1774,  1981,  1981, -3568, 26678,  2119,
    2437, -3568, -3568, -3568, -3568, 47003,  2418, 47003,  9443, -3568,
   -3568, -3568,  2614, 14888, -3568, 37739,   -37,   746,   352, -3568,
   -3568, -3568, -3568, -3568, -3568,  1672, -3568, -3568, -3568, -3568,
    2393, -3568,    38,  1038,  -176, -3568,  1307, -3568, -3568, -3568,
    2438,   799,  2244,  2244,  2441,  2322,   533,  2080, -3568,   352,
     943,   262, -3568,   841, -3568, -3568, 14888, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568,  2831,  2613, -3568, -3568,  -143,  2555,
   -3568, -3568, -3568, -3568,   815,    25, -3568,   815,   815,   212,
   -3568,   868, -3568, -3568, -3568, -3568, -3568, -3568, 14888,  2443,
    2444,   154, -3568, 24929, -3568, -3568,  -155,   355, 45266, -3568,
   -3568, -3568, -3568, -3568, -3568,  2089, -3568, -3568,  1018, -3568,
   -3568, 37160,  -143, -3568, 24929,  2089, -3568, -3568,   214, -3568,
    -143, -3568, -3568, -3568, -3568, -3568, -3568, -3568, 45266, -3568,
   -3568, -3568, -3568, 45266, -3568, -3568, 45266, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, 23771,   900,  1215, -3568,  1233,
   -3568, -3568, -3568, -3568, 47003, -3568, -3568, 23771, -3568, -3568,
    4338, 47003, 47003,  2674, -3568, 47003,  2260,  -143,  1018,   815,
     815,   286, -3568, 47003,   352,   255, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
    2335,  -107,  2680, -3568, 23771,  2652, -3568, -3568,  1237, -3568,
    2536, -3568,  2098,  1774,  2440, -3568, -3568, 14888,  2099,  2101,
   -3568, -3568,  2102,  2105,  2105, -3568, -3568,  2106,  2105,  2463,
   -3568,  2472,  2109,  2110,  2113,  2114,  2117,  2121,  2123, -3568,
   -3568,  2831,  2831,  2122,  2124,  2128,  2134,  2142,  2147,  2149,
    2153,  2150,  2158,  2160,  2162,  2164,  2154,  2166,  2169,  2170,
    2171,  2174,  2264,  2167,  2175,  2176,  2178,  2179,  2182,  1242,
    2183,  2185,  1244,   271, -3568, -3568, -3568,  2190,  2191,  2192,
    2193,  2194,  2195,  2197,  2198,  2199,  2188,  2200,  2203,  2204,
   14888,  2206,    94,  1246,  2207, -3568,  2209,  2210,  2214,  2216,
   14888,  2221, 14888,  2222, 14888,  2224,  2225,  2226,  2228,  2235,
   14888,  2586,  2215,  2161, -3568, 47003, -3568,  1477, -3568, -3568,
   -3568,   251, -3568,  2236, -3568, 17913, -3568, 14888,  2230, -3568,
    2240, -3568, -3568, -3568, -3568,   454,   454,   454, 17308, -3568,
    2599, -3568,   135, -3568,  2482, -3568, -3568,  1919,  2475,  2211,
   -3568, 47003, -3568,  1294,  2242, -3568,   352, 17308,  1992,  2286,
   -3568, -3568,   895, 24350, 28424, -3568, 37739,  1416,  1416,  1416,
   -3568, -3568, -3568, 29586,  1672,  2537, -3568, -3568, 41213,  2245,
   -3568, -3568, -3568,  2282, -3568,  1050, -3568, -3568, 17913,  1468,
   -3568, -3568, -3568, 40055, -3568, -3568,   352,  2246,  2248, -3568,
   -3568, 46424, 14888, -3568,  2595, -3568, -3568,  2241,   799,  2376,
     799, -3568,  2504,  2511,   799, -3568, -3568, -3568, 24350,  1774,
   17308,   154,   154,   154, -3568,  1294, -3568,  2247,   331, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568,   -60, -3568, 24929, -3568, -3568,  -155,  2250,  2645,  2670,
   -3568, 24929,   876, 47003, -3568,  2614, -3568, -3568, -3568, -3568,
    4338, -3568, -3568, 47003, -3568,  1252, -3568, 19097, -3568, -3568,
   -3568,  2251,  2252,  2105, -3568, -3568, -3568, -3568, -3568,  2106,
    2465, -3568,  2106,  2106, -3568, -3568, -3568, -3568, -3568,   183,
     263, -3568, -3568,   183, -3568, -3568, -3568,   164,   911,  2106,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568,  2105,  2105, -3568,
   -3568, -3568,   183,  2255, -3568,  2105,  1088, -3568,   197,   115,
    2257,  2259,  2105,  2261,  2253, -3568,  1254,   826, -3568,   268,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568,   815,   289, -3568,
     646, -3568,   697, -3568, -3568,   826,  2265,  2286,  2374,   126,
   -3568, 47003, -3568,   684, -3568,  2831, -3568, -3568, -3568,  2501,
   -3568,   183,  2509, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, 14888,  2267,  2268,  2270, -3568, -3568,
   -3568, -3568, -3568, -3568, 14888, -3568, -3568, -3568, -3568, -3568,
   14888, -3568, -3568, -3568, -3568, -3568,  2411, -3568,  2517, 14888,
   14888, -3568, -3568, -3568, -3568, 14888, -3568, -3568, -3568, 14888,
     800,  2271,  2298, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, 14888, -3568, -3568, -3568,  2831, -3568, 14888, -3568,
   -3568, 14888, 14888, -3568, 14888, 14888, -3568,  2274, -3568,  2275,
   -3568,  2277, -3568, -3568,  2526, -3568, -3568, -3568, -3568, 14888,
   14888, -3568, -3568, -3568, -3568, -3568, -3568,   162,  2305,  2305,
    2305,  1468, -3568,  1256, -3568, -3568, -3568, -3568,  2647, -3568,
    2284,  1197,  2508, -3568, -3568,  1660, 24350, 17308,  2288,  2290,
   -3568,   622, -3568, -3568,  2281,  1416, -3568, -3568,  2839,  2682,
    2825, -3568, 26678,  2570,   130,  2490, -3568, -3568, -3568,   -37,
    2385,  2387,   352, -3568,  -143,  1701,  1766,  2660,  1132,  2350,
     799,   799,  1133,  2351, 14888, 14888,  2311, -3568,  2264, -3568,
   -3568, -3568, -3568, -3568,  1660, 14888, -3568, -3568, -3568,  2429,
   -3568, 34255,  1018,  2508, -3568,  2318,  2320, 47003, -3568,  1945,
     876,   315, -3568, -3568, -3568,  1088,    81, -3568,  2089,   442,
   -3568, -3568,   636,  2568,  2572, -3568,  -134, -3568,  2326,  -134,
    -134,  2890,   199, -3568,  2890, 40634, -3568,  1441, -3568,  2362,
     183, -3568, -3568,  2363, -3568, -3568, -3568,  -134,  2328,   183,
   -3568, -3568,  2578,  -134, -3568, 41213,  -143,  1559, -3568,  2388,
   -3568,  2827,  2696, -3568,  1088, -3568,  2698,  2592, -3568,  2593,
   -3568, -3568,  2594, -3568,  2596,  2598,  -134,  2600, -3568,  -134,
   47003, -3568, 47003, -3568, -3568,  2370,  2551, -3568, -3568, -3568,
   -3568, -3568,  2347,  2352, -3568, -3568, 23771, -3568, -3568, -3568,
   -3568,  2485, 47003,  2370, -3568,  2356,  2254, -3568,  2936,  1259,
     331,  2358, -3568,  2359,  2360, -3568,  1261,  2364, -3568, -3568,
   -3568,  1263,  2367,   209,  2371,  2357,  2372,  2373,  2375,  2381,
    2639,  2715, -3568,  2567, -3568,  2382,  2384,  2386,  2389,  2390,
    2394,  2395, -3568, -3568, -3568,  2377, -3568,  2383, 41792, -3568,
    2457,  2459, -3568, -3568,  2476, -3568, -3568,   157,  1381, -3568,
   -3568, -3568, -3568, 17308,  2729, -3568, -3568,  2397,  2398, -3568,
    1265, -3568,  1112, -3568, -3568, -3568, -3568, 14888, -3568,  2264,
     465,  2713, -3568, -3568, -3568, -3568, -3568, -3568,  2400,  2402,
    9443,  2975, -3568,   799, -3568,  2448, -3568, -3568, -3568,  2449,
   -3568, -3568, 47003,  2440,  2399,  1112,   331, 14888,  2861, 47003,
     161,  2790, -3568, 48161,  2791, 48161, 47003, -3568,  2445, -3568,
   -3568, -3568,  4334, -3568, -3568, -3568, -3568,   189, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568,  2406, -3568, -3568,
    1268, 47003, 47003,  1270,   761,   761,   761,   849,   849, -3568,
   -3568, -3568, -3568, -3568,   876,  2774, -3568,   118,   236, 47003,
   -3568, -3568,    68, -3568,  2409,  2417, -3568, -3568, -3568, -3568,
    -134, -3568,   209, -3568, -3568, -3568, -3568, -3568, 40634, -3568,
   -3568,  2890, -3568, -3568, -3568,   209, -3568,  2419, -3568, -3568,
   -3568,  1408, -3568, -3568,  2671,  2460, -3568, -3568, -3568, -3568,
    2423,  2424,  2426,  2427, -3568,  2428, -3568, -3568, -3568, -3568,
    -157,   840, -3568,  2895, -3568,   772, 47003,  2843,  -143,  2430,
    2431, -3568, -3568, -3568, -3568, -3568, -3568,   827,  2464, 47003,
   -3568,  2679, -3568, -3568, -3568,  2681, -3568, -3568, 14888, -3568,
   -3568, -3568,  2314, -3568, 14888, -3568, -3568, -3568,  2712,  2876,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, 14888, -3568,
   -3568, -3568, -3568, -3568,   233,  2675,  1018,  1018,  1018,  1018,
    1381, -3568, -3568,  2487,  2532, -3568, -3568, 47003, 41213, -3568,
    2508, -3568,   785, -3568,  -175,   331, 14888,  1672,  2996,  2997,
    2908,  3006,   465, -3568,   882, -3568, -3568, -3568, -3568,  2765,
    1134, 14888,  2453, 14888,  2454,  1272, -3568, -3568, 44687, -3568,
   -3568, -3568, 14888, -3568, -3568, -3568,  2875, 47003, -3568, -3568,
   -3568, -3568, -3568, -3568, 14888, -3568, 14888, -3568, -3568, 34255,
   34255, -3568, -3568, -3568, -3568,  1276,  1279,  2464, -3568, -3568,
     315, -3568,  2466, -3568, -3568, -3568,   790,   790,  1281, -3568,
   -3568, -3568, -3568, -3568,  1283, -3568, -3568, -3568,  1285, -3568,
   -3568,  1408, -3568,   183,  2890,   183,  2890, -3568,  2458,  3004,
    2701,  3010, -3568, -3568, -3568,  4338, -3568, -3568, -3568, 47003,
    4338,   622,   126,  2286, -3568,  2688, -3568,   331,  2468,  2469,
    1291,  2470,  2471, -3568, -3568,  2473, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, 24350, 23771, 17913,  2574,  1303, -3568,
   -3568, -3568, -3568, -3568, -3568,   415, 14888, -3568, -3568, -3568,
    2683,   209,   209,  3030,   209, -3568,  3031,  3034,   882, -3568,
    2931, -3568, -3568, 47003, -3568, 47003, -3568, 47003,  2480,  2481,
   -3568, -3568,  2849,  2942, 14888, -3568, -3568,  2516, -3568, 31335,
    2483, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, 34839, 14888,   189,  2677, -3568,
   -3568, -3568,  2508, -3568,  3089, -3568,   757, -3568, -3568,    68,
   47003,   183,   209,   183, -3568, -3568, -3568, -3568, -3568,   622,
    2730, -3568,  2731, -3568,  1082, -3568,  2958,  2663, -3568, -3568,
   -3568, -3568,  2497,  1333,  1280, -3568, -3568, -3568, -3568, 14888,
   -3568, -3568, -3568,  2499, -3568,   352, -3568, -3568,  1018, -3568,
   -3568, 47003,  2538, -3568, -3568,   331, 47003, -3568, -3568, -3568,
     209, -3568,   209,   209, -3568,   717, 14888,  1315,  1318, -3568,
   -3568, -3568,  2882,  2518,  2959, 14888, -3568,  2994,  2826,  2500,
   -3568,  2498,  2978, 48161, -3568,  1323, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
    2988, 34255,  2666, -3568, -3568, -3568, -3568,  2512, 24350, 17308,
    2825,  2513, -3568,  2574, -3568,  1101, -3568, -3568, -3568, -3568,
   -3568, -3568,  3098,  2510, -3568, -3568, 47003, -3568, -3568,  2528,
    2530, -3568, 42371, 31919,  2514, -3568, -3568, 14888, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568,  4338,   622, -3568, -3568, -3568,
    2713, -3568, -3568,  2520,  2602,  1105,  2521,  2834, -3568,  2527,
   -3568, 34255, -3568, -3568,  2982, -3568, -3568,  2921,  2529,  1353,
   -3568,  2522, -3568,  2989, 34255, 34255, -3568, -3568,  2911, 17913,
     -42,   352,  3013,  3015,   352,   352,   352,   352, -3568,  1105,
   -3568,  2992,  2540,  2993, 47003, 30167, 34255,  2556,  2965, 47003,
    4338,  2967,  2973, -3568,  2727, 32503, -3568, -3568,  2800,  2554,
    1329, -3568, -3568,  1919, -3568, 17913, -3568, -3568,  -143,   352,
     352,   717,   717,  1018, 41213,  2559, -3568,   352, 14888,  2560,
    2553, -3568,  1018, -3568,    76, 30751, -3568, -3568, -3568,  3044,
    1209, -3568, -3568,  2588,  1082,  2899, 20264,  2706, -3568, 17913,
    2564, -3568,  -143,  -143, -3568, -3568, -3568, -3568,  2669, -3568,
   41213, -3568, -3568, -3568, -3568, -3568, 34255, -3568,   893, 35423,
   14888, -3568,  2609, -3568, -3568, -3568,  4334, -3568, 34255, -3568,
   -3568, 41213,  1338, -3568, -3568, 24350, -3568, -3568, -3568, -3568,
   -3568, -3568,  1348, -3568, -3568, -3568, -3568, 33087, -3568, 34255,
   -3568, -3568, -3568, 27257, -3568, -3568,  2995, -3568, -3568, -3568,
    1529, -3568, -3568, -3568, -3568, 23181,  2499, 41213, -3568,  2669,
   -3568, 33671, 35423, -3568, -3568, -3568, -3568,  1105, -3568, -3568,
   -3568, -3568
};

/* YYPGOTO[NTERM-NUM].  */
static const short int yypgoto[] =
{
   -3568, -3568, -3568, -3384, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568,  1175, -3568, -3568, -3568, -3568, -3568,  1424, -1525,
   -3568, -3568, -3568, -3568, -3568, -3568,   902, -3568,    90, -3568,
   -3568, -3568, -2008,  -196,  -581, -3568, -3568,   353,   -59, -3568,
   -3568, -3568, -3568, -3568, -3568,  2412,  -883, -3567, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568,  -423,  -579, -3568, -3568,
    -414, -3568, -3568, -3092, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568,  -908, -3568,  -989, -3568, -3568, -1823,   -97, -3568,
     -96, -3568,   -94, -3568,   -93, -3568,   -92, -3568, -3568,   -91,
   -3568,   -90,   -89,   -88,   -87,   -85,   -84, -3568,   -83, -3568,
   -3568,  -929, -3568, -3568, -3568, -3568, -3129, -3568, -3568, -3568,
   -3568,   -81, -3568, -3568,  -646, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,  2407, -3568,
   -3568, -3568, -1880, -3568, -3568, -3568, -2469,  2002, -3568, -3568,
   -1963, -3568, -3568, -3568, -2071, -3568, -3568, -3568, -1953,   702,
   -3568, -3568,   -38,   879, -3568, -1587, -1595, -1576, -3568, -3568,
   -3568, -2178, -2173,  -537,  1714,  -984, -2320, -3568, -3568, -3568,
   -3568, -3568, -3568,  -558, -3568, -3568, -2218,  2004, -3568, -3568,
   -3568,   995, -3568, -3568, -3568, -3568, -3568, -3568,   310, -3568,
   -3568,   308, -1364, -3568, -3568, -3568, -3568, -3568, -3568,  -691,
    -575,  -750, -3568, -3151,  -445, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568,  -882,  -849, -3568, -3568,  -950, -3568,
   -3568,  -956, -3568,  -816, -2017, -3568, -3568, -3568,  1969, -3568,
    2050, -3568,  2789, -3568,  -308,   128,  1517, -2099, -1115,  -505,
    -495, -1969, -3568, -3568,  -254, -3568, -3568,   940,   220,  1519,
   -1608,  -484,  1005,  1062, -3568, -3568,   241, -3568, -2924, -3568,
   -3568, -3568,   206, -3568,   207, -3568, -3568, -3568, -1388,   172,
   -1674, -3568,  -301, -1415, -3568,   -45, -3568,   -86, -3568,  -486,
   -2264, -1949, -3568, -3568,   -82,   247,   311, -3568, -2850, -2522,
   -3568, -3568,  -597, -3568, -3568, -3568,  -604, -3568,  -286,  -470,
   -3568, -3568,  -767, -1892, -3568, -3568, -2376,  1988, -2127,  -349,
   -2073, -3568,  -304, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,  1547,
   -1177, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -2104,   260,
   -3568, -3568,  1035, -3568, -3568, -3568, -1589,   256, -1443, -3061,
   -3568, -3568, -3568, -3568, -3568, -3568,  1139, -3568, -3568,  1655,
    2104, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568,   -29,  1219, -3568, -3568, -3568, -3568, -3568, -3568, -1197,
    2020, -3568, -3568, -3568,    -7, -3568, -3568, -3568, -3568, -3568,
    1723, -3568, -3568, -3568,  2505, -3568, -3568, -3568, -3568,   765,
    1255, -3568, -3568, -3568,  2533,  1211,  -512,  -987, -3568,  2776,
   -3568, -3568, -3568,  2539,  1656,  2112, -3568, -1356, -2174, -3568,
    2610,  -371, -2533,  -564,  -799, -2804, -3568,  -130,  -829,  4863,
   -3568, -3568, -1359, -3568, -3568,  -870, -3568, -3568, -1389, -1365,
    1858,  1847,   496,   501,   288, -3568, -3568,  -557, -3568, -3568,
   -3568, -1336,  -791, -3568, -3568, -3568, -3568, -3568,   807, -3568,
   -3568, -3568,    96, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -1231, -3568,   975, -1088, -3568, -3568, -3568,  1955, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -2057, -3568, -1461,   344, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -2052, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -1361, -3568, -1849, -3568,
   -1016, -3568, -3568,  -383, -2279, -1288,   562, -3568, -3568, -1038,
    2009, -1689, -3568, -3568, -3568,   828, -3568, -3568, -3568, -2240,
   -1139, -3568, -3568, -3089,  -692, -1978,  -663, -3568, -2007,  -174,
   -1283, -2054, -3568, -3568, -3568, -3568,  -803, -3568, -3568, -3568,
      70,  1241, -3568, -3568, -3568, -3568, -3568,  -475,  -385,  1147,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,  2272,
    2234,  1298, -3568, -3568, -2268, -3568, -3568,  1266, -3568,    93,
   -2050, -1530,   413, -3568, -3568,   416, -2860, -3568, -3568, -3568,
   -3568, -3568, -3568,   356,  -810,  -632,  2829, -3568, -3568, -3568,
   -3568, -3568, -3568,  2515,  2054, -1606,  2760, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568,  1741,  2842,  -498,  -966,
   -3568,  -482, -3568, -3568,  -643, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568,  1828, -3568, -3568, -3568, -3568, -3568,
    2258, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568,   441,  -623, -3568,
    -334,  -661, -3568,  -468, -3568, -3568, -3568,  -824, -3568,  -805,
    -751, -1099,     6, -2362, -1563,   433,  2262, -3091, -1229, -1391,
   -1384, -1981,    52, -3568,  2873,    30,  -509,  -586,    -8, -3269,
    -418,  -556, -3568, -2233, -3568, -3568, -3568, -3568,  1771, -3568,
   -3568, -3568, -3568,   770, -3568, -3568, -3568,   397, -3568,   100,
    -119, -3568, -3568,   905, -3568,  1821, -3568, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
    2273,  2877,  2700, -3568,  2315, -3568, -3568, -3568, -3568, -3568,
    -284, -3568,   111, -3568, -2019,  2107,   613, -3568,   863,  -912,
   -1228, -3568,  -285, -3568, -3568,  1121,  2884,  2710, -3568, -3568,
   -3568, -3568, -3568, -2494,  -669, -3568, -2545, -3568, -3568, -3568,
   -3568, -3568, -3568, -3568, -3568,  -658, -3568,  -793, -1705, -3568,
   -3568,   572, -3568, -3568,  -112, -3568,  2838,  2563, -3568,  1087,
   -3568,   283,    -4, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568, -3568,  1187, -3568, -3568, -3568, -3568, -3568, -3568, -3568,
   -3568
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2297
static const short int yytable[] =
{
     426,   730,   802,   749,   749,   749,  1110,   749,   756,   749,
    1191,  1803,   462,   726,   463,   468,  1274,  1275,  1276,  1498,
    1737,  1896,  1226,   477,   479,  1310,  1311,  1313,  2504,   485,
    1505,  1929,  1543,  1153,   491,  1016,   133,  1611,  1930,  1138,
    2578,  2583,  2586,  2594,  1837,   510,  2542,  1295,  1647,  2516,
    1377,   631,  1014,  1949,  2925,  1319,  1132,   534,   535,  2967,
    1957,   537,  1138,  2793,  2606,  1804,  1805,  1806,  1999,  2774,
    2796,  2186,  2616,  1731,  2620,   466,  2615,  1330,  1818,  1946,
     793,   794,  2179,  1154,  2767,   530,  2769,  1963,  2171,  1965,
    2178,  2192,  1379,  1827,  2309,  2196,  3305,  1721,  1086,  2598,
    2599,  2180,  3230,  2117,  2685,  2573,  2211,   533,   426,   426,
    1106,  2073,   426,   542,  2751,  2219,  2666,  1018,  1403,  2752,
    3279,   740,  2141,  2142,  1975,  1977,   530,   561,  3717,  -381,
    2356,  1418,  1419,  1420,  1876,  1874, -2140,  1880,  2490,  2636,
    2669,  2885,  3530,  1405,  1054,   529,  1409, -1766, -2141,  -468,
    -469,  3361,  2194,  2195, -1767,  2197,  2167,  1508,  2200,  2201,
   -2206,  1054,  2204,  2695,  2696,  1907,  1908,  2213,   693,   694,
    1913,  2216,  2217,  2218,  3653,   557,  2221,  2283,  2223,  1429,
    1430,  1431,  2313,  2041,  2232,  1620,   551,  2236,  2237, -1384,
    1928,  1097,  1932,  2631,  3496,  1623,  2167,  1624,  1625,  1468,
    3331,  2654,  3474,  3332,  3321,  1054,  2650,  2771,  2654,  2646,
    2742,  2667,  2450,  1809,  1810,  2671,  1812,  4125,  3321,  3322,
    3566,  3718,  3341,  3333,  3440,  1253,  1139,  2082,  3360,  2687,
    2688,  1553,  3323,  3322,  3710,  2226,  3712,  1147,  2697,  2167,
    3542,   693,   694,  -940,  2689,  1157,  3323,   745,   814,  2596,
    1654,  1789,   749,  1846,  2161,   693,   694,   693,   694,  1412,
    1197,  1193,  1193,   786,   825,  2042,  1508,  2714,  1866,  4074,
    1198,  3405,   625,  2920,  1092,  3188,  3099,  1055,  2614, -1617,
    1063,  2134,  2167,  1135,  3321,  2658,  1886,  1887,  1888,  1502,
    3007,  2655,  1967,  2657,  1055,  3440,  2652,  1895,   519,  3322,
    1525,  1121,  1049, -1766,  3733,  2106,  2783,  2658,  1217, -1384,
    2565,  3620,  3323,   648,  1968,   762,  2167,  3958,  1492,  2658,
    3292,   693,  3327,  2957,  2724,  2311,  2277,  2997,  2998,  2784,
    3102,   571,   661,  1254,  3556,  1734,  1667,  1255,  1055,  1136,
    2563,  2101,  2642,  1834,  2958,  3705,  1707,  2293,  2038,  1256,
    3226,  3286,   125,  2053,  2757,  3736,  1250,  2277,  2161,  3226,
    2277,  2913,  1214,  1218,   747,  1565,  1572,  2334,  2227,  1108,
    2785,  3547,   132,  2786,   657,   502,  3675,  3464,  1502,  1280,
    3235,  1224,  2787,  2502,  1732,  1064,   473,  1046,   482,  1168,
    2503,  1710,  2296,   489,  2433,  2149,   432, -2140,  2161,   590,
    2102,   564,  1225,  3805,  1281, -1617,  3441,  3700, -1766, -2141,
    3438,  2150, -1640,  2335,  2297, -1767,  1462,  3557,   589,  3093,
    3094,  2744,   746,  2601,  1643,  2659, -1384,  1456, -2261,  3548,
    3806,   542,   503,   662,  1413,   126,  2168,  -548,  1776,  1849,
    2981,  2161,  1850,  1219,  1646,   586,   520,  2091,   542,  2985,
     426,  3287,  3284,  3558,  2376,  2744,  1169,   623,   824,  1735,
    2255,   630,  1668,   636,   114,  2265,  2643,   530,  1969,  2758,
    2420,  2271,  3719,   652,  2274,  1501,  2168,  3441,  2959,  1224,
    3572,  2294,  1502,  1257,  2161,  1065,  2982,  1495,  2725,  3576,
    3008,  2092,  2895,  2896,  2897,  3734,  3103,  1613,   530,   742,
    1225,   663,   804,  1160,  1994,  1619,  3913,  3706,  1503,  1526,
    3442,   763,  3170, -1766,   474,  2161,   758,  1505,  2161,  2168,
   -1767,   723,  1626,  1627,  1648,  1009,  1010,   642,   770,  1013,
     637,  2927,  2928,  2929,   795,   530,   764,  3958,  2962,   530,
    1509,   658,  1857,  3293,  1511,   791,  2566,   530,   530,   627,
   -1384,  2107,   803,   426,   770,  3227,  2103,   630,  1436,  2971,
   -1640,  4075,  2168,  2318,  3227,  1502,   826,  2751,   544,  2980,
     831,  1258,  2752,  2239,  1994,  1008,   426,   426,   649,   770,
     426,  2179,  2171,   630,   530,  1614,  3808,  3735,  1149,  2178,
    3006,  2054,  1161,  3662,  1251,   779,  2168,  1503,  1545,  2489,
    2180,  1777,  2278,  2585,  2494,  2495,  1721,  2053,  1502,  3678,
    1924,  3017,  2788,  1463,  1122,  1561,   626,  3720,  2564,  1059,
    3679,  1493,  2775,  1527,  1106,   723,  1655,   787,  3855,  3378,
    3296,  2644,  2451,  2278,   815,   530,  2278,  2647,  2648,  1502,
    2727,  2660,  1502,  1970,  2394,  1084,   630,   530,  2398,  1509,
    3443,   530,  1140,  -548,  3242,  2112,  1104,  1961,   530,  1633,
    1962,  1552,  3444,  1148,  -940,  4126,   749,  3475,  2597,  3861,
    3095,  3110,  2546,  2682,  4000,  1092,  1983,  1081,  1622,  1930,
    2528,  2436,  2654,   670, -1384,  2690,  2999,  2496,  3895,  2497,
    1197,  2175,  2996,   630,  2283,  1070,  3466,  2748,  3189,  2279,
    1198,  1503,  1986,  2654,  2313,  2747,  1092,  1089,   723, -2140,
    1219,  3945,  2277,  1653,  1455,  3915,  2749,  1455,  3362,  2093,
   -1766, -2141, -1384,   781,   747,  1554,  3324, -1767,  3090,  2574,
   -1384,  3334,  3015,  3444,  2649, -2206,  1414,  -381,  2789,  2619,
    3324,  2228,  3567,  3445, -2140,  2055,  1930,  2737,  2738,  2739,
    2740,   723,  4171,  1192,  1784, -1766, -2141,  -468,  -469,  2605,
    1197,  2312, -1767,  2972,  2973,   816,  3721,  3358, -2206,  3005,
    1198,  3000,   630,  1219,  2651,   530,  1050,  3377,  1222,   530,
    2289,  2880,   723,   511,  1503,   723,  1219,  1573,  2759,  3737,
    2790, -1617,  2661,  1219,  1047,   565,  1219, -1384,   475,  3565,
    3359,   128,  3570,   129,  -548,  1950,  3324,  1634, -2296,  3387,
    1495,  1635,   591,   114,  1995,  2434,  3009,   530,  1598,  1285,
    2983,  2791,  1455,   566,   512,  2280,  3977,  1503,  2258,  3328,
    3074,   796,  3680,  1162,  1739,  1682,   654,  1683,  1567,   551,
    1778,  3885,  3863,  1126,  3420,  2054,  3889,  2773,   483,  1180,
    2465,   638,  2624,  1768,   676,  -709,  1851,  3914,  1503,  1852,
    3098,  1503,  4024,   575,  1455,  1150,  3237,  -666,  -666,  1685,
    2161,  2484,  3947,  2126,  2934,  2935,  -666,  1279,  3379,  1284,
    1688,  1464,  1465,  1466,  1995,  3217, -2264,  3380,  1954,  2233,
    1689,  1060,  2259,  3759,  2976,  2167,  1495,   115,   513,  1165,
    1495,  3760,  2542,  3875,  1127,  3877,  3259,  3245,  1691,   130,
     672,  2479,  2670,  3268,  2672,   430,   431,  3272,  3269,  3308,
    2751,  2683,  3273,   576,  1193,  2752,  1797,  1692,  2210,  4055,
    3295, -1617,   132,  1253,   476,  1128,  3388,  3540,  2700,  3547,
     484,  2611,  4065,  1163,   488,  2502,  1940,   747,   800,   801,
    2145,  1998,  2933,   673,  2612,  2139,  3247,  1492,   116,  1697,
     862,  -547,  1155,  1164,  4095,  1606,  2569,  1434,   630,  1437,
    2181,  2327,   677,  2109,  2485,  1166,   128,  2111,   129,  3681,
    2114,  2115,  2116,  2182,  1138,  3540,   800,   801,  2278,   117,
    1798, -2264,  1951,  2033,  1502,  1579,   471,  3548,  2260,  2055,
    1174,  2049,  2050,   530,  3379,  2801,  2802,  1611,  1611,  2074,
    2161,   530,  1151,  3380,  1473,   568,  2328,  1941,  2078,  1156,
    3381,  3951,  2654,  3953,   875,   118,  1079,  2833,  1799,  4180,
     134, -1641,   546,  2122,  4157,  2993,  1700,  2453,  3493,  1181,
    1607,  1254,   577,  2004,  1701,  1255,  2487,  1568,  1530,  3747,
    1533,    43,   530,  1152,  2279,   678,  2179,  1256,  3528,  1273,
    2570,  3571,  2171,  1500,  2178,   530,   926,  4181,  1599,  1600,
    1601,   630,  2301,  2261,  1985,  2180,  2234,   119,  2966,  -547,
    1612,  4036,   530,   530,  3112,  1585,  2146,  2183,  1618,  1474,
    3395,  1537,  2977,  1570,  2000,  2621,  1800,  2161,  2480,  1578,
    1731,  2882,   918,  3971,  2094,   429,  3402,  3389,  2186,  4009,
     918,  3761,  3948,  1580,  3344,  1702,  2877,  2034,  2079,   426,
     426,   426,   530,   530,  1721,  1478,   434,  1224,  2211,  1797,
     902,   426,  1703,   630,  1502,  2613,  4099,   723,  2174,   426,
    3421,   823,  3864,   514,  1129,  2916,  3381,  2602,  1225,   530,
    2748,  1595,  1930,  1658,  2283,  3345,  1586,   918,  2747,  3346,
    2907,  1527,   490,   515,  2834,  1961,  1659,  1108,  1952,  2749,
    3533,  1801,  2080,  2123,  1961,  2168,  4041,  2493,  3615, -1641,
    2280,  2691,  1602,  1603,  1706,  2175,  1953,   435,  1658,  2124,
    1708,  1257,   516,  1798,  2707,  3390,  2708,   496,   120,    55,
    1550,  1659,  2125,  3347,  4042,   923,  1942,  3957,   530,  1621,
    2561,   530,  3480,  1503,  3097,  1771,  1772,   436,  3486,  3487,
    1608,  -547,  2122,  2122,  2122,  3865,  3890,  2288,  1482,  3677,
    2181,  1799,  3876,   632,  3878,  2709,  1483,  1673,  1551,  3549,
    2525,   517,   772,  2182,  2794,  3018,  2741,  1587,  1738,  2799,
    -175,  3866,   548,  2262,  1633, -1617,  1714,  -714,  1130,  2710,
    1493,  2692,   918,   630,  2807,   630,   426,   426,  1736,   530,
    3528,  2812,  3528,  2143,  2481,  2776,   747,   723,   831,  1258,
    1788,  3373,  2059,  2126,   747,  2181,  2821,  2822,   481,  2035,
    3278,   773,  2482,  2826,  2711,  -547,  2079,  2289,   492,  1800,
    2483,  2831,  1317,  1646,  3746,  1715,   437,  1484,  2754,  2492,
    1317,   121,  -822,  1074,  1828,  2249,  2144,  1075,  1131,  1716,
    1797,   679,   680,   681,   682,   683,   684,  1234,  1235,  1774,
     633,   747,  4043,  1660,  3954,   498,  -680,  1797,   685,  -547,
    2849,  2699,  4013,  1717,   504,  1588,  2989,  2183,  1495,  1793,
    2059,  1802,  1038,  1503,  1718,   797,  1828,  1317,    55,  1486,
    2693,  4014,  2123,  2123,  2123,   505,   593,  1793,  1660,  3121,
     774,  3816,  1318,  3125,  1801,  2185,  1136,   507,  2124,  2124,
    2124,   523,   644,  2127,  1798,   955,  2645,  1224,  1793,   522,
     656,  2125,  2125,  2125,  2207,  3014,  3817,  2122,  1793,  3965,
     634,  1798,  1634,  2883,  3725,  3726,  1635,  3457,  1225,  1661,
    2181,  4044,  2302,   743,  1931,  1495,  1226,   524,  1226,  1404,
    1039,  2059,  1799,   531,   798,  1793,  3690,  2060,  4045,  3374,
    3773,   800,   801,  4061,  1662,   543,   747,   800,   801,  1799,
    2128,   806,  1224,  3348,  1661,  3458,  -547,  4062,  1450,  3349,
     536,  2473,  4046,  1076,  2474,  3092,  1245,  1246,  3254,  2061,
    2062,  4037,  1317,  1225,  1040,   544,  1012,  1794,  4158,  1662,
    1451,   553,  2126,  2126,  2126,  1209,  1210,  3255,  3335,  1041,
    1487,  3336,  4159,  3350,   630,  1817,  3528,  3528,  1663,  1989,
    1800,  3010,  1489,  3484,  3488,  3821,  3213,   450,  2919,   630,
     233,   554,   235,  2748,   630,   438,  1875,  1800,  3256,  1268,
     530,  2747,  2006,  3136,  3137,   557,  1879,  2011,  2011,  2207,
    2011,  3021,  2749,  1663,  1408,  2470,  3022,  1458,  1459,  3024,
    2061,  2062,  2546,   530,   559,  2712,   530,  2123,  2184,  1930,
     439,  -474,   440,  1912,  3927,   572,  3928,  3351,  2048,   630,
     630,   530,   530,  2124,  1802,  -547,   800,   801,   451,  2011,
    2011,  2011,   693,   694,   562,  1801,  2969,  1224,  1664,  2063,
     500,  1652,  2127,  2127,  2127,   501,   441,  2010,  2010,  1135,
    2010,  2089,  1801,  3655,  2047,   775,   442,  2619,  1225,   452,
    2100,  1460,  1461,  2032,  1930,  2067,  1070,   839,   584,   585,
    3774,   723,   588,  1664,  1937,  1938,  3528,   592,  2878,  2110,
    2209,  1089,  2052,   574,   530,  4047,  2316,  2317,  3315,  2010,
    2010,  2010,  3528,  2096,  1452,  2348,  2349,  2121,   453,  2128,
    2128,  2128,  2174,   530,  3352,  2185,   440,  2013,   582,  2014,
     735,   736,   776,   739,   777,  3563,  3564,  2126,  2350,  2351,
     587,  3316,  3339,  3340,  3319,  3320,  2354,  2355,  1522,   624,
    3343,  1523,  3534,  3574,  1524,  2175,   641,  3366,   645,  3578,
     862,  3337,   647,  2584,  2113,  2588,  2593,   454,  2069,  2070,
    2071,  1453,   737,  3157,   658,  3656,  3657,  4132,  2152,   757,
    3658,  3659,  3594,  2133,   759,  3596,  2881,  2159,  2160,  3810,
     751,   752,  2887,   753, -1384,   754,  -547,   627,  2235,   780,
    3528,  2361,  2362,   781,  2299,   807,  2681,   790,  2208,   813,
    1054,  2248,   114,  2630,  2584,   630,  1007,   873,  3528,  2366,
    2367,  1011,  2253,  1020,   875,  2209,  2476,  2477,   693,   694,
    1019,  2369,  2370, -1384,  2288,  1802,   723,  2127,  2371,  2372,
    1978,  1979,  1980,  1981,  1982,  2753,  3892,  2289,  1035,  1054,
    3528,  2754,  1802,  2383,  2384,   426,  2387,  2388,  2400,  2401,
    2404,  2405,   890,   530,  2256,  2257,  2310,  2264,  1037,  2266,
    2267,  2268,  2269,  2270,  1042,  2272,  2273,  1044,  3528,  2406,
    2407, -1384,  1052,   -59,   118,  1135,  2414,  2415,   455,  1454,
    1455,  3528,  3528,  1053,  2128,  2417,  2418,  2426,  2427,  1068,
    1022,  1069,  2439,  2440,  1061,  3302,  2458,  2459,  1135,  1082,
    2460,  2461,  3528,  3528,  2507,  2508,  1095,  3403,  2734,  2735,
   -1384,  1099,  3528,  2307,  2922,  2923,  2803,  3026,  3027,  1096,
     902,  3108,  3027,  1100,  2808,  2916,  3164,  3165,  3168,  3169,
    3190,  3191,  1930,  1055,  1103,  3969,  3310,  1219,  3371,  3372,
    3452,  3453,  3528,  3618,  3619,  3624,  3625,  3627,  3628,  3669,
    3670,  3982,  3724,  3670,  3727,  3619,  3826,  3827,  1108,  1110,
    3858,  3619, -1384,  3859,  3619,  3869,  3870,  3871,  3872,  3873,
    3872,  1111,  1055,  3528,  1226,  3898,  3899,  1119,  3426,  1118,
     918,  1023,  1120,  2963,  1124,  3528, -1384,  3910,  3911,  2584,
    3581,   456, -1384,   457,   922,   923,  2584,  2015, -1384,  3984,
    3827, -1384,  3985,  3827,  3528,  1125,  3528,  4001,  3670,   458,
    3528, -1384,  1138,  4108,  4109,   630,  1136,  2472,  2016, -1384,
    1441,  1442,  4174,  4175,  1141, -1384,  1142, -1384,  3528,  1143,
    2210, -1384,  4178,  4179,  1972,  1973,  1144,   459,  2017,  2965,
   -1384,  1974,  1976,  1024, -1384, -1384,  3282,  3283,  1916,  1917,
   -1384,  1145,   460,  2018,  3728,  3729, -1384,  2912, -1384,  2936,
    2937,  1443,  1146,   839,  3219,  3220, -1384,  1025,  1158,   630,
    1159,  3450,  3451,  1173,  1176,  1175,  1444,  1178,  1183, -1384,
    1200,  1204,  1207,  1211, -1384,  1215,  1216,  1262,  1263,  3529,
    1264,  1269,  1271,  1272,  1611, -1384,  3939,  1277,  2019,  2020,
    1288,  1273,  1286,  1290,  1291,  1292,  1293,  4114,  4115,  2956,
    1445,  1494,  3939,  1294,  1467,  1296,  1297,  2532,  1506,  1298,
    1299, -1384,  1446,  1300,   747,  1301,  1302,  1303,  3534,  1497,
    2021,  1304,  1305,  1306,  1307,  2547,   862,  1507,  1308,  1309,
    1438,  1312, -1384,  1314,  1315,  1316,  1320,  2558,  2560,  1321,
   -1384,  1322,  1323,  1447,   747,  1324,  3535,  1325,  1326,  3536,
   -1384,  1327,  1026,   630,  1328,   630,   630,  1331,  1027,  2637,
     953,  1457,  1332,  1515,  1333,   955,  1334,  1335, -1384,  1336,
     956, -1384,  1337,  3541,  1338,  2557,  1339,  1517,  1340, -1384,
    1341,  2022,  2174,   873,  2754,  1342,  1343,  1344,  1345,  1028,
     875,  1346,  1931,  1347,  1348,  1349,  1350,  1352,  1353,  1354,
    1355,  1356,  1448,   630,   630,  1357,  1358, -1384,  4003,  1359,
     426, -1384,  1360,  1361,  1365,  1516,  1366,  1367,  1368,  1369,
    2941,  4154,  1370,  1371,  3537,  3538,  1029,  1295,   890,  2023,
    1519,  1372, -1384,  1373,  1374,  1375,  1376,  1378,  1538,  1380,
    4031,  1381,  1382,  1539,  2248,  1383,  1384,  2656,  1030,  1385,
   -1384,  2248,  1386,  1387,  2248,  1388,  2668,  1389,  2248,  1390,
    2677,  1391,  2678,  1392,  1393,  1031,  1394,   129, -1384,  1395,
    2677, -1384,  2248,  2248,  2288,   630,  1396,  1397,  2753,  1398,
    1399,  2248,  4066,  2698,  3280,  3280,  3280,  2703,  1400,  1401,
    1402,   530,  1406,  2705,  2706,  1542,   902,  3482,   630,  1407,
    2679,  2680,  3939,  1410,  1512,  2248,  2723, -1384,  1411,  1415,
    3025,  1416,  3939,  1417,  1421,  1422, -1384,  1423,  1424,  1425,
    1426,  1496,  1520,  2702,  1548,  1544,  1556,  1557,  1558,  1559,
   -1384,  1560,  1566,  2584,  1571,  1582,  1584,  1593,  1597,  1615,
    1628,  1630,  3939,  1632,  1644,  1656,  1740, -1384,  1733, -1384,
    1741,  2704,  1742,  1743,  1744, -1384,   918,  1745,  1746,  1747,
    1748,  1749,  1750,   530,  2248,  1751,  1752,  1753, -1384, -1384,
     922,   923,  3386,  1754,  1755, -1384, -1384,  1756,  1757,  1758,
    1759,  1762, -1384,  1765,  1769,  4172, -1384,  1767, -1384,   630,
    1781,  1773,  1682,  1492,  1683,  1786,   630,  1793,  1821,  1414,
    1432,  1841,  1855,  1872,  3939,  1936,  1904,  1964,  1927,  2804,
    4183,  1944,  1984,  2002, -1384, -1384,  1959,  3731,  1945,  1990,
    2026, -1384,  2001,  2763,  -666,  -666,  1685,  2029,  3939,  2068,
    2039,  2045,  2076,  -666,  2097,  2072,  2099,  1688,  2108,  2130,
    2136,  2131,  2135,  3789,  3790,  3791,  3792,  1689,  1232,  1233,
    1234,  1235,  1236,  1237,  2138,  1828,  1238,  1239,  1240,  1241,
    1242,  1243,  2153,  1244,  2148,  1691,  2154,  2158,  2155,  2156,
    1682,  3781,  1683,  2157,  2181,  2193,  2198,  2199,  2202,  2203,
    1930,  1193,  2205,  2206,  1692,  2212,  2887,  2214,  2215,  2220,
    2224,  2276,  2290,  2225,  2230,  2231,  2312,  2308,  2314,  2315,
    2319,  2907,  -666,  -666,  1685,  2321,  2322,  2323,  2324,  2325,
    2326,  -666,  2329,  2330,  2331,  1688,  1697,  2332,  2333,  2336,
    2338,  2339,  2340,  2358,  2343,  1689,  2506,  2341,  2342,  2344,
     747,  2345,  3535,  2346,  2363,  3536,  2352,  2347,  2353,  2357,
    2359,  2360,  2467,  1691,  2392,  2364,   953,  2365,  2373,  2511,
    2368,   955,  2374,  2378,  2377,  2380,   956,  2379,  2385,  1193,
    2381,  2382,  1692, -1051,  2386,  2891,  2519,  2389,  2390,  2391,
    2006,  2393,  1059,   630,   630,   630,  2402,  2466,  2491,  1245,
    1246,  4078,  1455,   530,  4081,  4082,  4083,  4084,  2395,  2396,
    3251,  2416,  2397,  1700,  1697,   630,  2399,  2403,  1931,  2408,
    2409,  1701,  2410,  2411,  2412,  2630,  2413,  2419,  2421,  2512,
    3537,  3538,   630,   630,   630,  2422,  2429,  2932,  2430,  4112,
    4113,  2423,  2424,  2425,  2428,  2431,  2513,  4120,  2432,  3785,
     630,  2753,  1682,  2435,  1683,  2437,  2438,  2944,  2441,  2946,
    2442,  2443,  2454,  2032,  3599,  3600,  2452,   630,  2455,  2456,
    2457,  2462,  2468,  2469,  1930,  2931, -1232,  2523,  1219,  2509,
    2510,  2521,  2524,  2526,  2533,  2537,  1685,  2549,  2550,  2551,
    2552,  1700,  1702,  2080,  2576,  2079,  2553,  1688,  2603,  1701,
    2575,  2577,  3757,  2600,  2607,  2608,  2609,  1689,  2625,  1703,
    2632,  2635,  2638,  2640,  2641,  3972,  2684,  2686,  2715,  2731,
    2743,  2755,  1707,  1646,  1787,  1691,  2732,  2756,   894,  2860,
    2780,  2813,  2800,  2823,  2835,  2862,  2864,  2867,  2870,  2836,
    2900,  1193,  2855,  2874,  1692,  2248,  2879,  2886,  2893,  2898,
    2677,  2875,  3630,  2904,  2908,  2911,  2910,  2921,  2990,  2918,
    2926,  1706,  2942,   630,  4073,  2924,  2248,  1708,  2943,  2945,
    1702,  2953,  2964,  2975,  2970,  2978,  1697,  2974,  1654,  2991,
    2677,  3003,  3004,  3087,  3013,  2677,  3101,  1703,  2677,  3105,
    -388,  3111,  3126,  3116,  3113,  3117,  3118,   530,  3119,  3122,
    4073,  3127,  3016,  3128,  3129,  4144,  3028,  3130,  3131,   530,
    3019,  3132,  1930,  3084,  3085,  3133,  3138,  3088,  3134,  1319,
    1405,  1409,  3139,  3208,  2503,  3096,  3210,  3225,  3140,  3229,
    1074,  2059,  3248,  1714,  4073,  3253,  3141,  3264,  3267,  1706,
    3270,  3142,  3750,  3143,  3145,  1708,   530,  3271,  3144,  3150,
    3298,  1930,  3146,  1700,  3147,  -760,  3148,  3091,  3149,  1679,
    3151,  1701,  3158,  3152,  3153,  3154,  1680,  1681,  3155,  3029,
    3159,  3160,  3161,  3162,  4144,  3299,  3163,  3166,  1682,  3167,
    1683,  1930,  1715,  3182,  3173,  3174,  3175,  3176,  3177,  3178,
    4116,  3179,  3180,  3181,  3183,  3209,  1716,  3184,  3185,  4124,
    3187,  3745,  3192,  3193,  3232,  3194,  3106,  4134,  1684,  3195,
    3196,  1714,  1685,  1686,  3745,  3198,  3200,  1687,  3202,  3203,
    1717,  3204,  3205,  1688,  2941,  3215,  3568,   596,   597,  3206,
    3212,  1718,  1702,  1689,  3216,  3265,  4134,  3236,  1690,  3260,
    3252,  3261,  3285,  3297,  3313,  3314,  3317,  3404,  3342,  1703,
    3364,  1691,  3365,  3370,  3367,  3406,  3796,  3211,  3413,  3394,
    1715,  3408,  3409,  3415,  3410,  3422,  3423,  1193,  3432,  3433,
    1692,  3434,  3435,  3448,  1716,  3455,  3459,  3467,  3456,  1693,
    1694,  2933,  3465,  3468,  3470,  3453,  3473,  1695,  3476,  4134,
    3478,  2770,  3479,  2532,   749,  1696,  3483,  2584,  1717, -1316,
   -1321,  1706,  1697,   598,  3492,  2547,  3244,  1708,   630,  1718,
    3497,  3531,  3874,  3532,  3554,  2891,  3361,  2630,  3555,  3562,
     630,  3575,  3358,  3573,  3577,  1469,  1470,  1471,  1472,  1473,
    1698,  3584,  3585,   599,  3586,   630,  3588,  3589,  3601,  3590,
    3591,  3604,  3592,  2089,  3593,  3616,  3595,  3605,  3608,   600,
    3614,  3621,  3632,  3622,  3623,  3637,  3638,  3886,  3626,  3639,
    1931,  3629,  3650,  3648,  3651,  3631,  3633,  3663,  3634,  3635,
    3684,   601,  3647,  1714,   602,  3636,  3640,  1699,  3641,  1700,
    3642,  3652,  3689,  3643,  3644,  2248,   603,  1701,  3645,  3646,
    3665,  3667,  3698,  2248,  3686,  2677,  3687,  3692,  3694,  3702,
    3708,  3711,  3732,  3741,  1474,  2677,   667,   597,  3723,  2248,
    3715,  3742,  3751,  3749,  3766,  3752,   604,  3753,  3754,  3762,
    3755,  3756,  1715,  3625,  3768,  3778,  3769,  3779,  3783,  3784,
    3794,  3788,  3775,  3795,  3811,  3812,  1716,  1475,  1476,  1477,
    1478,   605,  3813,   749,  3814,  3820,  3823,  3825,   606,  3831,
    3918,  3919,  3879,  3921,  3894,  3880,   749,  3881,  1702,  3862,
    1717,  3882,  3896,  3897,  3900,  3901,  3908,  3902,  3920,  3922,
    3916,  1718,  3923,  3925,  3930,  1703,  2735,  3931,  3758,  3932,
    1704,  3936,   598,  2727,  3940,  3946,  3955,  3956,  3962,   607,
    3963,  3964,  3975,  3401,  3968,  3987,  3989,  3992,  3988,  3995,
   -2061,  3996,  3998,  4002,  4004,  4017,  4007,  4011,  4018,  4022,
    4023,  3952,   599,  4039,  4052,  4032,  4040,  1705,  4053,  4057,
    4058,  1646,  4054,  4063,  4059,  4068,  4064,  1706,   600,  4079,
    1707,  4080,  4087,  1708, -1440,  4092,  4097,  4096,  4100,  1479,
    2584,  1480,  1481,  1482,  4101,  4102,  4105,  4106,  4123,  4130,
     601,  1483,  4118,   602,  4122,  4137,  4139,  4145,  4148,  3979,
    4151,  3980,  3981,  1709,  4169,   603,  2505,  4184,  2736,  3376,
    3603,  3883,  2275,  1206,  4104,  1710,  1711,  1712,  1713,  3770,
    3888,  3764,  4133,  4190,  3510,  3511,  4156,  3513,  3514,  3515,
    3516,  3518,  3519,  3520,  3521,   604,  3522,  3523,  3524,  1714,
    3525,  3943,  1678,  1267,  3891,  1993,  1719,  2701,  3231,  3234,
    3974,  3907,   608,  4012,  1110,  3803,  4110,  4147,  1931,  4189,
     605,  4191,  1484,  4086,  1761,   573,  3396,   606,  2238,   597,
     609,  3699,  2768,  3860,   630,  1651,   610,  3311,  2245,  2662,
    3802,  2728,  3301,  4088,   611,  3368,  3329,  3330,  1715,  3743,
    3543,  3944,  3304,  3579,  3258,  3949,  3740,  3868,  3587,  1780,
    3777,  3748,  1716,  3303,  2718,  2242,  1631,  2534,   607,   612,
    3546,  1760,  2051,  1485,  1486,  2119,  2903,  2522,  2562,  3401,
     613,   614,  1223,  1189,  3481,   755,  1717,  1114,  1188,  3544,
    1650,  3804,   749,   749,  1971,   749,  2140,  1718,  3649,  2890,
    2797,  3439,  3266,  1966,   598,  3829,  1871,   630,  1819,  3697,
    4155,  2884,  3472,  2572,  4088,  1562,  2518,  3960,  2540,  3463,
     615,  3240,  1536,  3239,  3277,  4176,  4008,   630,   744,   832,
    1785,   729,  1283,  3228,   599,  2003,  2105,  4010,  3815,  4038,
    3924,  4186,   616,  3583,  1564,  2086,  3243,  2961,  3262,  3477,
     600,  3688,  3597,   749,  3598,  2037,   669,  1098,  1529,  1577,
    3787,  2892,  1569,  -760,   671,  3793,  3580,   617,   530,   618,
    1770,  1102,   601,   782,  3612,   602,  1278,  2762,  3393,  3613,
       0,     0,     0,     0,     0,     0,     0,   603,     0,     0,
       0,   608,     0,     0,     0,  1487,     0,     0,     0,     0,
       0,   749,     0,   749,   749,     0,  1488,  1489,     0,   609,
       0,     0,     0,     0,     0,   610,     0,   604,     0,     0,
    2558,     0,     0,   611,     0,     0,     0,     0,  3607,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   605,     0,  1002,     0,     0,     0,   612,   606,
       0,     0,     0,     1,     0,     0,     0,     0,  2557,   613,
     614,     0,     0,     0,     2,     3,     0,     0,     0,     0,
       0,     0,     0,     0,  3696,     0,     0,     0,     0,     0,
       4,  3704,     5,     0,     0,     0,     0,     6,  3713,     0,
     607,     0,     0,     0,     0,     0,     0,     0,     0,   615,
       7,     8,  1002,     0,     0,     0,     9,  4051,     0,     0,
      10,    11,     0,  3401,  3401,     0,     0,     0,     0,     0,
       0,   616,     0,    12,     0,     0,     0,     0,     0,     0,
       0,  3739,     0,     0,     0,     0,     0,  3960,     0,    13,
       0,  4051,     0,     0,     0,     0,   617,     0,   618,     0,
     630,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      14,     0,  4166,     0,     0,     0,     0,     0,     0,    15,
      16,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    18,    19,     0,     0,  3765,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3401,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,   608,     0,  4166,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,  3767,     0,
       0,   609,     0,     0,     0,     0,     0,   610,     0,     0,
       0,     0,     0,     0,     0,   611,     0,     0,     0,  3800,
     630,  4185,    22,  1002,     0,     0,  4117,     0,     0,    23,
       0,     0,    24,     0,     0,     0,     0,     0,     0,     0,
     612,     0,     0,     0,     0,     0,     0,     0,     0,  4051,
    2253,   613,   614,     0,    25,     0,    26,     0,     0,  3832,
       0,     0,  1135,     0,     0,     0,     0,     0,     0,    27,
       0,  1002,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4173,     0,     0,     0,     0,     0,     0,
      28,   615,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   616,     0,     0,     0,     0,     0,  4188,
       0,  3612,     0,     0,     0,     0,     0,  1002,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   617,     0,
     618,     0,     0,     0,     0,     0,  1931,   530,     0,     0,
       0,     0,     0,  1002,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3696,     0,  3696,     0,  3929,
       0,     0,     0,     0,     0,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,  1002,  1002,  1002,  1002,  1002,  3906,     0,     0,
       0,     0,    32,     0,     0,     0,     0,     0,     0,     0,
      33,     0,  3950,  1002,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,    35,     0,    36,     0,     0,    37,
       0,     0,    38,     0,    39,     0,     0,     0,     0,    40,
       0,    41,     0,  3800,     0,     0,     0,     0,  3978,     0,
      42,     0,     0,     0,     0,    43,     0,     0,     0,     0,
       0,    44,     0,     0,     0,     0,    45,     0,     0,     0,
      46,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,     0,     0,     0,     0,    48,     0,     0,     0,     0,
    1931,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4020,     0,
    1002,     0,     0,     0,  4029,     0,     0,     0,     0,     0,
       0,     0,    49,     0,     0,  1002,     0,     0,     0,     0,
       0,     0,     0,     0,    50,     0,     0,     0,     0,     0,
      51,     0,     0,    52,     0,     0,     0,     0,    53,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    54,     0,     0,     0,  4093,     0,     0,     0,
       0,  4098,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    55,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   630,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1931,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4111,     0,
       0,     0,   630,     0,     0,     0,     0,     0,     0,     0,
       0,  4167,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   630,     0,     0,     0,  1931,     0,     0,
       0,     0,  4149,  4150,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1002,  1002,  1002,     0,  1931,     0,   630,
       0,     0,  1002,  1002,  4167,     0,  1002,     0,  1002,  1002,
    1002,  1002,     0,     0,     0,  1002,     0,     0,  1002,  1002,
       0,  1002,     0,  1002,  1002,     0,  1002,  1002,  1002,  1002,
    1002,     0,     0,     0,  1002,     0,  1002,  1002,  1002,     0,
    1002,  1002,  1002,  1002,     0,  1002,  1002,     0,  1002,     0,
       0,  1002,  1002,  1002,     0,  1002,  1002,  1002,  1002,     0,
    1002,  1002,  1002,  1002,     0,     0,     0,     0,     0,  1002,
    1002,     0,  1002,  1002,  1002,  1002,  1002,     0,     0,     0,
       0,  1002,     0,  1002,  1002,  1002,  1002,  1002,     0,  1002,
    1002,  1002,  1002,  1002,  1002,  1002,     0,  1002,  1002,     0,
       0,  1002,  1002,  1002,     0,  1002,     0,  1002,     0,     0,
       0,  1002,     0,  1002,  1002,     0,     0,     0,     0,  1002,
       0,     0,     0,     0,     0,     0,     0,  1002,  1002,  1002,
       0,     0,     0,     0,     0,     0,     0,  1002,     0,     0,
       0,  1002,     0,     0,     0,  1002,     0,     0,     0,     0,
       0,     0,  1002,     0,  1002,  1002,     0,  1002,  1002,     0,
    1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,
    1002,     0,     0,     0,     0,     0,     0,     0,     2,     3,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     4,     0,  1002,  1002,     0,     0,
       0,     6,     0,  3030,  3031,     0,     0,     0,     0,  3032,
       0,  3033,  3034,  3035,     7,     8,     0,     0,     0,     0,
       9,     0,     0,     0,    10,    11,     0,  3036,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    12,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,  1002,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3037,     0,
       0,  3038,     0,     0,    14,     0,     0,     0,     0,     0,
    3039,     0,     0,    15,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,    19,
       0,  3040,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3041,
       0,     0,     0,     0,    20,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    21,  3042,     0,  3043,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3044,  3045,     0,    22,     0,     0,     0,
       0,     0,     0,    23,     0,     0,    24,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    25,     0,
      26,     0,     0,     0,     0,     0,     0,  3046,     0,     0,
       0,     0,     0,    27,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,  3047,     0,     0,    29,
       0,     0,     0,     0,     0,  1002,     0,  3048,  3049,     0,
    3050,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3051,  3052,  3053,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3054,  3055,  3056,     0,     0,     0,  3057,     0,     0,
    3058,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3059,  3060,     0,     0,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3061,    32,  3062,     0,     0,
       0,     0,     0,     0,    33,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3063,     0,
       0,     0,     0,     0,     0,    34,     0,     0,    35,     0,
      36,     0,     0,    37,     0,     0,    38,     0,    39,     0,
       0,     0,     0,    40,     0,    41,     0,     0,     0,     0,
       0,     0,     0,     0,    42,     0,     0,     0,     0,    43,
       0,     0,  1002,  1002,  1002,    44,     0,  3064,     0,  3065,
      45,     0,     0,     0,    46,     0,     0,     0,     0,  3066,
       0,     0,     0,     0,     0,     0,     0,  1002,     0,     0,
       0,     0,     0,     0,    47,     0,     0,  2716,     0,    48,
       0,     0,     0,     0,  1680,     0,     0,  1002,     0,     0,
       0,  1002,  1002,  1002,     0,     0,  1682,     0,  1683,     0,
       0,     0,     0,     0,  3067,  3068,     0,  1002,  3069,  3070,
    3071,  3072,     0,     0,     0,     0,    49,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1684,     0,    50,     0,
    1685,     0,     0,     0,    51,     0,     0,    52,     0,     0,
       0,  1688,    53,     0,     0,     0,     0,     0,     0,     0,
       0,  1689,     0,     0,  3073,  3074,  1690,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    54,     0,     0,  1691,
       0,     0,     0,     0,  3075,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1193,     0,    55,  1692,     0,
       0,     0,     0,     0,     0,     0,     0,  1693,     0,     0,
       0,     0,     0,     0,     0,  2717,     0,     0,     0,     0,
       0,     0,     0,  1696,     0,     0,     0,     0,     0,     0,
    1697,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     690,     0,     0,     0,     0,     0,     0,     0,  1698,   691,
       0,   648,   692,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,  1002,
       0,     0,     0,   693,   694,     0,     0,     0,     0,     0,
       0,     0,     0,   695,     0,   696,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1700,     0,     0,
       0,     0,     0,   697,   698,  1701,     0,     0,     0,     0,
       0,     0,   699,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   700,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1617,   701,     0,     0,     0,   702,
       0,     0,     0,     0,     0,     0,  1702,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1703,     0,     0,     0,     0,  1704,     0,
       0,   703,     0,   704,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   705,     0,     0,   706,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1002,     0,  1646,
    1002,   707,   708,  1002,  1002,  1706,   709,     0,     0,     0,
       0,  1708,     0,     0,     0,     0,  1002,     0,     0,  1002,
       0,     0,   710,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1002,     0,  1002,     0,     0,     0,  1002,     0,
    1002,  1002,     0,     0,     0,  1002,   711,  1002,  1002,     0,
    1002,     0,   712,  1002,  1711,  1002,  1002,     0,     0,     0,
       0,  1002,  1002,     0,     0,  1002,     0,  1002,     0,  1002,
       0,  1002,     0,  1002,     0,  1002,   713,  1714,     0,     0,
       0,     0,     0,     0,  1002,  1002,     0,     0,  1002,     0,
    1002,     0,     0,     0,     0,     0,     0,     0,  1002,  1002,
       0,  1002,     0,  1002,     0,     0,  1002,  1002,  1002,     0,
    1002,   714,     0,     0,     0,  1002,  1002,  1002,  1002,     0,
     715,     0,     0,  1002,  1002,  1002,  1715,  1002,     0,  1002,
       0,  1002,     0,  1002,     0,  1002,     0,     0,     0,   716,
    1716,     0,  1002,     0,  1002,     0,     0,  1002,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,   717,
     718,  1002,     0,     0,  1717,     0,     0,     0,     0,     0,
    1002,   719,   720,  1002,     0,  1718,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   721,  1002,     0,     0,     0,
       0,     0,     0,     0,     0,   722,     0,     0,     0,     0,
       0,     0,     0,     0,   978,     0,     0,     0,     0,     0,
       0,  1002,     0,     0,     0,     0,  1002, -2087,     0,     0,
       0,   723,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   724,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1002,
       0,     0,  1062,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1002,     0, -2087,     0,     0,     0,     0,   725,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,     0,     0,  1231,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1002,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1002,     0,  1002,     0,  1002,     0,     0,
       0,     0,     0,  1002,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1351,  1002,     0,
    1002,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1002,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1002,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1427,     0,     0,  1002,  1433,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1002,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1576,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1596,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1002,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1002,     0,     0,
       0,     0,     0,  1002,     0,     0,     0,     0,     0,     0,
       0,     0,  1002,  1002,     0,     0,     0,     0,  1002,     0,
       0,     0,  1002,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1002,     0,     0,     0,     0,
       0,  1002,     0,     0,  1002,  1002,     0,  1002,  1002,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1002,  1002,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1002,  1002,     0,
       0,     0,     0,  1790,  1791,  1792,     0,     0,  1002,     0,
       0,     0,  1807,  1808,  3526,     0,  1811,     0,  1813,  1814,
    1815,  1816,     0,     0,     0,  1820,     0,     0,  1822,  1823,
       0,  1824,     0,  1825,  1826,     0,  1829,  1830,  1831,  1832,
    1833,     0,     0,     0,  1836,     0,  1838,  1839,  1840,     0,
    1842,  1843,  1844,  1845,     0,  1847,  1848,     0,  1854,     0,
       0,  1858,  1859,  1860,     0,  1862,  1863,  1864,  1865,     0,
    1867,  1868,  1869,  1870,     0,     0,     0,     0,     0,  1877,
    1878,     0,  1881,  1882,  1883,  1884,  1885,     0,     0,     0,
       0,  1889,     0,  1890,  1891,  1892,  1893,  1894,     0,     0,
    1897,  1899,  1900,  1901,  1902,  1903,     0,  1905,  1906,     0,
       0,  1909,  1910,  1911,     0,  1914,     0,  1915,     0,     0,
       0,  1918,     0,  1922,  1923,     0,     0,     0,     0,  1926,
       0,     0,     0,     0,     0,     0,     0,  1933,  1934,  1935,
       0,     0,     0,     0,     0,     0,     0,  1939,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1002,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1002,     0,     0,     0,  1987,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1002,     0,     0,     0,     0,     0,  3526,     0,  3526,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2046,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1002,     0,     0,     0,     0,     0,  1002,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1002,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1002,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1002,     0,  1002,     0,     0,     0,
       0,     0,     0,     0,     0,  1002,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1002,     0,  1002,
       0,     0,  3526,  3526,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2254,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1002,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1002,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1002,     0,     0,
       0,     0,  3526,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3526,  1002,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3966,     0,     0,
       0,     0,  1002,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2445,  2447,  2449,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1002,
       0,     0,     0,     0,     0,     0,     0,  2471,  1002,     0,
       0,     0,     0,     0,     0,     0,  3526,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3526,     0,     0,     0,     0,     0,
       0,     0,  1002,     0,     0,     0,     0,  2498,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3526,     0,     0,     0,
    1002,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3526,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3526,  3526,     0,
       0,     0,  1002,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3526,  3526,
       0,     0,     0,     0,     0,     0,     0,     0,  3526,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1002,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1002,     0,     0,     0,     0,     0,     0,  3526,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1002,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3526,
       0,     0,     0,  1002,     0,     0,     0,     0,  2633,  2634,
       0,  3526,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3526,     0,  3526,     0,     0,     0,  3526,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3526,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2778,     0,     0,
    2779,     0,     0,  2781,  2782,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2795,     0,     0,  2798,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2805,     0,  2806,     0,     0,     0,  2809,     0,
    2810,  2811,     0,     0,     0,  2814,     0,  2815,  2816,     0,
    2817,     0,     0,  2818,     0,  2819,  2820,     0,     0,     0,
       0,  2824,  2825,     0,     0,  2827,     0,  2828,     0,  2829,
       0,  2830,     0,  2832,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2837,  2838,     0,     0,  2839,     0,
    2840,     0,     0,     0,     0,     0,     0,     0,  2841,  2842,
       0,  2843,     0,  2844,     0,     0,  2845,  2846,  2847,     0,
    2848,     0,     0,     0,     0,  2851,  2852,  2853,  2854,     0,
       0,     0,     0,  2856,  2857,  2858,     0,  2859,     0,  2861,
       0,  2863,     0,  2865,     0,  2866,     0,     0,     0,     0,
       0,     0,  2868,     0,  2869,     0,     0,  2872,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2899,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2930,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2951,     0,     0,     0,     0,  2955,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2986,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3002,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3115,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3186,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3197,     0,  3199,     0,  3201,     0,     0,
       0,     0,     0,  3207,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3214,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3263,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3407,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3411,     0,     0,
       0,     0,     0,  3412,     0,     0,     0,     0,     0,     0,
       0,     0,  3416,  3417,     0,     0,     0,     0,  3418,     0,
       0,     0,  3419,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3425,     0,     0,     0,     0,
       0,  3427,     0,     0,  3428,  3429,     0,  3430,  3431,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3436,  3437,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3490,  3491,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2986,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2986,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2951,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3701,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3780,     0,     0,     0,     0,     0,  3782,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3786,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3809,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3822,     0,  3824,     0,     0,     0,
       0,     0,     0,     0,     0,  3830,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3835,     0,  3837,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2986,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3933,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3942,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3967,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3983,
       0,     0,     0,     0,     0,     0,     0,     0,  3990,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   135,     0,   833,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   834,
    4033,   143,   835,   144,   145,   146,   147,   836,   149,     0,
     150,   837,   151,     0,   838,   152,   839,   840,   841,   153,
     842,     0,   154,   155,  1919,   156,     0,   157,   158,     0,
       0,   159,   843,   160,     0,   161,   844,   845,   163,     0,
     164,   165,   166,   846,   168,     0,   847,   170,     0,   171,
     172,   173,   174,   175,   176,   848,   849,   177,     0,     0,
     178,     0,   850,     0,   851,   852,   853,     0,     0,   180,
     854,   855,     0,   856,   857,     0,   181,   182,   183,   858,
     859,   860,     0,     0,     0,     0,   861,     0,   186,   862,
       0,  4121,   863,   864,   187,     0,   188,     0,     0,     0,
     865,   866,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,   197,   198,     0,     0,
     867,   199,     0,   868,   869,   200,   201,   202,   203,   204,
       0,     0,   205,  4168,   206,   207,   208,   209,   210,   870,
       0,   211,   871,   212,   213,   872,   873,   214,     0,   874,
     215,   216,   217,   875,     0,   218,     0,     0,   876,     0,
     219,   220,     0,   877,   221,     0,   222,   878,   879,   880,
     881,     0,   882,   883,   224,   884,   885,   886,   226,     0,
       0,   227,   887,     0,   888,   889,     0,   228,   229,     0,
     230,   890,     0,   231,     0,     0,     0,   891,   233,   234,
     235,   892,     0,   236,   237,     0,     0,   238,     0,   239,
       0,     0,   893,   240,   241,   894,     0,     0,   242,     0,
       0,   243,   244,     0,     0,     0,     0,     0,     0,   245,
     895,   246,     0,  1920,   896,   247,     0,   897,   248,   249,
       0,     0,     0,     0,   898,     0,   899,   251,     0,   252,
     900,     0,   253,     0,   254,   255,   901,     0,     0,   902,
       0,     0,     0,     0,   903,   256,   257,   258,   259,   260,
     261,   904,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   905,   271,   272,   273,   274,   906,   275,   276,   277,
       0,     0,     0,   278,   279,   280,   907,   282,     0,     0,
     908,   284,   909,   910,   285,     0,   286,   911,   912,   913,
     914,   915,   916,   917,   291,   292,   293,   294,     0,   918,
     295,   296,     0,   297,   298,   299,   300,   919,   920,   921,
     301,   302,     0,   922,   923,     0,   303,   304,   924,     0,
     306,   307,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   309,   310,   311,   312,   313,   314,   925,
     926,   316,   317,   318,   927,   928,   929,   930,   931,     0,
     321,   322,   323,     0,   324,     0,   325,   326,     0,   932,
     328,   329,   933,     0,     0,   330,     0,     0,     0,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,     0,
     339,   340,     0,   341,   342,   343,   934,   935,   344,     0,
     345,   346,   347,     0,   348,   349,     0,     0,   936,   350,
     351,   937,   352,   353,   938,   354,   939,   356,   357,   358,
       0,   940,   360,     0,     0,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,     0,
     369,   370,   371,     0,     0,     0,     0,     0,     0,   372,
     373,     0,   374,     0,     0,   375,     0,     0,   376,   377,
     378,   941,   942,   379,   380,     0,   381,   943,   383,   384,
     385,   944,   945,   946,   386,   387,   947,   388,   389,     0,
     390,   391,     0,   747,   392,   948,   949,   950,   951,     0,
       0,     0,   397,     0,  1921,   398,     0,   399,   952,   953,
     954,   401,   402,   403,   955,   404,   405,   406,   407,   956,
       0,   408,   409,     0,     0,   957,   958,   410,     0,     0,
     411,     0,     0,     0,   959,   413,     0,     0,   960,   961,
     962,   963,   964,   414,     0,     0,   415,   965,     0,   416,
     417,   418,   966,     0,     0,     0,     0,   420,     0,   421,
     422,     0,   967,     0,   968,     0,     0,     0,     0,   969,
       0,     0,     0,   970,   971,     0,     0,     0,     0,   972,
       0,   973,     0,     0,   974,   975,     0,   976,   977,   135,
       0,   833,   137,   138,   139,   140,  2947,     0,     0,     0,
       0,   141,     0,     0,   834,     0,   143,   835,   144,   145,
     146,   147,   836,   149,     0,   150,   837,   151,     0,  2948,
     152,   839,   840,   841,   153,   842,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,   843,   160,     0,
     161,   844,   845,   163,     0,   164,   165,   166,   846,   168,
       0,   847,   170,     0,   171,   172,   173,   174,   175,   176,
     848,   849,   177,     0,     0,   178,     0,   850,     0,   851,
     852,   853,     0,     0,   180,   854,   855,     0,   856,   857,
       0,   181,   182,   183,   858,   859,   860,     0,     0,     0,
       0,   861,     0,   186,   862,     0,     0,   863,  2949,   187,
       0,   188,     0,     0,     0,   865,   866,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,   867,   199,     0,   868,   869,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,   870,     0,   211,   871,   212,   213,
     872,   873,   214,     0,   874,   215,   216,   217,   875,     0,
     218,     0,     0,   876,     0,   219,   220,     0,   877,   221,
       0,   222,   878,   879,   880,   881,     0,   882,   883,   224,
     884,   885,   886,   226,     0,     0,   227,   887,     0,   888,
     889,     0,   228,   229,     0,   230,   890,     0,   231,     0,
       0,     0,   891,   233,   234,   235,   892,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,   893,   240,   241,
     894,     0,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,   895,   246,     0,     0,   896,
     247,     0,   897,   248,   249,     0,     0,     0,     0,   898,
       0,   899,   251,     0,   252,   900,     0,   253,     0,   254,
     255,   901,     0,     0,   902,     0,     0,     0,     0,   903,
     256,   257,   258,   259,   260,   261,   904,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   905,   271,   272,   273,
     274,   906,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   907,   282,     0,     0,   908,   284,   909,   910,   285,
       0,   286,   911,   912,   913,   914,   915,   916,   917,   291,
     292,   293,   294,     0,   918,   295,   296,     0,   297,   298,
     299,   300,   919,   920,   921,   301,   302,     0,   922,   923,
       0,   303,   304,   924,  2950,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   925,   926,   316,   317,   318,   927,
     928,   929,   930,   931,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   932,   328,   329,   933,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,   934,   935,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,   936,   350,   351,   937,   352,   353,   938,
     354,   939,   356,   357,   358,     0,   940,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,   941,   942,   379,   380,
       0,   381,   943,   383,   384,   385,   944,   945,   946,   386,
     387,   947,   388,   389,     0,   390,   391,     0,   747,   392,
     948,   949,   950,   951,     0,     0,     0,   397,     0,     0,
     398,     0,   399,   952,   953,   954,   401,   402,   403,   955,
     404,   405,   406,   407,   956,     0,   408,   409,     0,     0,
     957,   958,   410,     0,     0,   411,     0,     0,     0,   959,
     413,     0,     0,   960,   961,   962,   963,   964,   414,     0,
       0,   415,   965,     0,   416,   417,   418,   966,     0,     0,
       0,     0,   420,     0,   421,   422,     0,   967,     0,   968,
       0,     0,     0,     0,   969,     0,     0,     0,   970,   971,
       0,     0,     0,     0,   972,     0,   973,     0,     0,   974,
     975,     0,   976,   977,   135,     0,   833,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   834,
       0,   143,   835,   144,   145,   146,   147,   836,   149,     0,
     150,   837,   151,     0,   838,   152,   839,   840,   841,   153,
     842,     0,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,   843,   160,     0,   161,   844,   845,   163,     0,
     164,   165,   166,   846,   168,     0,   847,   170,     0,   171,
     172,   173,   174,   175,   176,   848,   849,   177,     0,     0,
     178,     0,   850,     0,   851,   852,   853,     0,     0,   180,
     854,   855,     0,   856,   857,     0,   181,   182,   183,   858,
     859,   860,     0,     0,     0,     0,   861,     0,   186,   862,
       0,     0,   863,   864,   187,     0,   188,     0,     0,     0,
     865,   866,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,   197,   198,     0,     0,
     867,   199,     0,   868,   869,   200,   201,   202,   203,   204,
       0,     0,   205,     0,   206,   207,   208,   209,   210,   870,
       0,   211,   871,   212,   213,   872,   873,   214,     0,   874,
     215,   216,   217,   875,     0,   218,     0,     0,   876,     0,
     219,   220,     0,   877,   221,     0,   222,   878,   879,   880,
     881,     0,   882,   883,   224,   884,   885,   886,   226,     0,
       0,   227,   887,     0,   888,   889,     0,   228,   229,     0,
     230,   890,     0,   231,     0,     0,     0,   891,   233,   234,
     235,   892,     0,   236,   237,     0,     0,   238,     0,   239,
       0,     0,   893,   240,   241,   894,     0,     0,   242,     0,
       0,   243,   244,     0,     0,     0,     0,     0,     0,   245,
     895,   246,     0,     0,   896,   247,     0,   897,   248,   249,
       0,     0,     0,     0,   898,     0,   899,   251,     0,   252,
     900,     0,   253,     0,   254,   255,   901,     0,     0,   902,
       0,     0,     0,     0,   903,   256,   257,   258,   259,   260,
     261,   904,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   905,   271,   272,   273,   274,   906,   275,   276,   277,
       0,     0,     0,   278,   279,   280,   907,   282,     0,     0,
     908,   284,   909,   910,   285,     0,   286,   911,   912,   913,
     914,   915,   916,   917,   291,   292,   293,   294,     0,   918,
     295,   296,     0,   297,   298,   299,   300,   919,   920,   921,
     301,   302,     0,   922,   923,     0,   303,   304,   924,     0,
     306,   307,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   309,   310,   311,   312,   313,   314,   925,
     926,   316,   317,   318,   927,   928,   929,   930,   931,     0,
     321,   322,   323,     0,   324,     0,   325,   326,     0,   932,
     328,   329,   933,     0,     0,   330,     0,     0,     0,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,     0,
     339,   340,     0,   341,   342,   343,   934,   935,   344,     0,
     345,   346,   347,     0,   348,   349,     0,     0,   936,   350,
     351,   937,   352,   353,   938,   354,   939,   356,   357,   358,
       0,   940,   360,  1432,     0,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,     0,
     369,   370,   371,     0,     0,     0,     0,     0,     0,   372,
     373,     0,   374,     0,     0,   375,     0,     0,   376,   377,
     378,   941,   942,   379,   380,     0,   381,   943,   383,   384,
     385,   944,   945,   946,   386,   387,   947,   388,   389,     0,
     390,   391,     0,   747,   392,   948,   949,   950,   951,     0,
       0,     0,   397,     0,     0,   398,     0,   399,   952,   953,
     954,   401,   402,   403,   955,   404,   405,   406,   407,   956,
       0,   408,   409,     0,     0,   957,   958,   410,     0,     0,
     411,     0,     0,     0,   959,   413,     0,     0,   960,   961,
     962,   963,   964,   414,     0,     0,   415,   965,     0,   416,
     417,   418,   966,     0,     0,     0,     0,   420,     0,   421,
     422,     0,   967,     0,   968,     0,     0,     0,     0,   969,
       0,     0,     0,   970,   971,     0,     0,     0,     0,   972,
       0,   973,     0,     0,   974,   975,     0,   976,   977,   135,
       0,   833,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   834,     0,   143,   835,   144,   145,
     146,   147,   836,   149,     0,   150,   837,   151,     0,   838,
     152,   839,   840,   841,   153,   842,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,   843,   160,     0,
     161,   844,   845,   163,     0,   164,   165,   166,   846,   168,
       0,   847,   170,     0,   171,   172,   173,   174,   175,   176,
     848,   849,   177,     0,     0,   178,     0,   850,     0,   851,
     852,   853,     0,     0,   180,   854,   855,     0,   856,   857,
       0,   181,   182,   183,   858,   859,   860,     0,     0,     0,
       0,   861,     0,   186,   862,     0,     0,   863,   864,   187,
       0,   188,     0,     0,     0,   865,   866,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,   867,   199,     0,   868,   869,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,   870,     0,   211,   871,   212,   213,
     872,   873,   214,     0,   874,   215,   216,   217,   875,     0,
     218,     0,     0,   876,     0,   219,   220,     0,   877,   221,
       0,   222,   878,   879,   880,   881,     0,   882,   883,   224,
     884,   885,   886,   226,     0,     0,   227,   887,     0,   888,
     889,     0,   228,   229,     0,   230,   890,     0,   231,     0,
       0,     0,   891,   233,   234,   235,   892,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,   893,   240,   241,
     894,     0,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,   895,   246,     0,     0,   896,
     247,     0,   897,   248,   249,     0,     0,     0,     0,   898,
       0,   899,   251,     0,   252,   900,     0,   253,     0,   254,
     255,   901,     0,     0,   902,     0,     0,     0,     0,   903,
     256,   257,   258,   259,   260,   261,   904,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   905,   271,   272,   273,
     274,   906,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   907,   282,     0,     0,   908,   284,   909,   910,   285,
       0,   286,   911,   912,   913,   914,   915,   916,   917,   291,
     292,   293,   294,     0,   918,   295,   296,     0,   297,   298,
     299,   300,   919,   920,   921,   301,   302,     0,   922,   923,
       0,   303,   304,   924,     0,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   925,   926,   316,   317,   318,   927,
     928,   929,   930,   931,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   932,   328,   329,   933,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,   934,   935,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,   936,   350,   351,   937,   352,   353,   938,
     354,   939,   356,   357,   358,     0,   940,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,   941,   942,   379,   380,
       0,   381,   943,   383,   384,   385,   944,   945,   946,   386,
     387,   947,   388,   389,     0,   390,   391,     0,   747,   392,
     948,   949,   950,   951,     0,     0,     0,   397,     0,     0,
     398,     0,   399,   952,   953,   954,   401,   402,   403,   955,
     404,   405,   406,   407,   956,     0,   408,   409,     0,     0,
     957,   958,   410,     0,     0,   411,     0,     0,     0,   959,
     413,     0,     0,   960,   961,   962,   963,   964,   414,     0,
       0,   415,   965,     0,   416,   417,   418,   966,     0,     0,
       0,     0,   420,     0,   421,   422,     0,   967,     0,   968,
       0,     0,     0,     0,   969,     0,     0,     0,   970,   971,
       0,     0,     0,     0,   972,     0,   973,  1767,     0,   974,
     975,     0,   976,   977,   135,     0,   833,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   834,
       0,   143,   835,   144,   145,   146,   147,   836,   149,     0,
     150,   837,   151,     0,   838,   152,   839,   840,   841,   153,
     842,     0,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,   843,   160,     0,   161,   844,   845,   163,     0,
     164,   165,   166,   846,   168,     0,   847,   170,     0,   171,
     172,   173,   174,   175,   176,   848,   849,   177,     0,     0,
     178,     0,   850,     0,   851,   852,   853,     0,     0,   180,
     854,   855,     0,   856,   857,     0,   181,   182,   183,   858,
     859,   860,     0,     0,     0,     0,   861,     0,   186,   862,
       0,     0,   863,   864,   187,     0,   188,     0,     0,     0,
     865,   866,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,   197,   198,     0,     0,
     867,   199,     0,   868,   869,   200,   201,   202,   203,   204,
       0,     0,   205,     0,   206,   207,   208,   209,   210,   870,
       0,   211,   871,   212,   213,   872,   873,   214,     0,   874,
     215,   216,   217,   875,     0,   218,     0,     0,   876,     0,
     219,   220,     0,   877,   221,     0,   222,   878,   879,   880,
     881,     0,   882,   883,   224,   884,   885,   886,   226,     0,
       0,   227,   887,     0,   888,   889,     0,   228,   229,     0,
     230,   890,     0,   231,     0,     0,     0,   891,   233,   234,
     235,   892,     0,   236,   237,     0,     0,   238,     0,   239,
       0,     0,   893,   240,   241,   894,     0,     0,   242,     0,
       0,   243,   244,     0,     0,     0,     0,     0,     0,   245,
     895,   246,     0,     0,   896,   247,     0,   897,   248,   249,
       0,     0,     0,     0,   898,     0,   899,   251,     0,   252,
     900,     0,   253,     0,   254,   255,   901,     0,     0,   902,
       0,     0,     0,     0,   903,   256,   257,   258,   259,   260,
     261,   904,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   905,   271,   272,   273,   274,   906,   275,   276,   277,
       0,     0,     0,   278,   279,   280,   907,   282,     0,     0,
     908,   284,   909,   910,   285,     0,   286,   911,   912,   913,
     914,   915,   916,   917,   291,   292,   293,   294,     0,   918,
     295,   296,     0,   297,   298,   299,   300,   919,   920,   921,
     301,   302,     0,   922,   923,     0,   303,   304,   924,     0,
     306,   307,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   309,   310,   311,   312,   313,   314,   925,
     926,   316,   317,   318,   927,   928,   929,   930,   931,     0,
     321,   322,   323,     0,   324,     0,   325,   326,     0,   932,
     328,   329,   933,     0,     0,   330,     0,     0,     0,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,     0,
     339,   340,     0,   341,   342,   343,   934,   935,   344,     0,
     345,   346,   347,     0,   348,   349,     0,     0,   936,   350,
     351,   937,   352,   353,   938,   354,   939,   356,   357,   358,
       0,   940,   360,     0,     0,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,     0,
     369,   370,   371,     0,     0,     0,     0,     0,     0,   372,
     373,     0,   374,     0,     0,   375,     0,     0,   376,   377,
     378,   941,   942,   379,   380,     0,   381,   943,   383,   384,
     385,   944,   945,   946,   386,   387,   947,   388,   389,     0,
     390,   391,     0,   747,   392,   948,   949,   950,   951,     0,
       0,     0,   397,     0,     0,   398,     0,   399,   952,   953,
     954,   401,   402,   403,   955,   404,   405,   406,   407,   956,
       0,   408,   409,     0,     0,   957,   958,   410,     0,     0,
     411,     0,     0,     0,   959,   413,     0,     0,   960,   961,
     962,   963,   964,   414,     0,     0,   415,   965,     0,   416,
     417,   418,   966,     0,     0,     0,     0,   420,     0,   421,
     422,     0,   967,     0,   968,     0,     0,     0,     0,   969,
       0,     0,     0,   970,   971,     0,     0,     0,     0,   972,
       0,   973,  1861,     0,   974,   975,     0,   976,   977,   135,
       0,   833,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   834,     0,   143,   835,   144,   145,
     146,   147,   836,   149,     0,   150,   837,   151,     0,   838,
     152,   839,   840,   841,   153,   842,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,   843,   160,     0,
     161,   844,   845,   163,     0,   164,   165,   166,   846,   168,
       0,   847,   170,     0,   171,   172,   173,   174,   175,   176,
     848,   849,   177,     0,     0,   178,     0,   850,     0,   851,
     852,   853,     0,     0,   180,   854,   855,     0,   856,   857,
       0,   181,   182,   183,   858,   859,   860,     0,     0,     0,
       0,   861,     0,   186,   862,     0,     0,   863,   864,   187,
       0,   188,     0,     0,     0,   865,   866,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,   867,   199,     0,   868,   869,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,   870,     0,   211,   871,   212,   213,
     872,   873,   214,     0,   874,   215,   216,   217,   875,     0,
     218,     0,     0,   876,     0,   219,   220,     0,   877,   221,
       0,   222,   878,   879,   880,   881,     0,   882,   883,   224,
     884,   885,   886,   226,     0,     0,   227,   887,     0,   888,
     889,     0,   228,   229,     0,   230,   890,     0,   231,     0,
       0,     0,   891,   233,   234,   235,   892,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,   893,   240,   241,
     894,     0,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,   895,   246,     0,     0,   896,
     247,     0,   897,   248,   249,     0,     0,     0,     0,   898,
       0,   899,   251,     0,   252,   900,     0,   253,     0,   254,
     255,   901,     0,     0,   902,     0,     0,     0,     0,   903,
     256,   257,   258,   259,   260,   261,   904,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   905,   271,   272,   273,
     274,   906,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   907,   282,     0,     0,   908,   284,   909,   910,   285,
       0,   286,   911,   912,   913,   914,   915,   916,   917,   291,
     292,   293,   294,     0,   918,   295,   296,     0,   297,   298,
     299,   300,   919,   920,   921,   301,   302,     0,   922,   923,
       0,   303,   304,   924,     0,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   925,   926,   316,   317,   318,   927,
     928,   929,   930,   931,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   932,   328,   329,   933,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,   934,   935,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,   936,   350,   351,   937,   352,   353,   938,
     354,   939,   356,   357,   358,     0,   940,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,   941,   942,   379,   380,
       0,   381,   943,   383,   384,   385,   944,   945,   946,   386,
     387,   947,   388,   389,     0,   390,   391,     0,   747,   392,
     948,   949,   950,   951,     0,     0,     0,   397,     0,     0,
     398,     0,   399,   952,   953,   954,   401,   402,   403,   955,
     404,   405,   406,   407,   956,     0,   408,   409,     0,     0,
     957,   958,   410,     0,     0,   411,     0,     0,     0,   959,
     413,     0,     0,   960,   961,   962,   963,   964,   414,     0,
       0,   415,   965,     0,   416,   417,   418,   966,     0,     0,
       0,     0,   420,     0,   421,   422,     0,   967,     0,   968,
       0,     0,     0,     0,   969,     0,     0,     0,   970,   971,
       0,     0,     0,     0,   972,     0,   973,  1898,     0,   974,
     975,     0,   976,   977,   135,     0,   833,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   834,
       0,   143,   835,   144,   145,   146,   147,   836,   149,     0,
     150,   837,   151,     0,   838,   152,   839,   840,   841,   153,
     842,     0,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,   843,   160,     0,   161,   844,   845,   163,     0,
     164,   165,   166,   846,   168,     0,   847,   170,     0,   171,
     172,   173,   174,   175,   176,   848,   849,   177,     0,     0,
     178,     0,   850,     0,   851,   852,   853,     0,     0,   180,
     854,   855,     0,   856,   857,     0,   181,   182,   183,   858,
     859,   860,     0,     0,     0,     0,   861,     0,   186,   862,
       0,     0,   863,   864,   187,     0,   188,     0,     0,     0,
     865,   866,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,   197,   198,     0,     0,
     867,   199,     0,   868,   869,   200,   201,   202,   203,   204,
       0,     0,   205,     0,   206,   207,   208,   209,   210,   870,
       0,   211,   871,   212,   213,   872,   873,   214,     0,   874,
     215,   216,   217,   875,     0,   218,     0,     0,   876,     0,
     219,   220,     0,   877,   221,     0,   222,   878,   879,   880,
     881,     0,   882,   883,   224,   884,   885,   886,   226,     0,
       0,   227,   887,     0,   888,   889,     0,   228,   229,     0,
     230,   890,     0,   231,     0,     0,     0,   891,   233,   234,
     235,   892,     0,   236,   237,     0,     0,   238,     0,   239,
       0,     0,   893,   240,   241,   894,     0,     0,   242,     0,
       0,   243,   244,     0,     0,     0,     0,     0,     0,   245,
     895,   246,     0,     0,   896,   247,     0,   897,   248,   249,
       0,     0,     0,     0,   898,     0,   899,   251,     0,   252,
     900,     0,   253,     0,   254,   255,   901,     0,     0,   902,
       0,     0,     0,     0,   903,   256,   257,   258,   259,   260,
     261,   904,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   905,   271,   272,   273,   274,   906,   275,   276,   277,
       0,     0,     0,   278,   279,   280,   907,   282,     0,     0,
     908,   284,   909,   910,   285,     0,   286,   911,   912,   913,
     914,   915,   916,   917,   291,   292,   293,   294,     0,   918,
     295,   296,     0,   297,   298,   299,   300,   919,   920,   921,
     301,   302,     0,   922,   923,     0,   303,   304,   924,     0,
     306,   307,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   309,   310,   311,   312,   313,   314,   925,
     926,   316,   317,   318,   927,   928,   929,   930,   931,     0,
     321,   322,   323,     0,   324,     0,   325,   326,     0,   932,
     328,   329,   933,     0,     0,   330,     0,     0,     0,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,     0,
     339,   340,     0,   341,   342,   343,   934,   935,   344,     0,
     345,   346,   347,     0,   348,   349,     0,     0,   936,   350,
     351,   937,   352,   353,   938,   354,   939,   356,   357,   358,
       0,   940,   360,     0,     0,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,     0,
     369,   370,   371,     0,     0,     0,     0,     0,     0,   372,
     373,     0,   374,     0,     0,   375,     0,     0,   376,   377,
     378,   941,   942,   379,   380,     0,   381,   943,   383,   384,
     385,   944,   945,   946,   386,   387,   947,   388,   389,     0,
     390,   391,     0,   747,   392,   948,   949,   950,   951,     0,
       0,     0,   397,     0,     0,   398,     0,   399,   952,   953,
     954,   401,   402,   403,   955,   404,   405,   406,   407,   956,
       0,   408,   409,     0,     0,   957,   958,   410,     0,     0,
     411,     0,     0,     0,   959,   413,     0,     0,   960,   961,
     962,   963,   964,   414,     0,     0,   415,   965,     0,   416,
     417,   418,   966,     0,     0,     0,     0,   420,     0,   421,
     422,     0,   967,     0,   968,     0,     0,     0,     0,   969,
       0,     0,     0,   970,   971,     0,     0,     0,     0,   972,
       0,   973,  1925,     0,   974,   975,     0,   976,   977,   135,
       0,   833,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   834,     0,   143,   835,   144,   145,
     146,   147,   836,   149,     0,   150,   837,   151,     0,   838,
     152,   839,   840,   841,   153,   842,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,   843,   160,     0,
     161,   844,   845,   163,     0,   164,   165,   166,   846,   168,
       0,   847,   170,     0,   171,   172,   173,   174,   175,   176,
     848,   849,   177,     0,     0,   178,     0,   850,     0,   851,
     852,   853,     0,     0,   180,   854,   855,     0,   856,   857,
       0,   181,   182,   183,   858,   859,   860,     0,     0,     0,
       0,   861,     0,   186,   862,     0,     0,   863,   864,   187,
       0,   188,     0,     0,     0,   865,   866,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,   867,   199,     0,   868,   869,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,   870,     0,   211,   871,   212,   213,
     872,   873,   214,     0,   874,   215,   216,   217,   875,     0,
     218,     0,     0,   876,     0,   219,   220,  2444,   877,   221,
       0,   222,   878,   879,   880,   881,     0,   882,   883,   224,
     884,   885,   886,   226,     0,     0,   227,   887,     0,   888,
     889,     0,   228,   229,     0,   230,   890,     0,   231,     0,
       0,     0,   891,   233,   234,   235,   892,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,   893,   240,   241,
     894,     0,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,   895,   246,     0,     0,   896,
     247,     0,   897,   248,   249,     0,     0,     0,     0,   898,
       0,   899,   251,     0,   252,   900,     0,   253,     0,   254,
     255,   901,     0,     0,   902,     0,     0,     0,     0,   903,
     256,   257,   258,   259,   260,   261,   904,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   905,   271,   272,   273,
     274,   906,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   907,   282,     0,     0,   908,   284,   909,   910,   285,
       0,   286,   911,   912,   913,   914,   915,   916,   917,   291,
     292,   293,   294,     0,   918,   295,   296,     0,   297,   298,
     299,   300,   919,   920,   921,   301,   302,     0,   922,   923,
       0,   303,   304,   924,     0,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   925,   926,   316,   317,   318,   927,
     928,   929,   930,   931,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   932,   328,   329,   933,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,   934,   935,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,   936,   350,   351,   937,   352,   353,   938,
     354,   939,   356,   357,   358,     0,   940,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,   941,   942,   379,   380,
       0,   381,   943,   383,   384,   385,   944,   945,   946,   386,
     387,   947,   388,   389,     0,   390,   391,     0,   747,   392,
     948,   949,   950,   951,     0,     0,     0,   397,     0,     0,
     398,     0,   399,   952,   953,   954,   401,   402,   403,   955,
     404,   405,   406,   407,   956,     0,   408,   409,     0,     0,
     957,   958,   410,     0,     0,   411,     0,     0,     0,   959,
     413,     0,     0,   960,   961,   962,   963,   964,   414,     0,
       0,   415,   965,     0,   416,   417,   418,   966,     0,     0,
       0,     0,   420,     0,   421,   422,     0,   967,     0,   968,
       0,     0,     0,     0,   969,     0,     0,     0,   970,   971,
       0,     0,     0,     0,   972,     0,   973,     0,     0,   974,
     975,     0,   976,   977,   135,     0,   833,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   834,
       0,   143,   835,   144,   145,   146,   147,   836,   149,     0,
     150,   837,   151,     0,   838,   152,   839,   840,   841,   153,
     842,     0,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,   843,   160,     0,   161,   844,   845,   163,     0,
     164,   165,   166,   846,   168,     0,   847,   170,     0,   171,
     172,   173,   174,   175,   176,   848,   849,   177,     0,     0,
     178,     0,   850,     0,   851,   852,   853,     0,     0,   180,
     854,   855,     0,   856,   857,     0,   181,   182,   183,   858,
     859,   860,     0,     0,     0,     0,   861,     0,   186,   862,
       0,     0,   863,   864,   187,     0,   188,     0,     0,     0,
     865,   866,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,   197,   198,     0,     0,
     867,   199,     0,   868,   869,   200,   201,   202,   203,   204,
       0,     0,   205,     0,   206,   207,   208,   209,   210,   870,
       0,   211,   871,   212,   213,   872,   873,   214,     0,   874,
     215,   216,   217,   875,     0,   218,     0,     0,   876,     0,
     219,   220,  2446,   877,   221,     0,   222,   878,   879,   880,
     881,     0,   882,   883,   224,   884,   885,   886,   226,     0,
       0,   227,   887,     0,   888,   889,     0,   228,   229,     0,
     230,   890,     0,   231,     0,     0,     0,   891,   233,   234,
     235,   892,     0,   236,   237,     0,     0,   238,     0,   239,
       0,     0,   893,   240,   241,   894,     0,     0,   242,     0,
       0,   243,   244,     0,     0,     0,     0,     0,     0,   245,
     895,   246,     0,     0,   896,   247,     0,   897,   248,   249,
       0,     0,     0,     0,   898,     0,   899,   251,     0,   252,
     900,     0,   253,     0,   254,   255,   901,     0,     0,   902,
       0,     0,     0,     0,   903,   256,   257,   258,   259,   260,
     261,   904,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   905,   271,   272,   273,   274,   906,   275,   276,   277,
       0,     0,     0,   278,   279,   280,   907,   282,     0,     0,
     908,   284,   909,   910,   285,     0,   286,   911,   912,   913,
     914,   915,   916,   917,   291,   292,   293,   294,     0,   918,
     295,   296,     0,   297,   298,   299,   300,   919,   920,   921,
     301,   302,     0,   922,   923,     0,   303,   304,   924,     0,
     306,   307,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   309,   310,   311,   312,   313,   314,   925,
     926,   316,   317,   318,   927,   928,   929,   930,   931,     0,
     321,   322,   323,     0,   324,     0,   325,   326,     0,   932,
     328,   329,   933,     0,     0,   330,     0,     0,     0,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,     0,
     339,   340,     0,   341,   342,   343,   934,   935,   344,     0,
     345,   346,   347,     0,   348,   349,     0,     0,   936,   350,
     351,   937,   352,   353,   938,   354,   939,   356,   357,   358,
       0,   940,   360,     0,     0,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,     0,
     369,   370,   371,     0,     0,     0,     0,     0,     0,   372,
     373,     0,   374,     0,     0,   375,     0,     0,   376,   377,
     378,   941,   942,   379,   380,     0,   381,   943,   383,   384,
     385,   944,   945,   946,   386,   387,   947,   388,   389,     0,
     390,   391,     0,   747,   392,   948,   949,   950,   951,     0,
       0,     0,   397,     0,     0,   398,     0,   399,   952,   953,
     954,   401,   402,   403,   955,   404,   405,   406,   407,   956,
       0,   408,   409,     0,     0,   957,   958,   410,     0,     0,
     411,     0,     0,     0,   959,   413,     0,     0,   960,   961,
     962,   963,   964,   414,     0,     0,   415,   965,     0,   416,
     417,   418,   966,     0,     0,     0,     0,   420,     0,   421,
     422,     0,   967,     0,   968,     0,     0,     0,     0,   969,
       0,     0,     0,   970,   971,     0,     0,     0,     0,   972,
       0,   973,     0,     0,   974,   975,     0,   976,   977,   135,
       0,   833,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   834,     0,   143,   835,   144,   145,
     146,   147,   836,   149,     0,   150,   837,   151,     0,   838,
     152,   839,   840,   841,   153,   842,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,   843,   160,     0,
     161,   844,   845,   163,     0,   164,   165,   166,   846,   168,
       0,   847,   170,     0,   171,   172,   173,   174,   175,   176,
     848,   849,   177,     0,     0,   178,     0,   850,     0,   851,
     852,   853,     0,     0,   180,   854,   855,     0,   856,   857,
       0,   181,   182,   183,   858,   859,   860,     0,     0,     0,
       0,   861,     0,   186,   862,     0,     0,   863,   864,   187,
       0,   188,     0,     0,     0,   865,   866,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,   867,   199,     0,   868,   869,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,   870,     0,   211,   871,   212,   213,
     872,   873,   214,     0,   874,   215,   216,   217,   875,     0,
     218,     0,     0,   876,     0,   219,   220,  2448,   877,   221,
       0,   222,   878,   879,   880,   881,     0,   882,   883,   224,
     884,   885,   886,   226,     0,     0,   227,   887,     0,   888,
     889,     0,   228,   229,     0,   230,   890,     0,   231,     0,
       0,     0,   891,   233,   234,   235,   892,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,   893,   240,   241,
     894,     0,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,   895,   246,     0,     0,   896,
     247,     0,   897,   248,   249,     0,     0,     0,     0,   898,
       0,   899,   251,     0,   252,   900,     0,   253,     0,   254,
     255,   901,     0,     0,   902,     0,     0,     0,     0,   903,
     256,   257,   258,   259,   260,   261,   904,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   905,   271,   272,   273,
     274,   906,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   907,   282,     0,     0,   908,   284,   909,   910,   285,
       0,   286,   911,   912,   913,   914,   915,   916,   917,   291,
     292,   293,   294,     0,   918,   295,   296,     0,   297,   298,
     299,   300,   919,   920,   921,   301,   302,     0,   922,   923,
       0,   303,   304,   924,     0,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   925,   926,   316,   317,   318,   927,
     928,   929,   930,   931,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   932,   328,   329,   933,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,   934,   935,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,   936,   350,   351,   937,   352,   353,   938,
     354,   939,   356,   357,   358,     0,   940,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,   941,   942,   379,   380,
       0,   381,   943,   383,   384,   385,   944,   945,   946,   386,
     387,   947,   388,   389,     0,   390,   391,     0,   747,   392,
     948,   949,   950,   951,     0,     0,     0,   397,     0,     0,
     398,     0,   399,   952,   953,   954,   401,   402,   403,   955,
     404,   405,   406,   407,   956,     0,   408,   409,     0,     0,
     957,   958,   410,     0,     0,   411,     0,     0,     0,   959,
     413,     0,     0,   960,   961,   962,   963,   964,   414,     0,
       0,   415,   965,     0,   416,   417,   418,   966,     0,     0,
       0,     0,   420,     0,   421,   422,     0,   967,     0,   968,
       0,     0,     0,     0,   969,     0,     0,     0,   970,   971,
       0,     0,     0,     0,   972,     0,   973,     0,     0,   974,
     975,     0,   976,   977,   135,     0,   833,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   834,
       0,   143,   835,   144,   145,   146,   147,   836,   149,     0,
     150,   837,   151,     0,   838,   152,   839,   840,   841,   153,
     842,     0,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,   843,   160,     0,   161,   844,   845,   163,     0,
     164,   165,   166,   846,   168,     0,   847,   170,     0,   171,
     172,   173,   174,   175,   176,   848,   849,   177,     0,     0,
     178,     0,   850,     0,   851,   852,   853,     0,     0,   180,
     854,   855,     0,   856,   857,     0,   181,   182,   183,   858,
     859,   860,     0,     0,     0,     0,   861,     0,   186,   862,
       0,     0,   863,   864,   187,     0,   188,     0,     0,     0,
     865,   866,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,   197,   198,     0,     0,
     867,   199,     0,   868,   869,   200,   201,   202,   203,   204,
       0,     0,   205,     0,   206,   207,   208,   209,   210,   870,
       0,   211,   871,   212,   213,   872,   873,   214,     0,   874,
     215,   216,   217,   875,     0,   218,     0,     0,   876,     0,
     219,   220,     0,   877,   221,     0,   222,   878,   879,   880,
     881,     0,   882,   883,   224,   884,   885,   886,   226,     0,
       0,   227,   887,     0,   888,   889,     0,   228,   229,     0,
     230,   890,     0,   231,     0,     0,     0,   891,   233,   234,
     235,   892,     0,   236,   237,     0,     0,   238,     0,   239,
       0,     0,   893,   240,   241,   894,     0,     0,   242,     0,
       0,   243,   244,     0,     0,     0,     0,     0,     0,   245,
     895,   246,     0,     0,   896,   247,     0,   897,   248,   249,
       0,     0,     0,     0,   898,     0,   899,   251,     0,   252,
     900,     0,   253,     0,   254,   255,   901,     0,     0,   902,
       0,     0,     0,     0,   903,   256,   257,   258,   259,   260,
     261,   904,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   905,   271,   272,   273,   274,   906,   275,   276,   277,
       0,     0,     0,   278,   279,   280,   907,   282,     0,     0,
     908,   284,   909,   910,   285,     0,   286,   911,   912,   913,
     914,   915,   916,   917,   291,   292,   293,   294,     0,   918,
     295,   296,     0,   297,   298,   299,   300,   919,   920,   921,
     301,   302,     0,   922,   923,     0,   303,   304,   924,     0,
     306,   307,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   309,   310,   311,   312,   313,   314,   925,
     926,   316,   317,   318,   927,   928,   929,   930,   931,     0,
     321,   322,   323,     0,   324,     0,   325,   326,     0,   932,
     328,   329,   933,     0,     0,   330,     0,     0,     0,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,     0,
     339,   340,     0,   341,   342,   343,   934,   935,   344,     0,
     345,   346,   347,     0,   348,   349,     0,     0,   936,   350,
     351,   937,   352,   353,   938,   354,   939,   356,   357,   358,
       0,   940,   360,     0,     0,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,     0,
     369,   370,   371,     0,     0,     0,     0,     0,     0,   372,
     373,     0,   374,     0,     0,   375,     0,     0,   376,   377,
     378,   941,   942,   379,   380,     0,   381,   943,   383,   384,
     385,   944,   945,   946,   386,   387,   947,   388,   389,     0,
     390,   391,     0,   747,   392,   948,   949,   950,   951,     0,
       0,     0,   397,     0,     0,   398,     0,   399,   952,   953,
     954,   401,   402,   403,   955,   404,   405,   406,   407,   956,
       0,   408,   409,     0,     0,   957,   958,   410,     0,     0,
     411,     0,     0,     0,   959,   413,     0,     0,   960,   961,
     962,   963,   964,   414,     0,     0,   415,   965,     0,   416,
     417,   418,   966,     0,     0,     0,     0,   420,     0,   421,
     422,     0,   967,     0,   968,     0,     0,     0,     0,   969,
       0,     0,     0,   970,   971,     0,     0,     0,     0,   972,
       0,   973,     0,     0,   974,   975,     0,   976,   977,   135,
       0,   833,   137,   138,   139,   140,  1955,     0,     0,     0,
       0,  1956,     0,     0,   834,     0,   143,   835,   144,   145,
     146,   147,   836,   149,     0,   150,   837,   151,     0,   838,
     152,   839,   840,   841,   153,   842,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,   843,   160,     0,
     161,   844,   845,   163,     0,   164,   165,   166,   846,   168,
       0,   847,   170,     0,   171,   172,   173,   174,   175,   176,
     848,   849,   177,     0,     0,   178,     0,   850,     0,   851,
     852,   853,     0,     0,   180,   854,   855,     0,   856,   857,
       0,   181,   182,   183,   858,   859,   860,     0,     0,     0,
       0,   861,     0,   186,   862,     0,     0,   863,   864,   187,
       0,   188,     0,     0,     0,   865,   866,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,   867,   199,     0,   868,   869,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,   870,     0,   211,   871,   212,   213,
     872,   873,   214,     0,   874,   215,   216,   217,   875,     0,
     218,     0,     0,   876,     0,   219,   220,     0,   877,   221,
       0,   222,   878,   879,   880,   881,     0,   882,   883,   224,
     884,   885,   886,   226,     0,     0,   227,   887,     0,   888,
     889,     0,   228,   229,     0,   230,   890,     0,   231,     0,
       0,     0,   891,   233,   234,   235,   892,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,   893,   240,   241,
     894,     0,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,   895,   246,     0,     0,   896,
     247,     0,   897,   248,   249,     0,     0,     0,     0,   898,
       0,   899,   251,     0,   252,   900,     0,   253,     0,   254,
     255,   901,     0,     0,   902,     0,     0,     0,     0,   903,
     256,   257,   258,   259,   260,   261,   904,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   905,   271,   272,   273,
     274,   906,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   907,   282,     0,     0,   908,   284,   909,   910,   285,
       0,   286,   911,   912,   913,   914,   915,   916,   917,   291,
     292,   293,   294,     0,   918,   295,   296,     0,   297,   298,
     299,   300,   919,     0,   921,   301,   302,     0,   922,   923,
       0,   303,   304,   924,     0,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   925,   926,   316,   317,   318,   927,
     928,   929,   930,   931,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   932,   328,   329,   933,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,   934,   935,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,   936,   350,   351,   937,   352,   353,   938,
     354,   939,   356,   357,   358,     0,   940,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,   941,   942,   379,   380,
       0,   381,   943,   383,   384,   385,   944,   945,   946,   386,
     387,   947,   388,   389,     0,   390,   391,     0,   747,   392,
     948,   949,   950,   951,     0,     0,     0,   397,     0,     0,
     398,     0,   399,   952,   953,   954,   401,   402,   403,   955,
     404,   405,   406,   407,   956,     0,   408,   409,     0,     0,
     957,   958,   410,     0,     0,   411,     0,     0,     0,   959,
     413,     0,     0,   960,   961,   962,   963,   964,   414,     0,
       0,   415,   965,     0,   416,   417,   418,   966,     0,     0,
       0,     0,   420,     0,   421,   422,     0,   967,     0,   968,
       0,     0,     0,     0,   969,     0,     0,     0,   970,   971,
       0,     0,     0,     0,   972,     0,   973,     0,     0,   974,
     975,     0,   976,   977,   135,     0,   833,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   834,
       0,   143,   835,   144,   145,   146,   147,   836,   149,     0,
     150,   837,   151,     0,   838,   152,   839,   840,   841,   153,
     842,     0,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,   843,   160,     0,   161,   844,   845,   163,     0,
     164,   165,   166,   846,   168,     0,   847,   170,     0,   171,
     172,   173,   174,   175,   176,   848,   849,   177,     0,     0,
     178,     0,   850,     0,   851,   852,   853,     0,     0,   180,
     854,   855,     0,   856,   857,     0,   181,   182,   183,   858,
     859,   860,     0,     0,     0,     0,   861,     0,   186,   862,
       0,     0,   863,   864,   187,     0,   188,     0,     0,     0,
     865,   866,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,   197,   198,     0,     0,
     867,   199,     0,   868,   869,   200,   201,   202,   203,   204,
       0,     0,   205,     0,   206,   207,   208,   209,   210,   870,
       0,   211,   871,   212,   213,   872,   873,   214,     0,   874,
     215,   216,   217,   875,     0,   218,     0,     0,   876,     0,
     219,   220,     0,   877,   221,     0,   222,   878,   879,   880,
     881,     0,   882,   883,   224,   884,   885,   886,   226,     0,
       0,   227,   887,     0,   888,   889,     0,   228,   229,     0,
     230,   890,     0,   231,     0,     0,     0,   891,   233,   234,
     235,   892,     0,   236,   237,     0,     0,   238,     0,   239,
       0,     0,   893,   240,   241,  2777,     0,     0,   242,     0,
       0,   243,   244,     0,     0,     0,     0,     0,     0,   245,
     895,   246,     0,     0,   896,   247,     0,   897,   248,   249,
       0,     0,     0,     0,   898,     0,   899,   251,     0,   252,
     900,     0,   253,     0,   254,   255,   901,     0,     0,   902,
       0,     0,     0,     0,   903,   256,   257,   258,   259,   260,
     261,   904,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   905,   271,   272,   273,   274,   906,   275,   276,   277,
       0,     0,     0,   278,   279,   280,   907,   282,     0,     0,
     908,   284,   909,   910,   285,     0,   286,   911,   912,   913,
     914,   915,   916,   917,   291,   292,   293,   294,     0,   918,
     295,   296,     0,   297,   298,   299,   300,   919,   920,   921,
     301,   302,     0,   922,   923,     0,   303,   304,   924,     0,
     306,   307,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   309,   310,   311,   312,   313,   314,   925,
     926,   316,   317,   318,   927,   928,   929,   930,   931,     0,
     321,   322,   323,     0,   324,     0,   325,   326,     0,   932,
     328,   329,   933,     0,     0,   330,     0,     0,     0,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,     0,
     339,   340,     0,   341,   342,   343,   934,   935,   344,     0,
     345,   346,   347,     0,   348,   349,     0,     0,   936,   350,
     351,   937,   352,   353,   938,   354,   939,   356,   357,   358,
       0,   940,   360,     0,     0,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,     0,
     369,   370,   371,     0,     0,     0,     0,     0,     0,   372,
     373,     0,   374,     0,     0,   375,     0,     0,   376,   377,
     378,   941,   942,   379,   380,     0,   381,   943,   383,   384,
     385,   944,   945,   946,   386,   387,   947,   388,   389,     0,
     390,   391,     0,   747,   392,   948,   949,   950,   951,     0,
       0,     0,   397,     0,     0,   398,     0,   399,   952,   953,
     954,   401,   402,   403,   955,   404,   405,   406,   407,   956,
       0,   408,   409,     0,     0,   957,   958,   410,     0,     0,
     411,     0,     0,     0,   959,   413,     0,     0,   960,   961,
     962,   963,   964,   414,     0,     0,   415,   965,     0,   416,
     417,   418,   966,     0,     0,     0,     0,   420,     0,   421,
     422,     0,   967,     0,   968,     0,     0,     0,     0,   969,
       0,     0,     0,   970,   971,     0,     0,     0,     0,   972,
       0,   973,     0,     0,   974,   975,     0,   976,   977,   135,
       0,   833,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   834,     0,   143,   835,   144,   145,
     146,   147,   836,   149,     0,   150,   837,   151,     0,   838,
     152,   839,   840,   841,   153,   842,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,   843,   160,     0,
     161,   844,   845,   163,     0,   164,   165,   166,   846,   168,
       0,   847,   170,     0,   171,   172,   173,   174,   175,   176,
     848,   849,   177,     0,     0,   178,     0,   850,     0,   851,
     852,   853,     0,     0,   180,   854,   855,     0,   856,   857,
       0,   181,   182,   183,   858,   859,   860,     0,     0,     0,
       0,   861,     0,   186,   862,     0,     0,   863,   864,   187,
       0,   188,     0,     0,     0,   865,   866,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,   867,   199,     0,   868,   869,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,   870,     0,   211,   871,   212,   213,
     872,   873,   214,     0,   874,   215,   216,   217,   875,     0,
     218,     0,     0,   876,     0,   219,   220,     0,   877,   221,
       0,   222,   878,   879,   880,   881,     0,   882,   883,   224,
     884,   885,   886,   226,     0,     0,   227,   887,     0,   888,
     889,     0,   228,   229,     0,   230,   890,     0,   231,     0,
       0,     0,   891,   233,   234,   235,   892,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,   893,   240,   241,
    2850,     0,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,   895,   246,     0,     0,   896,
     247,     0,   897,   248,   249,     0,     0,     0,     0,   898,
       0,   899,   251,     0,   252,   900,     0,   253,     0,   254,
     255,   901,     0,     0,   902,     0,     0,     0,     0,   903,
     256,   257,   258,   259,   260,   261,   904,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   905,   271,   272,   273,
     274,   906,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   907,   282,     0,     0,   908,   284,   909,   910,   285,
       0,   286,   911,   912,   913,   914,   915,   916,   917,   291,
     292,   293,   294,     0,   918,   295,   296,     0,   297,   298,
     299,   300,   919,   920,   921,   301,   302,     0,   922,   923,
       0,   303,   304,   924,     0,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   925,   926,   316,   317,   318,   927,
     928,   929,   930,   931,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   932,   328,   329,   933,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,   934,   935,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,   936,   350,   351,   937,   352,   353,   938,
     354,   939,   356,   357,   358,     0,   940,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,   941,   942,   379,   380,
       0,   381,   943,   383,   384,   385,   944,   945,   946,   386,
     387,   947,   388,   389,     0,   390,   391,     0,   747,   392,
     948,   949,   950,   951,     0,     0,     0,   397,     0,     0,
     398,     0,   399,   952,   953,   954,   401,   402,   403,   955,
     404,   405,   406,   407,   956,     0,   408,   409,     0,     0,
     957,   958,   410,     0,     0,   411,     0,     0,     0,   959,
     413,     0,     0,   960,   961,   962,   963,   964,   414,     0,
       0,   415,   965,     0,   416,   417,   418,   966,     0,     0,
       0,     0,   420,     0,   421,   422,     0,   967,     0,   968,
       0,     0,     0,     0,   969,     0,     0,     0,   970,   971,
       0,     0,     0,     0,   972,     0,   973,     0,     0,   974,
     975,     0,   976,   977,   135,     0,   833,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   834,
       0,   143,   835,   144,   145,   146,   147,   836,   149,     0,
     150,   837,   151,     0,   838,   152,   839,   840,   841,   153,
     842,     0,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,   843,   160,     0,   161,   844,   845,   163,     0,
     164,   165,   166,   846,   168,     0,   847,   170,     0,   171,
     172,   173,   174,   175,   176,   848,   849,   177,     0,     0,
     178,     0,   850,     0,   851,   852,   853,     0,     0,   180,
     854,   855,     0,   856,   857,     0,   181,   182,   183,   858,
     859,   860,     0,     0,     0,     0,   861,     0,   186,   862,
       0,     0,   863,  3221,   187,     0,   188,     0,     0,     0,
     865,   866,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,   197,   198,     0,     0,
     867,   199,     0,   868,   869,   200,   201,   202,   203,   204,
       0,     0,   205,     0,   206,   207,   208,   209,   210,   870,
       0,   211,   871,   212,   213,   872,   873,   214,     0,   874,
     215,   216,   217,   875,     0,   218,     0,     0,   876,     0,
     219,   220,     0,   877,   221,     0,   222,   878,   879,   880,
     881,     0,   882,   883,   224,   884,   885,   886,   226,     0,
       0,   227,   887,     0,   888,   889,     0,   228,   229,     0,
     230,   890,     0,   231,     0,     0,     0,   891,   233,   234,
     235,   892,     0,   236,   237,     0,     0,   238,     0,   239,
       0,     0,   893,   240,   241,   894,     0,     0,   242,     0,
       0,   243,   244,     0,     0,     0,     0,     0,     0,   245,
     895,   246,     0,     0,   896,   247,     0,   897,   248,   249,
       0,     0,     0,     0,   898,     0,   899,   251,     0,   252,
     900,     0,   253,     0,   254,   255,   901,     0,     0,   902,
       0,     0,     0,     0,   903,   256,   257,   258,   259,   260,
     261,   904,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   905,   271,   272,   273,   274,   906,   275,   276,   277,
       0,     0,     0,   278,   279,   280,   907,   282,     0,     0,
     908,   284,   909,   910,   285,     0,   286,   911,   912,   913,
     914,   915,   916,   917,   291,   292,   293,   294,     0,   918,
     295,   296,     0,   297,   298,   299,   300,   919,   920,   921,
     301,   302,     0,   922,   923,     0,   303,   304,   924,     0,
     306,   307,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   309,   310,   311,   312,   313,   314,   925,
     926,   316,   317,   318,   927,   928,   929,   930,   931,     0,
     321,   322,   323,     0,   324,     0,   325,   326,     0,   932,
     328,   329,   933,     0,     0,   330,     0,     0,     0,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,     0,
     339,   340,     0,   341,   342,   343,   934,   935,   344,     0,
     345,   346,   347,     0,   348,   349,     0,     0,   936,   350,
     351,   937,   352,   353,   938,   354,   939,   356,   357,   358,
       0,   940,   360,     0,     0,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,     0,
     369,   370,   371,     0,     0,     0,     0,     0,     0,   372,
     373,     0,   374,     0,     0,   375,     0,     0,   376,   377,
     378,   941,   942,   379,   380,     0,   381,   943,   383,   384,
     385,   944,   945,   946,   386,   387,   947,   388,   389,     0,
     390,   391,     0,   747,   392,   948,   949,   950,   951,     0,
       0,     0,   397,     0,     0,   398,     0,   399,   952,   953,
     954,   401,   402,   403,   955,   404,   405,   406,   407,   956,
       0,   408,   409,     0,     0,   957,   958,   410,     0,     0,
     411,     0,     0,     0,   959,   413,     0,     0,   960,   961,
     962,   963,   964,   414,     0,     0,   415,   965,     0,   416,
     417,   418,   966,     0,     0,     0,     0,   420,     0,   421,
     422,     0,   967,     0,   968,     0,     0,     0,     0,   969,
       0,     0,     0,   970,   971,     0,     0,     0,     0,   972,
       0,   973,     0,     0,   974,   975,     0,   976,   977,   135,
       0,   833,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   834,     0,   143,   835,   144,   145,
     146,   147,   836,   149,     0,   150,   837,   151,     0,   838,
     152,   839,   840,   841,   153,   842,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,   843,   160,     0,
     161,   844,   845,   163,     0,   164,   165,   166,   846,   168,
       0,   847,   170,     0,   171,   172,   173,   174,   175,   176,
     848,   849,   177,     0,     0,   178,     0,   850,     0,   851,
     852,   853,     0,     0,   180,   854,   855,     0,   856,   857,
       0,   181,   182,   183,   858,   859,   860,     0,     0,     0,
       0,   861,     0,   186,   862,     0,     0,   863,   864,   187,
       0,   188,     0,     0,     0,   865,   866,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,   867,   199,     0,   868,   869,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,   870,     0,   211,   871,   212,   213,
     872,   873,   214,     0,   874,   215,   216,   217,   875,     0,
     218,     0,     0,   876,     0,   219,   220,     0,   877,   221,
       0,   222,   878,   879,   880,   881,     0,   882,   883,   224,
     884,   885,   886,   226,     0,     0,   227,   887,     0,   888,
     889,     0,   228,   229,     0,   230,   890,     0,   231,     0,
       0,     0,   891,   233,   234,   235,   892,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,   893,   240,   241,
     894,     0,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,   895,   246,     0,     0,   896,
     247,     0,   897,   248,   249,     0,     0,     0,     0,   898,
       0,   899,   251,     0,   252,   900,     0,   253,     0,   254,
     255,   901,     0,     0,   902,     0,     0,     0,     0,   903,
     256,   257,   258,   259,   260,   261,   904,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   905,   271,   272,   273,
     274,   906,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   907,   282,     0,     0,   908,   284,   909,   910,   285,
       0,   286,   911,   912,   913,   914,   915,   916,   917,   291,
     292,   293,   294,     0,   918,   295,   296,     0,   297,   298,
     299,   300,   919,     0,   921,   301,   302,     0,   922,   923,
       0,   303,   304,   924,     0,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   925,   926,   316,   317,   318,   927,
     928,   929,   930,   931,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   932,   328,   329,   933,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,   934,   935,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,   936,   350,   351,   937,   352,   353,   938,
     354,   939,   356,   357,   358,     0,   940,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,   941,   942,   379,   380,
       0,   381,   943,   383,   384,   385,   944,   945,   946,   386,
     387,   947,   388,   389,     0,   390,   391,     0,   747,   392,
     948,   949,   950,   951,     0,     0,     0,   397,     0,     0,
     398,     0,   399,   952,   953,   954,   401,   402,   403,   955,
     404,   405,   406,   407,   956,     0,   408,   409,     0,     0,
     957,   958,   410,     0,     0,   411,     0,     0,     0,   959,
     413,     0,     0,   960,   961,   962,   963,   964,   414,     0,
       0,   415,   965,     0,   416,   417,   418,   966,     0,     0,
       0,     0,   420,     0,   421,   422,     0,   967,     0,   968,
       0,     0,     0,     0,   969,     0,     0,     0,   970,   971,
       0,     0,     0,     0,   972,     0,   973,     0,     0,   974,
     975,     0,   976,   977,   135,     0,   136,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   142,
       0,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,     0,   151,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,   160,     0,   161,   162,     0,   163,     0,
     164,   165,   166,   167,   168,     0,   169,   170,     0,   171,
     172,   173,   174,   175,   176,     0,     0,   177,     0,     0,
     178,  2182,   179,     0,     0,     0,     0,     0,     0,   180,
       0,     0,     0,     0,     0,     0,   181,   182,   183,     0,
       0,   184,     0,     0,     0,     0,   185,     0,   186,     0,
       0,     0,     0,     0,   187,     0,   188,     0,     0,     0,
       0,     0,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,   197,   198,     0,     0,
       0,   199,     0,     0,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,   206,   207,   208,   209,   210,     0,
       0,   211,     0,   212,   213,     0,     0,   214,     0,     0,
     215,   216,   217,     0,     0,   218,     0,     0,     0,     0,
     219,   220,     0,     0,   221,  2183,   222,     0,     0,     0,
       0,     0,     0,   223,   224,     0,     0,   225,   226,     0,
       0,   227,     0,     0,     0,     0,     0,   228,   229,     0,
     230,     0,     0,   231,     0,     0,     0,   232,   233,   234,
     235,     0,     0,   236,   237,  1224,     0,   238,     0,   239,
       0,     0,     0,   240,   241,     0,     0,     0,   242,     0,
       0,   243,   244,     0,     0,     0,  1225,     0,     0,   245,
       0,   246,     0,     0,     0,   247,     0,     0,   248,   249,
       0,  2764,     0,     0,     0,     0,   250,   251,     0,   252,
       0,     0,   253,     0,   254,   255,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   256,   257,   258,   259,   260,
     261,     0,   262,   263,   264,   265,   266,   267,   268,   269,
     270,     0,   271,   272,   273,   274,     0,   275,   276,   277,
       0,     0,     0,   278,   279,   280,   281,   282,     0,     0,
     283,   284,     0,     0,   285,     0,   286,     0,   287,     0,
       0,   288,   289,   290,   291,   292,   293,   294,     0,     0,
     295,   296,     0,   297,   298,   299,   300,     0,     0,     0,
     301,   302,     0,     0,     0,     0,   303,   304,   305,     0,
     306,   307,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   309,   310,   311,  2765,   313,   314,   315,
       0,   316,   317,   318,     0,   319,     0,   320,     0,     0,
     321,   322,   323,     0,   324,     0,   325,   326,     0,   327,
     328,   329,     0,     0,     0,   330,     0,     0,     0,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,     0,
     339,   340,     0,   341,   342,   343,     0,     0,   344,     0,
     345,   346,   347,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,   353,     0,   354,   355,   356,   357,   358,
       0,   359,   360,  -386,     0,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,     0,
     369,   370,   371,  2185,     0,     0,     0,     0,     0,   372,
     373,     0,   374,     0,     0,   375,     0,     0,   376,   377,
     378,     0,     0,   379,   380,     0,   381,   382,   383,   384,
     385,     0,     0,     0,   386,   387,     0,   388,   389,     0,
     390,   391,     0,     0,   392,   393,   394,   395,   396,     0,
       0,     0,   397,     0,     0,   398,     0,   399,     0,     0,
     400,   401,   402,   403,     0,   404,   405,   406,   407,     0,
       0,   408,   409,     0,     0,     0,     0,   410,     0,     0,
     411,     0,     0,     0,   412,   413,     0,     0,     0,     0,
       0,     0,     0,   414,     0,     0,   415,     0,     0,   416,
     417,   418,   419,     0,     0,     0,     0,   420,     0,   421,
     422,     0,     0,   135,   423,   136,   137,   138,   139,   140,
       0,     0,     0,     0,     0,   141,     0,     0,   142,     0,
     143,     0,   144,   145,   146,   147,   148,   149,  2244,   150,
       0,   151,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,     0,   156,     0,   157,   158,     0,     0,
     159,     0,   160,     0,   161,   162,     0,   163,     0,   164,
     165,   166,   167,   168,     0,   169,   170,     0,   171,   172,
     173,   174,   175,   176,     0,     0,   177,     0,     0,   178,
    2182,   179,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,   182,   183,     0,     0,
     184,     0,     0,     0,     0,   185,     0,   186,     0,     0,
       0,     0,     0,   187,     0,   188,     0,     0,     0,     0,
       0,   189,     0,   190,   191,   192,   193,   194,     0,     0,
       0,   195,     0,     0,   196,   197,   198,     0,     0,     0,
     199,     0,     0,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,   206,   207,   208,   209,   210,     0,     0,
     211,     0,   212,   213,     0,     0,   214,     0,     0,   215,
     216,   217,     0,     0,   218,     0,     0,     0,     0,   219,
     220,     0,     0,   221,  2183,   222,     0,     0,     0,     0,
       0,     0,   223,   224,     0,     0,   225,   226,     0,     0,
     227,     0,     0,     0,     0,     0,   228,   229,     0,   230,
       0,     0,   231,     0,     0,     0,   232,   233,   234,   235,
       0,     0,   236,   237,  1224,     0,   238,     0,   239,     0,
       0,     0,   240,   241,     0,     0,     0,   242,     0,     0,
     243,   244,     0,     0,     0,  1225,     0,     0,   245,     0,
     246,     0,     0,     0,   247,     0,     0,   248,   249,     0,
       0,     0,     0,     0,     0,   250,   251,     0,   252,     0,
       0,   253,     0,   254,   255,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   256,   257,   258,   259,   260,   261,
       0,   262,   263,   264,   265,   266,   267,   268,   269,   270,
       0,   271,   272,   273,   274,     0,   275,   276,   277,     0,
       0,     0,   278,   279,   280,   281,   282,     0,     0,   283,
     284,     0,     0,   285,     0,   286,     0,   287,     0,     0,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,   297,   298,   299,   300,     0,     0,     0,   301,
     302,     0,     0,     0,     0,   303,   304,   305,     0,   306,
     307,   308,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   318,     0,   319,     0,   320,     0,     0,   321,
     322,   323,     0,   324,     0,   325,   326,     0,   327,   328,
     329,     0,     0,     0,   330,     0,     0,     0,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,     0,   339,
     340,     0,   341,   342,   343,     0,     0,   344,     0,   345,
     346,   347,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,   353,     0,   354,   355,   356,   357,   358,     0,
     359,   360,     0,     0,     0,   361,   362,   363,     0,     0,
     364,     0,     0,     0,   365,   366,   367,   368,     0,   369,
     370,   371,  2185,     0,     0,     0,     0,     0,   372,   373,
       0,   374,     0,     0,   375,     0,     0,   376,   377,   378,
       0,     0,   379,   380,     0,   381,   382,   383,   384,   385,
       0,     0,     0,   386,   387,     0,   388,   389,     0,   390,
     391,     0,     0,   392,   393,   394,   395,   396,     0,     0,
       0,   397,     0,     0,   398,     0,   399,     0,     0,   400,
     401,   402,   403,     0,   404,   405,   406,   407,     0,     0,
     408,   409,     0,     0,     0,     0,   410,     0,     0,   411,
       0,     0,     0,   412,   413,     0,     0,     0,     0,     0,
       0,     0,   414,     0,     0,   415,     0,     0,   416,   417,
     418,   419,     0,     0,     0,     0,   420,     0,   421,   422,
       0,     0,   135,   423,   136,   137,   138,   139,   140,     0,
       0,     0,     0,     0,   141,     0,     0,   142,     0,   143,
       0,   144,   145,   146,   147,   148,   149,  2244,   150,     0,
     151,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,     0,   156,     0,   157,   158,     0,     0,   159,
       0,   160,     0,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,     0,   169,   170,     0,   171,   172,   173,
     174,   175,   176,     0,     0,   177,     0,     0,   178,     0,
     179,     0,     0,     0,     0,     0,     0,   180,     0,     0,
       0,     0,     0,     0,   181,   182,   183,     0,     0,   184,
       0,     0,     0,     0,   185,     0,   186,     0,     0,     0,
       0,     0,   187,     0,   188,     0,     0,     0,     0,     0,
     189,     0,   190,   191,   192,   193,   194,     0,     0,     0,
     195,     0,     0,   196,   197,   198,     0,     0,     0,   199,
       0,     0,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,   206,   207,   208,   209,   210,     0,     0,   211,
       0,   212,   213,     0,     0,   214,     0,     0,   215,   216,
     217,     0,     0,   218,     0,     0,     0,     0,   219,   220,
       0,     0,   221,     0,   222,     0,     0,     0,     0,     0,
       0,   223,   224,     0,     0,   225,   226,     0,     0,   227,
       0,     0,     0,     0,     0,   228,   229,     0,   230,     0,
       0,   231,     0,     0,     0,   232,   233,   234,   235,     0,
       0,   236,   237,     0,     0,   238,     0,   239,     0,     0,
       0,   240,   241,     0,     0,     0,   242,     0,     0,   243,
     244,     0,     0,     0,     0,     0,     0,   245,     0,   246,
       0,     0,     0,   247,     0,     0,   248,   249,     0,     0,
       0,     0,     0,     0,   250,   251,     0,   252,     0,     0,
     253,     0,   254,   255,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   256,   257,   258,   259,   260,   261,     0,
     262,   263,   264,   265,   266,   267,   268,   269,   270,     0,
     271,   272,   273,   274,     0,   275,   276,   277,     0,     0,
       0,   278,   279,   280,   281,   282,     0,     0,   283,   284,
       0,     0,   285,     0,   286,     0,   287,     0,     0,   288,
     289,   290,   291,   292,   293,   294,     0,     0,   295,   296,
       0,   297,   298,   299,   300,     0,     0,     0,   301,   302,
       0,     0,     0,     0,   303,   304,   305,     0,   306,   307,
     308,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,     0,   319,     0,   320,     0,     0,   321,   322,
     323,     0,   324,     0,   325,   326,     0,   327,   328,   329,
       0,     0,     0,   330,     0,     0,     0,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,     0,   339,   340,
       0,   341,   342,   343,     0,     0,   344,     0,   345,   346,
     347,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,   353,     0,   354,   355,   356,   357,   358,     0,   359,
     360,  2059,     0,     0,   361,   362,   363,     0,     0,   364,
       0,     0,     0,   365,   366,   367,   368,     0,   369,   370,
     371,     0,     0,     0,     0,     0,     0,   372,   373,     0,
     374,     0,     0,   375,     0,     0,   376,   377,   378,     0,
       0,   379,   380,     0,   381,   382,   383,   384,   385,     0,
       0,     0,   386,   387,     0,   388,   389,     0,   390,   391,
       0,     0,   392,   393,   394,   395,   396,     0,     0,     0,
     397,     0,     0,   398,     0,   399,     0,     0,   400,   401,
     402,   403,     0,   404,   405,   406,   407,     0,     0,   408,
     409,     0,     0,     0,     0,   410,     0,     0,   411,     0,
       0,     0,   412,   413,     0,     0,     0,     0,     0,     0,
       0,   414,     0,     0,   415,     0,     0,   416,   417,   418,
     419,     0,     0,     0,     0,   420,     0,   421,   422,     0,
       0,     0,   423,     0,     0,     0,     0,     0,     0,     0,
     135,     0,   136,   137,   138,   139,   140,     0,     0,     0,
    2541,     0,   141,     0,     0,   142,   977,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,     0,   151,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
       0,   156,     0,   157,   158,     0,     0,   159,     0,   160,
       0,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,     0,   169,   170,     0,   171,   172,   173,   174,   175,
     176,     0,     0,   177,     0,     0,   178,     0,   179,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,   182,   183,     0,     0,   184,     0,     0,
       0,     0,   185,     0,   186,     0,     0,     0,     0,     0,
     187,     0,   188,     0,     0,     0,     0,     0,   189,     0,
     190,   191,   192,   193,   194,     0,     0,     0,   195,     0,
       0,   196,   197,   198,     0,     0,     0,   199,     0,     0,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
     206,   207,   208,   209,   210,     0,     0,   211,     0,   212,
     213,     0,     0,   214,     0,     0,   215,   216,   217,     0,
       0,   218,     0,     0,     0,     0,   219,   220,     0,     0,
     221,     0,   222,     0,     0,     0,     0,     0,     0,   223,
     224,     0,     0,   225,   226,     0,     0,   227,     0,     0,
       0,     0,     0,   228,   229,     0,   230,     0,     0,   231,
       0,     0,     0,   232,   233,   234,   235,     0,     0,   236,
     237,     0,     0,   238,     0,   239,     0,     0,     0,   240,
     241,     0,     0,     0,   242,     0,     0,   243,   244,     0,
       0,     0,     0,     0,     0,   245,     0,   246,     0,     0,
       0,   247,     0,     0,   248,   249,     0,     0,     0,     0,
       0,     0,   250,   251,     0,   252,     0,     0,   253,     0,
     254,   255,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   256,   257,   258,   259,   260,   261,     0,   262,   263,
     264,   265,   266,   267,   268,   269,   270,     0,   271,   272,
     273,   274,     0,   275,   276,   277,     0,     0,     0,   278,
     279,   280,   281,   282,     0,     0,   283,   284,     0,     0,
     285,     0,   286,     0,   287,     0,     0,   288,   289,   290,
     291,   292,   293,   294,     0,     0,   295,   296,     0,   297,
     298,   299,   300,     0,     0,     0,   301,   302,     0,     0,
       0,     0,   303,   304,   305,     0,   306,   307,   308,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
       0,   319,     0,   320,     0,     0,   321,   322,   323,     0,
     324,     0,   325,   326,     0,   327,   328,   329,     0,     0,
       0,   330,     0,     0,     0,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,     0,   339,   340,     0,   341,
     342,   343,     0,     0,   344,     0,   345,   346,   347,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,   353,
       0,   354,   355,   356,   357,   358,     0,   359,   360,     0,
       0,     0,   361,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,     0,   369,   370,   371,     0,
       0,     0,     0,     0,     0,   372,   373,     0,   374,     0,
       0,   375,     0,     0,   376,   377,   378,     0,     0,   379,
     380,     0,   381,   382,   383,   384,   385,     0,     0,     0,
     386,   387,     0,   388,   389,     0,   390,   391,     0,     0,
     392,   393,   394,   395,   396,     0,     0,     0,   397,     0,
       0,   398,     0,   399,     0,     0,   400,   401,   402,   403,
       0,   404,   405,   406,   407,     0,     0,   408,   409,     0,
       0,     0,     0,   410,     0,     0,   411,     0,     0,     0,
     412,   413,     0,     0,     0,     0,     0,     0,     0,   414,
       0,     0,   415,     0,     0,   416,   417,   418,   419,     0,
       0,     0,     0,   420,     0,   421,   422,     0,     0,     0,
     423,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     135,     0,   136,   137,   138,   139,   140,     0,  4140,     0,
       0,     0,   141,  4141,   977,   142,     0,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,     0,   151,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
       0,   156,     0,   157,   158,     0,     0,   159,     0,   160,
       0,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,     0,   169,   170,     0,   171,   172,   173,   174,   175,
     176,     0,     0,   177,     0,     0,   178,     0,   179,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,   182,   183,     0,     0,   184,     0,     0,
       0,     0,   185,     0,   186,     0,     0,     0,     0,     0,
     187,     0,   188,     0,     0,     0,     0,     0,   189,     0,
     190,   191,   192,   193,   194,     0,     0,     0,   195,     0,
       0,   196,   197,   198,     0,     0,     0,   199,     0,     0,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
     206,   207,   208,   209,   210,     0,     0,   211,     0,   525,
     213,     0,     0,   214,     0,     0,   215,   216,   217,     0,
       0,   218,     0,     0,     0,     0,   219,   220,     0,     0,
     221,     0,   222,     0,     0,     0,     0,     0,     0,   223,
     224,     0,     0,   225,   226,     0,     0,   227,     0,     0,
       0,     0,     0,   228,   229,     0,   230,     0,     0,   231,
       0,     0,     0,   232,   233,   234,   235,     0,     0,   236,
     237,     0,     0,   238,     0,   239,     0,     0,     0,   240,
     241,     0,     0,     0,   242,     0,     0,   243,   244,     0,
       0,     0,     0,     0,     0,   245,     0,   246,     0,     0,
       0,   247,     0,     0,   248,   249,     0,     0,     0,     0,
       0,     0,   250,   251,     0,   252,     0,     0,   253,     0,
     254,   255,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   256,   257,   258,   259,   260,   261,     0,   262,   263,
     264,   265,   266,   267,   268,   269,   270,     0,   271,   272,
     273,   274,     0,   275,   276,   277,     0,     0,     0,   278,
     279,   280,   281,   282,     0,     0,   283,   284,     0,     0,
     285,     0,   286,     0,   287,     0,     0,   288,   289,   290,
     291,   292,   293,   294,     0,     0,   295,   296,     0,   297,
     298,   299,   300,     0,     0,     0,   301,   302,     0,     0,
       0,     0,   303,   304,   305,     0,   306,   307,   308,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   309,
     310,   311,   312,   313,   526,   315,     0,   316,   317,   318,
       0,   319,     0,   320,     0,     0,   321,   322,   323,     0,
     324,     0,   325,   326,     0,   327,   328,   329,     0,     0,
       0,   330,     0,     0,     0,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,     0,   339,   340,     0,   341,
     342,   343,     0,     0,   344,     0,   345,   346,   347,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,   353,
       0,   354,   355,   356,   357,   358,     0,   359,   360,   527,
       0,     0,   361,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,     0,   369,   370,   371,     0,
       0,     0,     0,     0,     0,   372,   373,     0,   374,     0,
       0,   375,     0,     0,   376,   377,   378,     0,     0,   379,
     380,     0,   381,   382,   383,   384,   385,     0,     0,     0,
     386,   387,     0,   388,   389,     0,   390,   391,     0,     0,
     392,   393,   394,   395,   396,     0,     0,     0,   397,     0,
       0,   398,     0,   399,     0,     0,   400,   401,   402,   403,
       0,   404,   405,   406,   407,     0,     0,   408,   409,     0,
       0,     0,     0,   410,     0,     0,   411,     0,     0,     0,
     412,   413,     0,     0,     0,     0,     0,     0,     0,   414,
       0,     0,   415,     0,     0,   416,   417,   418,   419,     0,
       0,     0,     0,   420,     0,   421,   422,     0,     0,   135,
     423,   136,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   142,     0,   143,     0,   144,   145,
     146,   147,   148,   149,   465,   150,     0,   151,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,   160,     0,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
       0,   169,   170,     0,   171,   172,   173,   174,   175,   176,
       0,     0,   177,     0,     0,   178,     0,   179,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,   182,   183,     0,     0,   184,     0,     0,     0,
       0,   185,     0,   186,     0,     0,     0,     0,     0,   187,
       0,   188,     0,     0,     0,     0,     0,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,     0,   199,     0,     0,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,     0,     0,   211,     0,   212,   213,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
     218,     0,     0,     0,     0,   219,   220,     0,     0,   221,
       0,   222,     0,     0,     0,     0,     0,     0,   223,   224,
       0,     0,   225,   226,     0,     0,   227,     0,     0,     0,
       0,     0,   228,   229,     0,   230,     0,     0,   231,     0,
       0,     0,   232,   233,   234,   235,     0,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,     0,   240,   241,
       0,  1091,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,     0,   246,     0,     0,     0,
     247,     0,     0,   248,   249,     0,     0,     0,     0,     0,
       0,   250,   251,     0,   252,     0,     0,   253,     0,   254,
     255,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     256,   257,   258,   259,   260,   261,     0,   262,   263,   264,
     265,   266,   267,   268,   269,   270,     0,   271,   272,   273,
     274,     0,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   281,   282,     0,     0,   283,   284,     0,     0,   285,
       0,   286,     0,   287,     0,     0,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,     0,     0,     0,   301,   302,     0,     0,     0,
       0,   303,   304,   305,     0,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,     0,
     319,     0,   320,     0,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   327,   328,   329,     0,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,     0,     0,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,   353,     0,
     354,   355,   356,   357,   358,     0,   359,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,     0,     0,   379,   380,
       0,   381,   382,   383,   384,   385,     0,     0,     0,   386,
     387,     0,   388,   389,     0,   390,   391,     0,     0,   392,
     393,   394,   395,   396,     0,     0,     0,   397,     0,     0,
     398,     0,   399,     0,     0,   400,   401,   402,   403,     0,
     404,   405,   406,   407,     0,     0,   408,   409,     0,     0,
       0,     0,   410,     0,     0,   411,     0,     0,     0,   412,
     413,     0,     0,     0,     0,     0,     0,     0,   414,     0,
       0,   415,     0,     0,   416,   417,   418,   419,     0,     0,
       0,     0,   420,     0,   421,   422,     0,     0,   135,   423,
     136,   137,   138,   139,   140,     0,     0,     0,     0,     0,
     141,     0,     0,   142,     0,   143,     0,   144,   145,   146,
     147,   148,   149,   465,   150,     0,   151,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,     0,   156,
       0,   157,   158,     0,     0,   159,     0,   160,     0,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,     0,
     169,   170,     0,   171,   172,   173,   174,   175,   176,     0,
       0,   177,     0,     0,   178,     0,   179,     0,     0,     0,
       0,     0,     0,   180,     0,     0,     0,     0,     0,     0,
     181,   182,   183,     0,     0,   184,     0,     0,     0,     0,
     185,     0,   186,     0,     0,     0,     0,     0,   187,     0,
     188,     0,     0,     0,     0,     0,   189,     0,   190,   191,
     192,   193,   194,     0,     0,     0,   195,     0,     0,   196,
     197,   198,     0,     0,     0,   199,     0,     0,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,   206,   207,
     208,   209,   210,     0,     0,   211,     0,   212,   213,     0,
       0,   214,     0,     0,   215,   216,   217,     0,     0,   218,
       0,     0,     0,     0,   219,   220,     0,     0,   221,     0,
     222,     0,     0,     0,     0,     0,     0,   223,   224,     0,
       0,   225,   226,     0,     0,   227,     0,     0,     0,     0,
       0,   228,   229,     0,   230,     0,     0,   231,     0,     0,
       0,   232,   233,   234,   235,     0,     0,   236,   237,     0,
       0,   238,     0,   239,     0,     0,     0,   240,   241,     0,
       0,     0,   242,     0,     0,   243,   244,     0,     0,     0,
       0,     0,     0,   245,     0,   246,     0,     0,     0,   247,
       0,     0,   248,   249,     0,     0,     0,     0,     0,     0,
     250,   251,     0,   252,     0,     0,   253,     0,   254,   255,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   256,
     257,   258,   259,   260,   261,     0,   262,   263,   264,   265,
     266,   267,   268,   269,   270,     0,   271,   272,   273,   274,
       0,   275,   276,   277,     0,     0,     0,   278,   279,   280,
     281,   282,     0,     0,   283,   284,     0,     0,   285,     0,
     286,     0,   287,     0,     0,   288,   289,   290,   291,   292,
     293,   294,     0,     0,   295,   296,     0,   297,   298,   299,
     300,     0,     0,     0,   301,   302,     0,     0,     0,     0,
     303,   304,   305,     0,   306,   307,   308,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,     0,   319,
       0,   320,     0,     0,   321,   322,   323,     0,   324,     0,
     325,   326,     0,   327,   328,   329,     0,     0,     0,   330,
       0,     0,     0,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,     0,   339,   340,     0,   341,   342,   343,
       0,     0,   344,     0,   345,   346,   347,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,   353,     0,   354,
     355,   356,   357,   358,     0,   359,   360,     0,     0,     0,
     361,   362,   363,     0,     0,   364,     0,     0,     0,   365,
     366,   367,   368,     0,   369,   370,   371,     0,     0,     0,
       0,     0,     0,   372,   373,     0,   374,     0,     0,   375,
       0,     0,   376,   377,   378,     0,     0,   379,   380,     0,
     381,   382,   383,   384,   385,     0,     0,     0,   386,   387,
       0,   388,   389,     0,   390,   391,     0,     0,   392,   393,
     394,   395,   396,     0,     0,     0,   397,     0,     0,   398,
       0,   399,     0,     0,   400,   401,   402,   403,     0,   404,
     405,   406,   407,     0,     0,   408,   409,     0,     0,     0,
       0,   410,     0,     0,   411,     0,     0,     0,   412,   413,
       0,     0,     0,     0,     0,     0,     0,   414,     0,     0,
     415,     0,     0,   416,   417,   418,   419,     0,     0,     0,
       0,   420,     0,   421,   422,     0,     0,     0,   423,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   135,  2009,
     136,   137,   138,   139,   140,     0,     0,     0,     0,     0,
     141,     0,   465,   142,     0,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,     0,   151,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,     0,   156,
       0,   157,   158,     0,     0,   159,     0,   160,     0,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,     0,
     169,   170,     0,   171,   172,   173,   174,   175,   176,     0,
       0,   177,     0,     0,   178,     0,   179,     0,     0,     0,
       0,     0,     0,   180,     0,     0,     0,     0,     0,     0,
     181,   182,   183,     0,     0,   184,     0,     0,     0,     0,
     185,     0,   186,     0,     0,     0,     0,     0,   187,     0,
     188,     0,     0,     0,     0,     0,   189,     0,   190,   191,
     192,   193,   194,     0,     0,     0,   195,     0,     0,   196,
     197,   198,     0,     0,     0,   199,     0,     0,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,   206,   207,
     208,   209,   210,     0,     0,   211,     0,   212,   213,     0,
       0,   214,     0,     0,   215,   216,   217,     0,     0,   218,
       0,     0,     0,     0,   219,   220,     0,     0,   221,     0,
     222,     0,     0,     0,     0,     0,     0,   223,   224,     0,
       0,   225,   226,     0,     0,   227,     0,     0,     0,     0,
       0,   228,   229,     0,   230,     0,     0,   231,     0,     0,
       0,   232,   233,   234,   235,     0,     0,   236,   237,     0,
       0,   238,     0,   239,     0,     0,     0,   240,   241,     0,
       0,     0,   242,     0,     0,   243,   244,     0,     0,     0,
       0,     0,     0,   245,     0,   246,     0,     0,     0,   247,
       0,     0,   248,   249,     0,     0,     0,     0,     0,     0,
     250,   251,     0,   252,     0,     0,   253,     0,   254,   255,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   256,
     257,   258,   259,   260,   261,     0,   262,   263,   264,   265,
     266,   267,   268,   269,   270,     0,   271,   272,   273,   274,
       0,   275,   276,   277,     0,     0,     0,   278,   279,   280,
     281,   282,     0,     0,   283,   284,     0,     0,   285,     0,
     286,     0,   287,     0,     0,   288,   289,   290,   291,   292,
     293,   294,     0,     0,   295,   296,     0,   297,   298,   299,
     300,     0,     0,     0,   301,   302,     0,     0,     0,     0,
     303,   304,   305,     0,   306,   307,   308,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,     0,   319,
       0,   320,     0,     0,   321,   322,   323,     0,   324,     0,
     325,   326,     0,   327,   328,   329,     0,     0,     0,   330,
       0,     0,     0,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,     0,   339,   340,     0,   341,   342,   343,
       0,     0,   344,     0,   345,   346,   347,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,   353,     0,   354,
     355,   356,   357,   358,     0,   359,   360,     0,     0,     0,
     361,   362,   363,     0,     0,   364,     0,     0,     0,   365,
     366,   367,   368,     0,   369,   370,   371,     0,     0,     0,
       0,     0,     0,   372,   373,     0,   374,     0,     0,   375,
       0,     0,   376,   377,   378,     0,     0,   379,   380,     0,
     381,   382,   383,   384,   385,     0,     0,     0,   386,   387,
       0,   388,   389,     0,   390,   391,     0,     0,   392,   393,
     394,   395,   396,     0,     0,     0,   397,     0,     0,   398,
       0,   399,     0,     0,   400,   401,   402,   403,     0,   404,
     405,   406,   407,     0,     0,   408,   409,     0,     0,     0,
       0,   410,     0,     0,   411,     0,     0,     0,   412,   413,
       0,     0,     0,     0,     0,     0,     0,   414,     0,     0,
     415,     0,     0,   416,   417,   418,   419,     0,     0,     0,
       0,   420,     0,   421,   422,     0,     0,   135,   423,   136,
     137,   138,   139,   140,     0,     0,     0,     0,     0,   141,
       0,     0,   142,     0,   143,  2243,   144,   145,   146,   147,
     148,   149,  2244,   150,     0,   151,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,     0,   156,     0,
     157,   158,     0,     0,   159,     0,   160,     0,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,     0,   169,
     170,     0,   171,   172,   173,   174,   175,   176,     0,     0,
     177,     0,     0,   178,     0,   179,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
     182,   183,     0,     0,   184,     0,     0,     0,     0,   185,
       0,   186,     0,     0,     0,     0,     0,   187,     0,   188,
       0,     0,     0,     0,     0,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,   195,     0,     0,   196,   197,
     198,     0,     0,     0,   199,     0,     0,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,   206,   207,   208,
     209,   210,     0,     0,   211,     0,   212,   213,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,   218,     0,
       0,     0,     0,   219,   220,     0,     0,   221,     0,   222,
       0,     0,     0,     0,     0,     0,   223,   224,     0,     0,
     225,   226,     0,     0,   227,     0,     0,     0,     0,     0,
     228,   229,     0,   230,     0,     0,   231,     0,     0,     0,
     232,   233,   234,   235,     0,     0,   236,   237,     0,     0,
     238,     0,   239,     0,     0,     0,   240,   241,     0,     0,
       0,   242,     0,     0,   243,   244,     0,     0,     0,     0,
       0,     0,   245,     0,   246,     0,     0,     0,   247,     0,
       0,   248,   249,     0,     0,     0,     0,     0,     0,   250,
     251,     0,   252,     0,     0,   253,     0,   254,   255,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   256,   257,
     258,   259,   260,   261,     0,   262,   263,   264,   265,   266,
     267,   268,   269,   270,     0,   271,   272,   273,   274,     0,
     275,   276,   277,     0,     0,     0,   278,   279,   280,   281,
     282,     0,     0,   283,   284,     0,     0,   285,     0,   286,
       0,   287,     0,     0,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   297,   298,   299,   300,
       0,     0,     0,   301,   302,     0,     0,     0,     0,   303,
     304,   305,     0,   306,   307,   308,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,     0,   319,     0,
     320,     0,     0,   321,   322,   323,     0,   324,     0,   325,
     326,     0,   327,   328,   329,     0,     0,     0,   330,     0,
       0,     0,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,     0,   339,   340,     0,   341,   342,   343,     0,
       0,   344,     0,   345,   346,   347,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,   353,     0,   354,   355,
     356,   357,   358,     0,   359,   360,     0,     0,     0,   361,
     362,   363,     0,     0,   364,     0,     0,     0,   365,   366,
     367,   368,     0,   369,   370,   371,     0,     0,     0,     0,
       0,     0,   372,   373,     0,   374,     0,     0,   375,     0,
       0,   376,   377,   378,     0,     0,   379,   380,     0,   381,
     382,   383,   384,   385,     0,     0,     0,   386,   387,     0,
     388,   389,     0,   390,   391,     0,     0,   392,   393,   394,
     395,   396,     0,     0,     0,   397,     0,     0,   398,     0,
     399,     0,     0,   400,   401,   402,   403,     0,   404,   405,
     406,   407,     0,     0,   408,   409,     0,     0,     0,     0,
     410,     0,     0,   411,     0,     0,     0,   412,   413,     0,
       0,     0,     0,     0,     0,     0,   414,     0,     0,   415,
       0,     0,   416,   417,   418,   419,     0,     0,     0,     0,
     420,     0,   421,   422,     0,     0,     0,   423,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   135,     0,   136,
     137,   138,   139,   140,     0,     0,     0,     0,     0,   141,
    4141,   977,   142,     0,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   150,     0,   151,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,     0,   156,     0,
     157,   158,     0,     0,   159,     0,   160,     0,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,     0,   169,
     170,     0,   171,   172,   173,   174,   175,   176,     0,     0,
     177,     0,     0,   178,     0,   179,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
     182,   183,     0,     0,   184,     0,     0,     0,     0,   185,
       0,   186,     0,     0,     0,     0,     0,   187,     0,   188,
       0,     0,     0,     0,     0,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,   195,     0,     0,   196,   197,
     198,     0,     0,     0,   199,     0,     0,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,   206,   207,   208,
     209,   210,     0,     0,   211,     0,   212,   213,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,   218,     0,
       0,     0,     0,   219,   220,     0,     0,   221,     0,   222,
       0,     0,     0,     0,     0,     0,   223,   224,     0,     0,
     225,   226,     0,     0,   227,     0,     0,     0,     0,     0,
     228,   229,     0,   230,     0,     0,   231,     0,     0,     0,
     232,   233,   234,   235,     0,     0,   236,   237,     0,     0,
     238,     0,   239,     0,     0,     0,   240,   241,     0,     0,
       0,   242,     0,     0,   243,   244,     0,     0,     0,     0,
       0,     0,   245,     0,   246,     0,     0,     0,   247,     0,
       0,   248,   249,     0,     0,     0,     0,     0,     0,   250,
     251,     0,   252,     0,     0,   253,     0,   254,   255,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   256,   257,
     258,   259,   260,   261,     0,   262,   263,   264,   265,   266,
     267,   268,   269,   270,     0,   271,   272,   273,   274,     0,
     275,   276,   277,     0,     0,     0,   278,   279,   280,   281,
     282,     0,     0,   283,   284,     0,     0,   285,     0,   286,
       0,   287,     0,     0,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   297,   298,   299,   300,
       0,     0,     0,   301,   302,     0,     0,     0,     0,   303,
     304,   305,     0,   306,   307,   308,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,     0,   319,     0,
     320,     0,     0,   321,   322,   323,     0,   324,     0,   325,
     326,     0,   327,   328,   329,     0,     0,     0,   330,     0,
       0,     0,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,     0,   339,   340,     0,   341,   342,   343,     0,
       0,   344,     0,   345,   346,   347,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,   353,     0,   354,   355,
     356,   357,   358,     0,   359,   360,     0,     0,     0,   361,
     362,   363,     0,     0,   364,     0,     0,     0,   365,   366,
     367,   368,     0,   369,   370,   371,     0,     0,     0,     0,
       0,     0,   372,   373,     0,   374,     0,     0,   375,     0,
       0,   376,   377,   378,     0,     0,   379,   380,     0,   381,
     382,   383,   384,   385,     0,     0,     0,   386,   387,     0,
     388,   389,     0,   390,   391,     0,     0,   392,   393,   394,
     395,   396,     0,     0,     0,   397,     0,     0,   398,     0,
     399,     0,     0,   400,   401,   402,   403,     0,   404,   405,
     406,   407,     0,     0,   408,   409,     0,     0,     0,     0,
     410,     0,     0,   411,     0,     0,     0,   412,   413,     0,
       0,     0,     0,     0,     0,     0,   414,     0,     0,   415,
       0,     0,   416,   417,   418,   419,     0,     0,     0,     0,
     420,     0,   421,   422,     0,     0,   135,   423,   136,   137,
     138,   139,   140,     0,     0,     0,     0,     0,   141,     0,
       0,   142,     0,   143,     0,   144,   145,   146,   147,   148,
     149,   465,   150,     0,   151,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,     0,   156,     0,   157,
     158,     0,     0,   159,     0,   160,     0,   161,   162,     0,
     163,     0,   164,   165,   166,   167,   168,     0,   169,   170,
       0,   171,   172,   173,   174,   175,   176,     0,     0,   177,
       0,     0,   178,     0,   179,     0,     0,     0,     0,     0,
       0,   180,     0,     0,     0,     0,     0,     0,   181,   182,
     183,     0,     0,   184,     0,     0,     0,     0,   185,     0,
     186,     0,     0,     0,     0,     0,   187,     0,   188,     0,
       0,     0,     0,     0,   189,     0,   190,   191,   192,   193,
     194,     0,     0,     0,   195,     0,     0,   196,   197,   198,
       0,     0,     0,   199,     0,     0,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,   206,   207,   208,   209,
     210,     0,     0,   211,     0,   212,   213,     0,     0,   214,
       0,     0,   215,   216,   217,     0,     0,   218,     0,     0,
       0,     0,   219,   220,     0,     0,   221,     0,   222,     0,
       0,     0,     0,     0,     0,   223,   224,     0,     0,   225,
     226,     0,     0,   227,     0,     0,     0,     0,     0,   228,
     229,     0,   230,     0,     0,   231,     0,     0,     0,   232,
     233,   234,   235,     0,     0,   236,   237,     0,     0,   238,
       0,   239,     0,     0,     0,   240,   241,     0,     0,     0,
     242,     0,     0,   243,   244,     0,     0,     0,     0,     0,
       0,   245,     0,   246,     0,     0,     0,   247,     0,     0,
     248,   249,     0,     0,     0,     0,     0,     0,   250,   251,
       0,   252,     0,     0,   253,     0,   254,   255,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   256,   257,   258,
     259,   260,   261,     0,   262,   263,   264,   265,   266,   267,
     268,   269,   270,     0,   271,   272,   273,   274,     0,   275,
     276,   277,     0,     0,     0,   278,   279,   280,   281,   282,
       0,     0,   283,   284,     0,     0,   285,     0,   286,     0,
     287,     0,     0,   288,   289,   290,   291,   292,   293,   294,
       0,     0,   295,   296,     0,   297,   298,   299,   300,     0,
       0,     0,   301,   302,     0,     0,     0,     0,   303,   304,
     305,     0,   306,   307,   308,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,     0,   319,     0,   320,
       0,     0,   321,   322,   323,     0,   324,     0,   325,   326,
       0,   327,   328,   329,     0,     0,     0,   330,     0,     0,
       0,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,     0,   339,   340,     0,   341,   342,   343,     0,     0,
     344,     0,   345,   346,   347,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,   353,     0,   354,   355,   356,
     357,   358,     0,   359,   360,     0,     0,     0,   361,   362,
     363,     0,     0,   364,     0,     0,     0,   365,   366,   367,
     368,     0,   369,   370,   371,     0,     0,     0,     0,     0,
       0,   372,   373,     0,   374,     0,     0,   375,     0,     0,
     376,   377,   378,     0,     0,   379,   380,     0,   381,   382,
     383,   384,   385,     0,     0,     0,   386,   387,     0,   388,
     389,     0,   390,   391,     0,     0,   392,   393,   394,   395,
     396,     0,     0,     0,   397,     0,     0,   398,     0,   399,
       0,     0,   400,   401,   402,   403,     0,   404,   405,   406,
     407,     0,     0,   408,   409,     0,     0,     0,     0,   410,
       0,     0,   411,     0,     0,     0,   412,   413,     0,     0,
       0,     0,     0,     0,     0,   414,     0,     0,   415,     0,
       0,   416,   417,   418,   419,     0,     0,     0,     0,   420,
       0,   421,   422,     0,     0,   135,   423,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,     0,   144,   145,   146,   147,   148,   149,
     977,   150,     0,   151,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,     0,   156,     0,   157,   158,
       0,     0,   159,     0,   160,     0,   161,   162,     0,   163,
       0,   164,   165,   166,   167,   168,     0,   169,   170,     0,
     171,   172,   173,   174,   175,   176,     0,     0,   177,     0,
       0,   178,     0,   179,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,   182,   183,
       0,     0,   184,     0,     0,     0,     0,   185,     0,   186,
       0,     0,     0,     0,     0,   187,     0,   188,     0,     0,
       0,     0,     0,   189,     0,   190,   191,   192,   193,   194,
       0,     0,     0,   195,     0,     0,   196,   197,   198,     0,
       0,     0,   199,     0,     0,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,   206,   207,   208,   209,   210,
       0,     0,   211,     0,   212,   213,     0,     0,   214,     0,
       0,   215,   216,   217,     0,     0,   218,     0,     0,     0,
       0,   219,   220,     0,     0,   221,     0,   222,     0,     0,
       0,     0,     0,     0,   223,   224,     0,     0,   225,   226,
       0,     0,   227,     0,     0,     0,     0,     0,   228,   229,
       0,   230,     0,     0,   231,     0,     0,     0,   232,   233,
     234,   235,     0,     0,   236,   237,     0,     0,   238,     0,
     239,     0,     0,     0,   240,   241,     0,     0,     0,   242,
       0,     0,   243,   244,     0,     0,     0,     0,     0,     0,
     245,     0,   246,     0,     0,     0,   247,     0,     0,   248,
     249,     0,     0,     0,     0,     0,     0,   250,   251,     0,
     252,     0,     0,   253,     0,   254,   255,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   256,   257,   258,   259,
     260,   261,     0,   262,   263,   264,   265,   266,   267,   268,
     269,   270,     0,   271,   272,   273,   274,     0,   275,   276,
     277,     0,     0,     0,   278,   279,   280,   281,   282,     0,
       0,   283,   284,     0,     0,   285,     0,   286,     0,   287,
       0,     0,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,     0,   297,   298,   299,   300,     0,     0,
       0,   301,   302,     0,     0,     0,     0,   303,   304,   305,
       0,   306,   307,   308,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   318,     0,   319,     0,   320,     0,
       0,   321,   322,   323,     0,   324,     0,   325,   326,     0,
     327,   328,   329,     0,     0,     0,   330,     0,     0,     0,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
       0,   339,   340,     0,   341,   342,   343,     0,     0,   344,
       0,   345,   346,   347,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,   353,     0,   354,   355,   356,   357,
     358,     0,   359,   360,     0,     0,     0,   361,   362,   363,
       0,     0,   364,     0,     0,     0,   365,   366,   367,   368,
       0,   369,   370,   371,     0,     0,     0,     0,     0,     0,
     372,   373,     0,   374,     0,     0,   375,     0,     0,   376,
     377,   378,     0,     0,   379,   380,     0,   381,   382,   383,
     384,   385,     0,     0,     0,   386,   387,     0,   388,   389,
       0,   390,   391,     0,     0,   392,   393,   394,   395,   396,
       0,     0,     0,   397,     0,     0,   398,     0,   399,     0,
       0,   400,   401,   402,   403,     0,   404,   405,   406,   407,
       0,     0,   408,   409,     0,     0,     0,     0,   410,     0,
       0,   411,     0,     0,     0,   412,   413,     0,     0,     0,
       0,     0,     0,     0,   414,     0,     0,   415,     0,     0,
     416,   417,   418,   419,     0,     0,     0,     0,   420,     0,
     421,   422,     0,     0,   135,   423,   136,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   142,
       0,   143,     0,   144,   145,   146,   147,   148,   149,  2244,
     150,     0,   151,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,   160,     0,   161,   162,     0,   163,     0,
     164,   165,   166,   167,   168,     0,   169,   170,     0,   171,
     172,   173,   174,   175,   176,     0,     0,   177,     0,     0,
     178,     0,   179,     0,     0,     0,     0,     0,     0,   180,
       0,     0,     0,     0,     0,     0,   181,   182,   183,     0,
       0,   184,     0,     0,     0,     0,   185,     0,   186,     0,
       0,     0,     0,     0,   187,     0,   188,     0,     0,     0,
       0,     0,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,   197,   198,     0,     0,
       0,   199,     0,     0,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,   206,   207,   208,   209,   210,     0,
       0,   211,     0,   212,   213,     0,     0,   214,     0,     0,
     215,   216,   217,     0,     0,   218,     0,     0,     0,     0,
     219,   220,     0,     0,   221,     0,   222,     0,     0,     0,
       0,     0,     0,   223,   224,     0,     0,   225,   226,     0,
       0,   227,     0,     0,     0,     0,     0,   228,   229,     0,
     230,     0,     0,   231,     0,     0,     0,   232,   233,   234,
     235,     0,     0,   236,   237,     0,     0,   238,     0,   239,
       0,     0,     0,   240,   241,     0,     0,     0,   242,     0,
       0,   243,   244,     0,     0,     0,     0,     0,     0,   245,
       0,   246,     0,     0,     0,   247,     0,     0,   248,   249,
     628,     0,     0,     0,     0,     0,   250,   251,     0,   252,
       0,     0,   253,     0,   254,   255,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   256,   257,   258,   259,   260,
     261,     0,   262,   263,   264,   265,   266,   267,   268,   269,
     270,     0,   271,   272,   273,   274,     0,   275,   276,   277,
       0,     0,     0,   278,   279,   280,   281,   282,     0,     0,
     283,   284,     0,     0,   285,     0,   286,     0,   287,     0,
       0,   288,   289,   290,   291,   292,   293,   294,     0,     0,
     295,   296,     0,   297,   298,   299,   300,     0,     0,     0,
     301,   302,     0,     0,     0,     0,   303,   304,   305,     0,
     306,   307,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,     0,   319,     0,   320,     0,     0,
     321,   322,   323,     0,   324,     0,   325,   326,     0,   327,
     328,   329,     0,     0,     0,   330,     0,     0,     0,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,     0,
     339,   340,     0,   341,   342,   343,     0,     0,   344,     0,
     345,   346,   347,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,   353,     0,   354,   355,   356,   357,   358,
       0,   359,   360,     0,     0,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,     0,
     369,   370,   371,     0,     0,     0,     0,     0,     0,   372,
     373,     0,   374,     0,     0,   375,     0,     0,   376,   377,
     378,     0,     0,   379,   380,     0,   381,   382,   383,   384,
     385,     0,     0,     0,   386,   387,     0,   388,   389,     0,
     390,   391,     0,   132,   392,   393,   394,   395,   396,     0,
       0,     0,   397,     0,     0,   398,     0,   399,     0,     0,
     400,   401,   402,   403,     0,   404,   405,   406,   407,     0,
       0,   408,   409,     0,     0,     0,     0,   410,     0,     0,
     411,     0,     0,     0,   412,   413,     0,     0,     0,     0,
       0,     0,     0,   414,     0,     0,   415,     0,     0,   416,
     417,   418,   419,     0,     0,     0,     0,   420,     0,   421,
     422,     0,     0,     0,   423,     0,     0,     0,     0,   135,
       0,   136,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   142,     0,   143,  1435,   144,   145,
     146,   147,   148,   149,     0,   150,     0,   151,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,   160,     0,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
       0,   169,   170,     0,   171,   172,   173,   174,   175,   176,
       0,     0,   177,     0,     0,   178,     0,   179,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,   182,   183,     0,     0,   184,     0,     0,     0,
       0,   185,     0,   186,     0,     0,     0,     0,     0,   187,
       0,   188,     0,     0,     0,     0,     0,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,     0,   199,     0,     0,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,     0,     0,   211,     0,   212,   213,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
     218,     0,     0,     0,     0,   219,   220,     0,     0,   221,
       0,   222,     0,     0,     0,     0,     0,     0,   223,   224,
       0,     0,   225,   226,     0,     0,   227,     0,     0,     0,
       0,     0,   228,   229,     0,   230,     0,     0,   231,     0,
       0,     0,   232,   233,   234,   235,     0,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,     0,   240,   241,
       0,     0,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,     0,   246,     0,     0,     0,
     247,     0,     0,   248,   249,   628,     0,     0,     0,     0,
       0,   250,   251,     0,   252,     0,     0,   253,     0,   254,
     255,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     256,   257,   258,   259,   260,   261,     0,   262,   263,   264,
     265,   266,   267,   268,   269,   270,     0,   271,   272,   273,
     274,     0,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   281,   282,     0,     0,   283,   284,     0,     0,   285,
       0,   286,     0,   287,     0,     0,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,     0,     0,     0,   301,   302,     0,     0,     0,
       0,   303,   304,   305,     0,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,     0,
     319,     0,   320,     0,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   327,   328,   329,     0,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,     0,     0,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,   353,     0,
     354,   355,   356,   357,   358,     0,   359,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,     0,     0,   379,   380,
       0,   381,   382,   383,   384,   385,     0,     0,     0,   386,
     387,     0,   388,   389,     0,   390,   391,     0,   132,   392,
     393,   394,   395,   396,     0,     0,     0,   397,     0,     0,
     398,     0,   399,     0,     0,   400,   401,   402,   403,     0,
     404,   405,   406,   407,     0,     0,   408,   409,     0,     0,
       0,     0,   410,     0,     0,   411,     0,     0,     0,   412,
     413,     0,     0,     0,     0,     0,     0,     0,   414,     0,
       0,   415,     0,     0,   416,   417,   418,   419,     0,     0,
       0,     0,   420,     0,   421,   422,     0,     0,     0,   423,
       0,     0,     0,     0,   135,     0,   136,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   142,
       0,   143,  2587,   144,   145,   146,   147,   148,   149,     0,
     150,     0,   151,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,   160,     0,   161,   162,     0,   163,     0,
     164,   165,   166,   167,   168,     0,   169,   170,     0,   171,
     172,   173,   174,   175,   176,     0,     0,   177,     0,     0,
     178,     0,   179,     0,     0,     0,     0,     0,     0,   180,
       0,     0,     0,     0,     0,     0,   181,   182,   183,     0,
       0,   184,     0,     0,     0,     0,   185,     0,   186,     0,
       0,     0,     0,     0,   187,     0,   188,     0,     0,     0,
       0,     0,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,   197,   198,     0,     0,
       0,   199,     0,     0,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,   206,   207,   208,   209,   210,     0,
       0,   211,     0,   212,   213,     0,     0,   214,     0,     0,
     215,   216,   217,     0,     0,   218,     0,     0,     0,     0,
     219,   220,     0,     0,   221,     0,   222,     0,     0,     0,
       0,     0,     0,   223,   224,     0,     0,   225,   226,     0,
       0,   227,     0,     0,     0,     0,     0,   228,   229,     0,
     230,     0,     0,   231,     0,     0,     0,   232,   233,   234,
     235,     0,     0,   236,   237,     0,     0,   238,     0,   239,
       0,     0,     0,   240,   241,     0,     0,     0,   242,     0,
       0,   243,   244,     0,     0,     0,     0,     0,     0,   245,
       0,   246,     0,     0,     0,   247,     0,     0,   248,   249,
     628,     0,     0,     0,     0,     0,   250,   251,     0,   252,
       0,     0,   253,     0,   254,   255,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   256,   257,   258,   259,   260,
     261,     0,   262,   263,   264,   265,   266,   267,   268,   269,
     270,     0,   271,   272,   273,   274,     0,   275,   276,   277,
       0,     0,     0,   278,   279,   280,   281,   282,     0,     0,
     283,   284,     0,     0,   285,     0,   286,     0,   287,     0,
       0,   288,   289,   290,   291,   292,   293,   294,     0,     0,
     295,   296,     0,   297,   298,   299,   300,     0,     0,     0,
     301,   302,     0,     0,     0,     0,   303,   304,   305,     0,
     306,   307,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,     0,   319,     0,   320,     0,     0,
     321,   322,   323,     0,   324,     0,   325,   326,     0,   327,
     328,   329,     0,     0,     0,   330,     0,     0,     0,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,     0,
     339,   340,     0,   341,   342,   343,     0,     0,   344,     0,
     345,   346,   347,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,   353,     0,   354,   355,   356,   357,   358,
       0,   359,   360,     0,     0,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,     0,
     369,   370,   371,     0,     0,     0,     0,     0,     0,   372,
     373,     0,   374,     0,     0,   375,     0,     0,   376,   377,
     378,     0,     0,   379,   380,     0,   381,   382,   383,   384,
     385,     0,     0,     0,   386,   387,     0,   388,   389,     0,
     390,   391,     0,   132,   392,   393,   394,   395,   396,     0,
       0,     0,   397,     0,     0,   398,     0,   399,     0,     0,
     400,   401,   402,   403,     0,   404,   405,   406,   407,     0,
       0,   408,   409,     0,     0,     0,     0,   410,     0,     0,
     411,     0,     0,     0,   412,   413,     0,     0,     0,     0,
       0,     0,     0,   414,     0,     0,   415,     0,     0,   416,
     417,   418,   419,     0,     0,     0,     0,   420,     0,   421,
     422,     0,     0,   135,   423,   136,   137,   138,   139,   140,
       0,     0,     0,     0,     0,   141,     0,     0,     0,     0,
     143,     0,     0,   145,   146,   147,   148,  2938,     0,  -240,
       0,   151,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,     0,   156,     0,     0,     0,     0,     0,
     159,     0,   160,     0,   161,     0,     0,     0,     0,   164,
     165,  3499,   167,   168,     0,   169,   170,     0,     0,   172,
       0,   174,   175,   176,     0,     0,   177,     0,     0,   178,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,   182,   183,     0,     0,
     184,     0,     0,     0,     0,   185,     0,     0,     0,     0,
       0,     0,     0,   187,     0,   188,     0,     0,     0,     0,
       0,   189,     0,   190,   191,   192,   193,   194,     0,     0,
       0,     0,     0,     0,   196,   197,   198,     0,     0,     0,
     199,     0,     0,     0,     0,   201,   202,   203,   204,     0,
       0,   205,     0,   206,   207,   208,   209,     0,     0,     0,
     211,     0,   212,   213,     0,     0,   214,  3500,     0,   215,
     216,   217,     0,     0,     0,     0,     0,     0,     0,   219,
     220,     0,     0,   221,     0,   222,     0,     0,     0,     0,
       0,     0,   223,   224,     0,     0,   225,   226,  3501,     0,
     227,     0,     0,     0,     0,     0,     0,   229,     0,     0,
       0,     0,   231,     0,     0,     0,   232,   233,   234,   235,
    3502,     0,   236,   237,     0,     0,   238,     0,   239,     0,
       0,     0,   240,     0,     0,     0,     0,   242,     0,     0,
     243,   244,  3503,     0,     0,     0,     0,  3504,     0,     0,
     246,     0,     0,     0,   247,  3505,     0,   248,   249,     0,
       0,     0,     0,     0,     0,   250,   251,     0,   252,     0,
       0,   253,     0,   254,   255,     0,     0,     0,     0,     0,
    -240,     0,     0,     0,   256,   257,   258,   259,   260,   261,
       0,   262,   263,   264,   265,   266,   267,   268,   269,   270,
       0,   271,   272,   273,   274,     0,   275,   276,   277,     0,
       0,     0,   278,   279,   280,   281,   282,     0,     0,   283,
     284,     0,     0,   285,     0,   286,     0,   287,     0,     0,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,   297,   298,   299,   300,     0,     0,     0,     0,
     302,     0,     0,     0,     0,   303,   304,   305,     0,   306,
     307,  3506,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   309,     0,   311,     0,   313,   314,   315,     0,
     316,   317,   318,     0,   319,     0,   320,     0,     0,     0,
     322,   323,     0,   324,     0,   325,   326,     0,   327,   328,
     329,     0,     0,     0,     0,     0,     0,     0,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,     0,   339,
       0,     0,   341,     0,   343,  -240,     0,   344,     0,     0,
     346,     0,     0,   348,   349,  3507,     0,     0,     0,   351,
       0,   352,   353,     0,   354,   355,   356,     0,   358,     0,
     359,     0,     0,     0,     0,   361,   362,   363,     0,     0,
     364,     0,     0,     0,   365,     0,   367,     0,     0,   369,
       0,   371,     0,     0,     0,     0,     0,     0,   372,   373,
       0,   374,     0,     0,   375,     0,     0,     0,   377,   378,
       0,     0,     0,   380,     0,   381,   382,   383,   384,   385,
       0,     0,     0,   386,   387,     0,   388,   389,     0,   390,
     391,     0,     0,   392,   393,   394,   395,   396,     0,     0,
       0,   397,     0,     0,   398,     0,   399,     0,     0,     0,
     401,   402,   403,     0,   404,   405,   406,   407,     0,     0,
       0,     0,     0,     0,     0,     0,   410,     0,     0,   411,
       0,     0,     0,   412,   413,     0,     0,     0,     0,     0,
       0,     0,   414,     0,     0,   415,     0,     0,   416,   417,
     418,   419,     0,     0,  -240,     0,   420,     0,   421,     0,
       0,     0,     0,   423,     0,     0,     0,     0,  3508,   135,
       0,   136,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,  4182,     0,   142,     0,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   150,     0,   151,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,   160,     0,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
       0,   169,   170,     0,   171,   172,   173,   174,   175,   176,
       0,     0,   177,     0,     0,   178,     0,   179,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,   182,   183,     0,     0,   184,     0,     0,     0,
       0,   185,     0,   186,     0,     0,     0,     0,     0,   187,
       0,   188,     0,     0,     0,     0,     0,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,     0,   199,     0,     0,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,     0,     0,   211,     0,   212,   213,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
     218,     0,     0,     0,     0,   219,   220,     0,     0,   221,
       0,   222,     0,     0,     0,     0,     0,     0,   223,   224,
       0,     0,   225,   226,     0,     0,   227,     0,     0,     0,
       0,     0,   228,   229,     0,   230,     0,     0,   231,     0,
       0,     0,   232,   233,   234,   235,     0,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,     0,   240,   241,
       0,     0,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,     0,   246,     0,     0,     0,
     247,     0,     0,   248,   249,     0,     0,     0,     0,     0,
       0,   250,   251,     0,   252,     0,     0,   253,     0,   254,
     255,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     256,   257,   258,   259,   260,   261,     0,   262,   263,   264,
     265,   266,   267,   268,   269,   270,     0,   271,   272,   273,
     274,     0,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   281,   282,     0,     0,   283,   284,     0,     0,   285,
       0,   286,     0,   287,     0,     0,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,     0,     0,     0,   301,   302,     0,     0,     0,
       0,   303,   304,   305,     0,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,     0,
     319,     0,   320,     0,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   327,   328,   329,     0,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,     0,     0,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,   353,     0,
     354,   355,   356,   357,   358,     0,   359,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,     0,     0,   379,   380,
       0,   381,   382,   383,   384,   385,     0,     0,     0,   386,
     387,     0,   388,   389,     0,   390,   391,     0,     0,   392,
     393,   394,   395,   396,     0,     0,     0,   397,     0,     0,
     398,     0,   399,     0,     0,   400,   401,   402,   403,     0,
     404,   405,   406,   407,     0,     0,   408,   409,     0,     0,
       0,     0,   410,     0,     0,   411,     0,     0,     0,   412,
     413,     0,     0,     0,     0,     0,     0,     0,   414,     0,
       0,   415,     0,     0,   416,   417,   418,   419,     0,     0,
       0,     0,   420,     0,   421,   422,     0,     0,     0,   423,
     135,     0,   136,   137,   138,   139,   140,     0,     0,     0,
    1787,     0,   141,     0,     0,   142,     0,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,     0,   151,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
       0,   156,     0,   157,   158,     0,     0,   159,     0,   160,
       0,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,     0,   169,   170,     0,   171,   172,   173,   174,   175,
     176,     0,     0,   177,     0,     0,   178,     0,   179,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,   182,   183,     0,     0,   184,     0,     0,
       0,     0,   185,     0,   186,     0,     0,     0,     0,     0,
     187,     0,   188,     0,     0,     0,     0,     0,   189,     0,
     190,   191,   192,   193,   194,     0,     0,     0,   195,     0,
       0,   196,   197,   198,     0,     0,     0,   199,     0,     0,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
     206,   207,   208,   209,   210,     0,     0,   211,     0,   212,
     213,     0,     0,   214,     0,     0,   215,   216,   217,     0,
       0,   218,     0,     0,     0,     0,   219,   220,     0,     0,
     221,     0,   222,     0,     0,     0,     0,     0,     0,   223,
     224,     0,     0,   225,   226,     0,     0,   227,     0,     0,
       0,     0,     0,   228,   229,     0,   230,     0,     0,   231,
       0,     0,     0,   232,   233,   234,   235,     0,     0,   236,
     237,     0,     0,   238,     0,   239,     0,     0,     0,   240,
     241,     0,     0,     0,   242,     0,     0,   243,   244,     0,
       0,     0,     0,     0,     0,   245,     0,   246,     0,     0,
       0,   247,     0,     0,   248,   249,     0,     0,     0,     0,
       0,     0,   250,   251,     0,   252,     0,     0,   253,     0,
     254,   255,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   256,   257,   258,   259,   260,   261,     0,   262,   263,
     264,   265,   266,   267,   268,   269,   270,     0,   271,   272,
     273,   274,     0,   275,   276,   277,     0,     0,     0,   278,
     279,   280,   281,   282,     0,     0,   283,   284,     0,     0,
     285,     0,   286,     0,   287,     0,     0,   288,   289,   290,
     291,   292,   293,   294,     0,     0,   295,   296,     0,   297,
     298,   299,   300,     0,     0,     0,   301,   302,     0,     0,
       0,     0,   303,   304,   305,     0,   306,   307,   308,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
       0,   319,     0,   320,     0,     0,   321,   322,   323,     0,
     324,     0,   325,   326,     0,   327,   328,   329,     0,     0,
       0,   330,     0,     0,     0,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,     0,   339,   340,     0,   341,
     342,   343,     0,     0,   344,     0,   345,   346,   347,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,   353,
       0,   354,   355,   356,   357,   358,     0,   359,   360,     0,
       0,     0,   361,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,     0,   369,   370,   371,     0,
       0,     0,     0,     0,     0,   372,   373,     0,   374,     0,
       0,   375,     0,     0,   376,   377,   378,     0,     0,   379,
     380,     0,   381,   382,   383,   384,   385,     0,     0,     0,
     386,   387,     0,   388,   389,     0,   390,   391,     0,     0,
     392,   393,   394,   395,   396,     0,     0,     0,   397,     0,
       0,   398,     0,   399,     0,     0,   400,   401,   402,   403,
       0,   404,   405,   406,   407,     0,     0,   408,   409,     0,
       0,     0,     0,   410,     0,     0,   411,     0,     0,     0,
     412,   413,     0,     0,     0,     0,     0,     0,     0,   414,
       0,     0,   415,     0,     0,   416,   417,   418,   419,     0,
       0,     0,     0,   420,     0,   421,   422,     0,     0,     0,
     423,   135,     0,   136,   137,   138,   139,   140,     0,     0,
       0,  2559,     0,   141,     0,     0,   142,     0,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   150,     0,   151,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,     0,   156,     0,   157,   158,     0,     0,   159,     0,
     160,     0,   161,   162,     0,   163,     0,   164,   165,   166,
     167,   168,     0,   169,   170,     0,   171,   172,   173,   174,
     175,   176,     0,     0,   177,     0,     0,   178,     0,   179,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,   182,   183,     0,     0,   184,     0,
       0,     0,     0,   185,     0,   186,     0,     0,     0,     0,
       0,   187,     0,   188,     0,     0,     0,     0,     0,   189,
       0,   190,   191,   192,   193,   194,     0,     0,     0,   195,
       0,     0,   196,   197,   198,     0,     0,     0,   199,     0,
       0,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,   206,   207,   208,   209,   210,     0,     0,   211,     0,
     212,   213,     0,     0,   214,     0,     0,   215,   216,   217,
       0,     0,   218,     0,     0,     0,     0,   219,   220,     0,
       0,   221,     0,   222,     0,     0,     0,     0,     0,     0,
     223,   224,     0,     0,   225,   226,     0,     0,   227,     0,
       0,     0,     0,     0,   228,   229,     0,   230,     0,     0,
     231,     0,     0,     0,   232,   233,   234,   235,     0,     0,
     236,   237,     0,     0,   238,     0,   239,     0,     0,     0,
     240,   241,     0,     0,     0,   242,     0,     0,   243,   244,
       0,     0,     0,     0,     0,     0,   245,     0,   246,     0,
       0,     0,   247,     0,     0,   248,   249,     0,     0,     0,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
       0,   254,   255,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   256,   257,   258,   259,   260,   261,     0,   262,
     263,   264,   265,   266,   267,   268,   269,   270,     0,   271,
     272,   273,   274,     0,   275,   276,   277,     0,     0,     0,
     278,   279,   280,   281,   282,     0,     0,   283,   284,     0,
       0,   285,     0,   286,     0,   287,     0,     0,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,     0,
     297,   298,   299,   300,     0,     0,     0,   301,   302,     0,
       0,     0,     0,   303,   304,   305,     0,   306,   307,   308,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     318,     0,   319,     0,   320,     0,     0,   321,   322,   323,
       0,   324,     0,   325,   326,     0,   327,   328,   329,     0,
       0,     0,   330,     0,     0,     0,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,     0,   339,   340,     0,
     341,   342,   343,     0,     0,   344,     0,   345,   346,   347,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
     353,     0,   354,   355,   356,   357,   358,     0,   359,   360,
       0,     0,     0,   361,   362,   363,     0,     0,   364,     0,
       0,     0,   365,   366,   367,   368,     0,   369,   370,   371,
       0,     0,     0,     0,     0,     0,   372,   373,     0,   374,
       0,     0,   375,     0,     0,   376,   377,   378,     0,     0,
     379,   380,     0,   381,   382,   383,   384,   385,     0,     0,
       0,   386,   387,     0,   388,   389,     0,   390,   391,     0,
       0,   392,   393,   394,   395,   396,     0,     0,     0,   397,
       0,     0,   398,     0,   399,     0,     0,   400,   401,   402,
     403,     0,   404,   405,   406,   407,     0,     0,   408,   409,
       0,     0,     0,     0,   410,     0,     0,   411,     0,     0,
       0,   412,   413,     0,     0,     0,     0,     0,     0,     0,
     414,     0,     0,   415,     0,     0,   416,   417,   418,   419,
       0,     0,     0,     0,   420,     0,   421,   422,     0,     0,
       0,   423,   135,     0,   136,   137,   138,   139,   140,     0,
       0,     0,  2894,     0,   141,     0,     0,   142,     0,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,     0,
     151,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,     0,   156,     0,   157,   158,     0,     0,   159,
       0,   160,     0,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,     0,   169,   170,     0,   171,   172,   173,
     174,   175,   176,     0,     0,   177,     0,     0,   178,     0,
     179,     0,     0,     0,     0,     0,     0,   180,     0,     0,
       0,     0,     0,     0,   181,   182,   183,     0,     0,   184,
       0,     0,     0,     0,   185,     0,   186,     0,     0,     0,
       0,     0,   187,     0,   188,     0,     0,     0,     0,     0,
     189,     0,   190,   191,   192,   193,   194,     0,     0,     0,
     195,     0,     0,   196,   197,   198,     0,     0,     0,   199,
       0,     0,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,   206,   207,   208,   209,   210,     0,     0,   211,
       0,   212,   213,     0,     0,   214,     0,     0,   215,   216,
     217,     0,     0,   218,     0,     0,     0,     0,   219,   220,
       0,     0,   221,     0,   222,     0,     0,     0,     0,     0,
       0,   223,   224,     0,     0,   225,   226,     0,     0,   227,
       0,     0,     0,     0,     0,   228,   229,     0,   230,     0,
       0,   231,     0,     0,     0,   232,   233,   234,   235,     0,
       0,   236,   237,     0,     0,   238,     0,   239,     0,     0,
       0,   240,   241,     0,     0,     0,   242,     0,     0,   243,
     244,     0,     0,     0,     0,     0,     0,   245,     0,   246,
       0,     0,     0,   247,     0,     0,   248,   249,     0,     0,
       0,     0,     0,     0,   250,   251,     0,   252,     0,     0,
     253,     0,   254,   255,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   256,   257,   258,   259,   260,   261,     0,
     262,   263,   264,   265,   266,   267,   268,   269,   270,     0,
     271,   272,   273,   274,     0,   275,   276,   277,     0,     0,
       0,   278,   279,   280,   281,   282,     0,     0,   283,   284,
       0,     0,   285,     0,   286,     0,   287,     0,     0,   288,
     289,   290,   291,   292,   293,   294,     0,     0,   295,   296,
       0,   297,   298,   299,   300,     0,     0,     0,   301,   302,
       0,     0,     0,     0,   303,   304,   305,     0,   306,   307,
     308,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,     0,   319,     0,   320,     0,     0,   321,   322,
     323,     0,   324,     0,   325,   326,     0,   327,   328,   329,
       0,     0,     0,   330,     0,     0,     0,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,     0,   339,   340,
       0,   341,   342,   343,     0,     0,   344,     0,   345,   346,
     347,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,   353,     0,   354,   355,   356,   357,   358,     0,   359,
     360,     0,     0,     0,   361,   362,   363,     0,     0,   364,
       0,     0,     0,   365,   366,   367,   368,     0,   369,   370,
     371,     0,     0,     0,     0,     0,     0,   372,   373,     0,
     374,     0,     0,   375,     0,     0,   376,   377,   378,     0,
       0,   379,   380,     0,   381,   382,   383,   384,   385,     0,
       0,     0,   386,   387,     0,   388,   389,     0,   390,   391,
       0,     0,   392,   393,   394,   395,   396,     0,     0,     0,
     397,     0,     0,   398,     0,   399,     0,     0,   400,   401,
     402,   403,     0,   404,   405,   406,   407,     0,     0,   408,
     409,     0,     0,     0,     0,   410,     0,     0,   411,     0,
       0,     0,   412,   413,     0,     0,     0,     0,     0,     0,
       0,   414,     0,     0,   415,     0,     0,   416,   417,   418,
     419,     0,     0,     0,     0,   420,     0,   421,   422,     0,
       0,     0,   423,   135,     0,   136,   137,   138,   139,   140,
       0,     0,     0,  3246,     0,   141,     0,     0,     0,     0,
     143,     0,     0,   145,   146,   147,   148,     0,     0,  -240,
       0,   151,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,     0,   156,     0,     0,     0,     0,     0,
     159,     0,   160,     0,   161,     0,     0,     0,     0,   164,
     165,  3499,   167,   168,     0,   169,   170,     0,     0,   172,
       0,   174,   175,   176,     0,     0,   177,     0,     0,   178,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,   182,   183,     0,     0,
     184,     0,     0,     0,     0,   185,     0,     0,     0,     0,
       0,     0,     0,   187,     0,   188,     0,     0,     0,     0,
       0,   189,     0,   190,   191,   192,   193,   194,     0,     0,
       0,     0,     0,     0,   196,   197,   198,     0,  -257,     0,
     199,     0,     0,     0,  -257,   201,   202,   203,   204,     0,
       0,   205,     0,   206,   207,   208,   209,     0,     0,     0,
     211,     0,   212,   213,     0,     0,   214,  3500,     0,   215,
     216,   217,     0,     0,     0,     0,     0,     0,     0,   219,
     220,     0,     0,   221,     0,   222,     0,     0,     0,     0,
       0,     0,   223,   224,     0,     0,   225,   226,  3501,     0,
     227,     0,     0,     0,     0,     0,     0,   229,     0,     0,
       0,     0,   231,     0,     0,     0,   232,   233,   234,   235,
    3502,     0,   236,   237,     0,     0,   238,     0,   239,     0,
       0,     0,   240,     0,     0,     0,     0,   242,     0,     0,
     243,   244,  3503,     0,     0,     0,     0,  3504,     0,     0,
     246,     0,     0,     0,   247,  3505,     0,   248,   249,     0,
       0,     0,     0,     0,     0,   250,   251,     0,   252,     0,
       0,   253,     0,   254,   255,     0,     0,     0,     0,     0,
    -240,     0,     0,     0,   256,   257,   258,   259,   260,   261,
       0,   262,   263,   264,   265,   266,   267,   268,   269,   270,
       0,   271,   272,   273,   274,     0,   275,   276,   277,     0,
       0,     0,   278,   279,   280,   281,   282,     0,     0,   283,
     284,     0,     0,   285,     0,   286,     0,   287,     0,     0,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,   297,   298,   299,   300,     0,     0,     0,     0,
     302,     0,     0,     0,     0,   303,   304,   305,     0,   306,
     307,  3506,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   309,     0,   311,     0,   313,   314,   315,     0,
     316,   317,   318,     0,   319,     0,   320,     0,     0,     0,
     322,   323,     0,   324,     0,   325,   326,     0,   327,   328,
     329,     0,     0,     0,     0,     0,     0,     0,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,     0,   339,
       0,     0,   341,     0,   343,  -240,     0,   344,     0,     0,
     346,     0,     0,   348,   349,  3507,     0,     0,     0,   351,
       0,   352,   353,     0,   354,   355,   356,     0,   358,     0,
     359,     0,     0,     0,     0,   361,   362,   363,     0,     0,
     364,     0,     0,     0,   365,     0,   367,     0,     0,   369,
       0,   371,     0,     0,     0,     0,     0,     0,   372,   373,
       0,   374,     0,     0,   375,     0,     0,     0,   377,   378,
       0,     0,     0,   380,     0,   381,   382,   383,   384,   385,
       0,     0,     0,   386,   387,     0,   388,   389,     0,   390,
     391,     0,     0,   392,   393,   394,   395,   396,     0,     0,
       0,   397,     0,     0,   398,     0,   399,     0,     0,     0,
     401,   402,   403,     0,   404,   405,   406,   407,     0,     0,
       0,     0,     0,     0,     0,     0,   410,     0,     0,   411,
       0,     0,     0,   412,   413,     0,     0,     0,     0,     0,
       0,     0,   414,     0,     0,   415,     0,     0,   416,   417,
     418,   419,     0,     0,  -240,     0,   420,     0,   421,     0,
       0,     0,     0,   423,     0,     0,  -257,   135,  3508,   136,
     137,   138,   139,   140,     0,     0,     0,     0,     0,   141,
       0,     0,     0,     0,   143,     0,     0,   145,   146,   147,
     148,     0,     0,  -240,     0,   151,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,     0,   156,     0,
       0,     0,     0,     0,   159,     0,   160,     0,   161,     0,
       0,     0,     0,   164,   165,  3499,   167,   168,     0,   169,
     170,     0,     0,   172,     0,   174,   175,   176,     0,     0,
     177,     0,     0,   178,     0,     0,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
     182,   183,     0,     0,   184,     0,     0,     0,     0,   185,
       0,     0,     0,     0,     0,     0,     0,   187,     0,   188,
       0,     0,     0,     0,     0,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,     0,     0,     0,   196,   197,
     198,     0,     0,     0,   199,     0,     0,     0,  -264,   201,
     202,   203,   204,     0,     0,   205,     0,   206,   207,   208,
     209,     0,     0,     0,   211,     0,   212,   213,     0,     0,
     214,  3500,     0,   215,   216,   217,     0,     0,     0,     0,
       0,     0,     0,   219,   220,     0,     0,   221,     0,   222,
       0,     0,     0,     0,     0,     0,   223,   224,     0,     0,
     225,   226,  3501,     0,   227,     0,     0,     0,     0,     0,
       0,   229,     0,     0,     0,     0,   231,     0,     0,     0,
     232,   233,   234,   235,  3502,     0,   236,   237,     0,     0,
     238,     0,   239,     0,     0,     0,   240,     0,     0,     0,
       0,   242,     0,     0,   243,   244,  3503,     0,     0,     0,
       0,  3504,     0,     0,   246,     0,     0,     0,   247,  3505,
       0,   248,   249,     0,     0,     0,     0,     0,     0,   250,
     251,     0,   252,     0,     0,   253,     0,   254,   255,     0,
       0,     0,     0,     0,  -240,     0,     0,     0,   256,   257,
     258,   259,   260,   261,     0,   262,   263,   264,   265,   266,
     267,   268,   269,   270,     0,   271,   272,   273,   274,     0,
     275,   276,   277,     0,     0,     0,   278,   279,   280,   281,
     282,     0,     0,   283,   284,     0,     0,   285,     0,   286,
       0,   287,     0,     0,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   297,   298,   299,   300,
       0,     0,     0,     0,   302,     0,     0,     0,     0,   303,
     304,   305,     0,   306,   307,  3506,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   309,     0,   311,     0,
     313,   314,   315,     0,   316,   317,   318,     0,   319,     0,
     320,     0,     0,     0,   322,   323,     0,   324,     0,   325,
     326,     0,   327,   328,   329,     0,     0,     0,     0,     0,
       0,     0,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,     0,   339,     0,     0,   341,     0,   343,  -240,
       0,   344,     0,     0,   346,     0,     0,   348,   349,  3507,
       0,     0,     0,   351,     0,   352,   353,     0,   354,   355,
     356,     0,   358,     0,   359,     0,     0,     0,     0,   361,
     362,   363,     0,     0,   364,     0,     0,     0,   365,     0,
     367,     0,     0,   369,     0,   371,     0,     0,     0,     0,
       0,     0,   372,   373,     0,   374,     0,     0,   375,     0,
       0,     0,   377,   378,     0,     0,     0,   380,     0,   381,
     382,   383,   384,   385,     0,     0,     0,   386,   387,     0,
     388,   389,     0,   390,   391,     0,     0,   392,   393,   394,
     395,   396,     0,     0,     0,   397,     0,     0,   398,     0,
     399,     0,     0,     0,   401,   402,   403,     0,   404,   405,
     406,   407,     0,     0,     0,     0,     0,     0,     0,     0,
     410,     0,     0,   411,     0,     0,     0,   412,   413,     0,
       0,     0,     0,     0,     0,     0,   414,     0,     0,   415,
       0,     0,   416,   417,   418,   419,  -264,     0,  -240,     0,
     420,     0,   421,     0,     0,     0,     0,   423,     0,     0,
    -264,   135,  3508,   136,   137,   138,   139,   140,     0,     0,
       0,     0,     0,   141,     0,     0,     0,     0,   143,     0,
       0,   145,   146,   147,   148,     0,     0,  -240,     0,   151,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,     0,   156,     0,     0,     0,     0,     0,   159,     0,
     160,     0,   161,     0,     0,     0,     0,   164,   165,  3499,
     167,   168,     0,   169,   170,     0,     0,   172,     0,   174,
     175,   176,     0,     0,   177,     0,     0,   178,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,   182,   183,     0,     0,   184,     0,
       0,     0,     0,   185,     0,     0,     0,     0,     0,     0,
       0,   187,     0,   188,     0,     0,     0,     0,     0,   189,
       0,   190,   191,   192,   193,   194,     0,     0,     0,     0,
       0,     0,   196,   197,   198,     0,     0,     0,   199,     0,
       0,     0,  3938,   201,   202,   203,   204,     0,     0,   205,
       0,   206,   207,   208,   209,     0,     0,     0,   211,     0,
     212,   213,     0,     0,   214,  3500,     0,   215,   216,   217,
       0,     0,     0,     0,     0,     0,     0,   219,   220,     0,
       0,   221,     0,   222,     0,     0,     0,     0,     0,     0,
     223,   224,     0,     0,   225,   226,  3501,     0,   227,     0,
       0,     0,     0,     0,     0,   229,     0,     0,     0,     0,
     231,     0,     0,     0,   232,   233,   234,   235,  3502,     0,
     236,   237,     0,     0,   238,     0,   239,     0,     0,     0,
     240,     0,     0,     0,     0,   242,     0,     0,   243,   244,
    3503,     0,     0,     0,     0,  3504,     0,     0,   246,     0,
       0,     0,   247,  3505,     0,   248,   249,     0,     0,     0,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
       0,   254,   255,     0,     0,     0,     0,     0,  -240,     0,
       0,     0,   256,   257,   258,   259,   260,   261,     0,   262,
     263,   264,   265,   266,   267,   268,   269,   270,     0,   271,
     272,   273,   274,     0,   275,   276,   277,     0,     0,     0,
     278,   279,   280,   281,   282,     0,     0,   283,   284,     0,
       0,   285,     0,   286,     0,   287,     0,     0,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,     0,
     297,   298,   299,   300,     0,     0,     0,     0,   302,     0,
       0,     0,     0,   303,   304,   305,     0,   306,   307,  3506,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     309,     0,   311,     0,   313,   314,   315,     0,   316,   317,
     318,     0,   319,     0,   320,     0,     0,     0,   322,   323,
       0,   324,     0,   325,   326,     0,   327,   328,   329,     0,
       0,     0,     0,     0,     0,     0,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,     0,   339,     0,     0,
     341,     0,   343,  -240,     0,   344,     0,     0,   346,     0,
       0,   348,   349,  3507,     0,     0,     0,   351,     0,   352,
     353,     0,   354,   355,   356,     0,   358,     0,   359,     0,
       0,     0,     0,   361,   362,   363,     0,     0,   364,     0,
       0,     0,   365,     0,   367,     0,     0,   369,     0,   371,
       0,     0,     0,     0,     0,     0,   372,   373,     0,   374,
       0,     0,   375,     0,     0,     0,   377,   378,     0,     0,
       0,   380,     0,   381,   382,   383,   384,   385,     0,     0,
       0,   386,   387,     0,   388,   389,     0,   390,   391,     0,
       0,   392,   393,   394,   395,   396,     0,     0,     0,   397,
       0,     0,   398,     0,   399,     0,     0,     0,   401,   402,
     403,     0,   404,   405,   406,   407,     0,     0,     0,     0,
       0,     0,     0,     0,   410,     0,     0,   411,     0,     0,
       0,   412,   413,     0,     0,     0,     0,     0,     0,     0,
     414,     0,     0,   415,     0,     0,   416,   417,   418,   419,
       0,     0,  -240,     0,   420,     0,   421,     0,     0,     0,
       0,   423,     0,     0,     0,   135,  3508,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
       0,     0,   143,     0,     0,   145,   146,   147,   148,     0,
       0,  -240,     0,   151,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,     0,   156,     0,     0,     0,
       0,     0,   159,     0,   160,     0,   161,     0,     0,     0,
       0,   164,   165,  3499,   167,   168,     0,   169,   170,     0,
       0,   172,     0,   174,   175,   176,     0,     0,   177,     0,
       0,   178,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,   182,   183,
       0,     0,   184,     0,     0,     0,     0,   185,     0,     0,
       0,     0,     0,     0,     0,   187,     0,   188,     0,     0,
       0,     0,     0,   189,     0,   190,   191,   192,   193,   194,
       0,     0,     0,     0,     0,     0,   196,   197,   198,     0,
       0,     0,   199,     0,     0,     0,  4030,   201,   202,   203,
     204,     0,     0,   205,     0,   206,   207,   208,   209,     0,
       0,     0,   211,     0,   212,   213,     0,     0,   214,  3500,
       0,   215,   216,   217,     0,     0,     0,     0,     0,     0,
       0,   219,   220,     0,     0,   221,     0,   222,     0,     0,
       0,     0,     0,     0,   223,   224,     0,     0,   225,   226,
    3501,     0,   227,     0,     0,     0,     0,     0,     0,   229,
       0,     0,     0,     0,   231,     0,     0,     0,   232,   233,
     234,   235,  3502,     0,   236,   237,     0,     0,   238,     0,
     239,     0,     0,     0,   240,     0,     0,     0,     0,   242,
       0,     0,   243,   244,  3503,     0,     0,     0,     0,  3504,
       0,     0,   246,     0,     0,     0,   247,  3505,     0,   248,
     249,     0,     0,     0,     0,     0,     0,   250,   251,     0,
     252,     0,     0,   253,     0,   254,   255,     0,     0,     0,
       0,     0,  -240,     0,     0,     0,   256,   257,   258,   259,
     260,   261,     0,   262,   263,   264,   265,   266,   267,   268,
     269,   270,     0,   271,   272,   273,   274,     0,   275,   276,
     277,     0,     0,     0,   278,   279,   280,   281,   282,     0,
       0,   283,   284,     0,     0,   285,     0,   286,     0,   287,
       0,     0,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,     0,   297,   298,   299,   300,     0,     0,
       0,     0,   302,     0,     0,     0,     0,   303,   304,   305,
       0,   306,   307,  3506,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   309,     0,   311,     0,   313,   314,
     315,     0,   316,   317,   318,     0,   319,     0,   320,     0,
       0,     0,   322,   323,     0,   324,     0,   325,   326,     0,
     327,   328,   329,     0,     0,     0,     0,     0,     0,     0,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
       0,   339,     0,     0,   341,     0,   343,  -240,     0,   344,
       0,     0,   346,     0,     0,   348,   349,  3507,     0,     0,
       0,   351,     0,   352,   353,     0,   354,   355,   356,     0,
     358,     0,   359,     0,     0,     0,     0,   361,   362,   363,
       0,     0,   364,     0,     0,     0,   365,     0,   367,     0,
       0,   369,     0,   371,     0,     0,     0,     0,     0,     0,
     372,   373,     0,   374,     0,     0,   375,     0,     0,     0,
     377,   378,     0,     0,     0,   380,     0,   381,   382,   383,
     384,   385,     0,     0,     0,   386,   387,     0,   388,   389,
       0,   390,   391,     0,     0,   392,   393,   394,   395,   396,
       0,     0,     0,   397,     0,     0,   398,     0,   399,     0,
       0,     0,   401,   402,   403,     0,   404,   405,   406,   407,
       0,     0,     0,     0,     0,     0,     0,     0,   410,     0,
       0,   411,     0,     0,     0,   412,   413,     0,     0,     0,
       0,     0,     0,     0,   414,     0,     0,   415,     0,     0,
     416,   417,   418,   419,     0,     0,  -240,     0,   420,     0,
     421,     0,     0,     0,     0,   423,     0,     0,     0,   135,
    3508,   136,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,     0,     0,   143,     0,     0,   145,
     146,   147,   148,     0,     0,  -240,     0,   151,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,     0,
     156,     0,     0,     0,     0,     0,   159,     0,   160,     0,
     161,     0,     0,     0,     0,   164,   165,  3499,   167,   168,
       0,   169,   170,     0,     0,   172,     0,   174,   175,   176,
       0,     0,   177,     0,     0,   178,     0,     0,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,   182,   183,     0,     0,   184,     0,     0,     0,
       0,   185,     0,     0,     0,     0,     0,     0,     0,   187,
       0,   188,     0,     0,     0,     0,     0,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,     0,     0,     0,
     196,   197,   198,     0,     0,     0,   199,     0,     0,     0,
    4103,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,     0,     0,     0,   211,     0,   212,   213,
       0,     0,   214,  3500,     0,   215,   216,   217,     0,     0,
       0,     0,     0,     0,     0,   219,   220,     0,     0,   221,
       0,   222,     0,     0,     0,     0,     0,     0,   223,   224,
       0,     0,   225,   226,  3501,     0,   227,     0,     0,     0,
       0,     0,     0,   229,     0,     0,     0,     0,   231,     0,
       0,     0,   232,   233,   234,   235,  3502,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,     0,   240,     0,
       0,     0,     0,   242,     0,     0,   243,   244,  3503,     0,
       0,     0,     0,  3504,     0,     0,   246,     0,     0,     0,
     247,  3505,     0,   248,   249,     0,     0,     0,     0,     0,
       0,   250,   251,     0,   252,     0,     0,   253,     0,   254,
     255,     0,     0,     0,     0,     0,  -240,     0,     0,     0,
     256,   257,   258,   259,   260,   261,     0,   262,   263,   264,
     265,   266,   267,   268,   269,   270,     0,   271,   272,   273,
     274,     0,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   281,   282,     0,     0,   283,   284,     0,     0,   285,
       0,   286,     0,   287,     0,     0,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,     0,     0,     0,     0,   302,     0,     0,     0,
       0,   303,   304,   305,     0,   306,   307,  3506,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,     0,
     311,     0,   313,   314,   315,     0,   316,   317,   318,     0,
     319,     0,   320,     0,     0,     0,   322,   323,     0,   324,
       0,   325,   326,     0,   327,   328,   329,     0,     0,     0,
       0,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,     0,     0,   341,     0,
     343,  -240,     0,   344,     0,     0,   346,     0,     0,   348,
     349,  3507,     0,     0,     0,   351,     0,   352,   353,     0,
     354,   355,   356,     0,   358,     0,   359,     0,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,     0,   367,     0,     0,   369,     0,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,     0,   377,   378,     0,     0,     0,   380,
       0,   381,   382,   383,   384,   385,     0,     0,     0,   386,
     387,     0,   388,   389,     0,   390,   391,     0,     0,   392,
     393,   394,   395,   396,     0,     0,     0,   397,     0,     0,
     398,     0,   399,     0,     0,     0,   401,   402,   403,     0,
     404,   405,   406,   407,     0,     0,     0,     0,     0,     0,
       0,     0,   410,     0,     0,   411,     0,     0,     0,   412,
     413,     0,     0,     0,     0,     0,     0,     0,   414,     0,
       0,   415,     0,     0,   416,   417,   418,   419,     0,     0,
    -240,     0,   420,     0,   421,     0,     0,     0,     0,   423,
       0,     0,     0,   135,  3508,   136,   137,   138,   139,   140,
       0,     0,     0,     0,     0,   141,     0,     0,     0,     0,
     143,     0,     0,   145,   146,   147,   148,     0,     0,  -240,
       0,   151,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,     0,   156,     0,     0,     0,     0,     0,
     159,     0,   160,     0,   161,     0,     0,     0,     0,   164,
     165,  3499,   167,   168,     0,   169,   170,     0,     0,   172,
       0,   174,   175,   176,     0,     0,   177,     0,     0,   178,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,   182,   183,     0,     0,
     184,     0,     0,     0,     0,   185,     0,     0,     0,     0,
       0,     0,     0,   187,     0,   188,     0,     0,     0,     0,
       0,   189,     0,   190,   191,   192,   193,   194,     0,     0,
       0,     0,     0,     0,   196,   197,   198,     0,     0,     0,
     199,     0,     0,     0,  -261,   201,   202,   203,   204,     0,
       0,   205,     0,   206,   207,   208,   209,     0,     0,     0,
     211,     0,   212,   213,     0,     0,   214,  3500,     0,   215,
     216,   217,     0,     0,     0,     0,     0,     0,     0,   219,
     220,     0,     0,   221,     0,   222,     0,     0,     0,     0,
       0,     0,   223,   224,     0,     0,   225,   226,  3501,     0,
     227,     0,     0,     0,     0,     0,     0,   229,     0,     0,
       0,     0,   231,     0,     0,     0,   232,   233,   234,   235,
    3502,     0,   236,   237,     0,     0,   238,     0,   239,     0,
       0,     0,   240,     0,     0,     0,     0,   242,     0,     0,
     243,   244,  3503,     0,     0,     0,     0,  3504,     0,     0,
     246,     0,     0,     0,   247,  3505,     0,   248,   249,     0,
       0,     0,     0,     0,     0,   250,   251,     0,   252,     0,
       0,   253,     0,   254,   255,     0,     0,     0,     0,     0,
    -240,     0,     0,     0,   256,   257,   258,   259,   260,   261,
       0,   262,   263,   264,   265,   266,   267,   268,   269,   270,
       0,   271,   272,   273,   274,     0,   275,   276,   277,     0,
       0,     0,   278,   279,   280,   281,   282,     0,     0,   283,
     284,     0,     0,   285,     0,   286,     0,   287,     0,     0,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,   297,   298,   299,   300,     0,     0,     0,     0,
     302,     0,     0,     0,     0,   303,   304,   305,     0,   306,
     307,  3506,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   309,     0,   311,     0,   313,   314,   315,     0,
     316,   317,   318,     0,   319,     0,   320,     0,     0,     0,
     322,   323,     0,   324,     0,   325,   326,     0,   327,   328,
     329,     0,     0,     0,     0,     0,     0,     0,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,     0,   339,
       0,     0,   341,     0,   343,  -240,     0,   344,     0,     0,
     346,     0,     0,   348,   349,  3507,     0,     0,     0,   351,
       0,   352,   353,     0,   354,   355,   356,     0,   358,     0,
     359,     0,     0,     0,     0,   361,   362,   363,     0,     0,
     364,     0,     0,     0,   365,     0,   367,     0,     0,   369,
       0,   371,     0,     0,     0,     0,     0,     0,   372,   373,
       0,   374,     0,     0,   375,     0,     0,     0,   377,   378,
       0,     0,     0,   380,     0,   381,   382,   383,   384,   385,
       0,     0,     0,   386,   387,     0,   388,   389,     0,   390,
     391,     0,     0,   392,   393,   394,   395,   396,     0,     0,
       0,   397,     0,     0,   398,     0,   399,     0,     0,     0,
     401,   402,   403,     0,   404,   405,   406,   407,     0,     0,
       0,     0,     0,     0,     0,     0,   410,     0,     0,   411,
       0,     0,     0,   412,   413,     0,     0,     0,     0,     0,
       0,     0,   414,     0,     0,   415,     0,     0,   416,   417,
     418,   419,     0,     0,  -240,     0,   420,     0,   421,     0,
       0,     0,     0,   423,     0,     0,     0,   135,  3508,   136,
     137,   138,   139,   140,     0,     0,     0,     0,     0,   141,
       0,     0,     0,     0,   143,     0,     0,   145,   146,   147,
     148,     0,     0,  -240,     0,   151,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,     0,   156,     0,
       0,     0,     0,     0,   159,     0,   160,     0,   161,     0,
       0,     0,     0,   164,   165,  3499,   167,   168,     0,   169,
     170,     0,     0,   172,     0,   174,   175,   176,     0,     0,
     177,     0,     0,   178,     0,     0,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
     182,   183,     0,     0,   184,     0,     0,     0,     0,   185,
       0,     0,     0,     0,     0,     0,     0,   187,     0,   188,
       0,     0,     0,     0,     0,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,     0,     0,     0,   196,   197,
     198,     0,     0,     0,   199,     0,     0,     0,  -267,   201,
     202,   203,   204,     0,     0,   205,     0,   206,   207,   208,
     209,     0,     0,     0,   211,     0,   212,   213,     0,     0,
     214,  3500,     0,   215,   216,   217,     0,     0,     0,     0,
       0,     0,     0,   219,   220,     0,     0,   221,     0,   222,
       0,     0,     0,     0,     0,     0,   223,   224,     0,     0,
     225,   226,  3501,     0,   227,     0,     0,     0,     0,     0,
       0,   229,     0,     0,     0,     0,   231,     0,     0,     0,
     232,   233,   234,   235,  3502,     0,   236,   237,     0,     0,
     238,     0,   239,     0,     0,     0,   240,     0,     0,     0,
       0,   242,     0,     0,   243,   244,  3503,     0,     0,     0,
       0,  3504,     0,     0,   246,     0,     0,     0,   247,  3505,
       0,   248,   249,     0,     0,     0,     0,     0,     0,   250,
     251,     0,   252,     0,     0,   253,     0,   254,   255,     0,
       0,     0,     0,     0,  -240,     0,     0,     0,   256,   257,
     258,   259,   260,   261,     0,   262,   263,   264,   265,   266,
     267,   268,   269,   270,     0,   271,   272,   273,   274,     0,
     275,   276,   277,     0,     0,     0,   278,   279,   280,   281,
     282,     0,     0,   283,   284,     0,     0,   285,     0,   286,
       0,   287,     0,     0,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   297,   298,   299,   300,
       0,     0,     0,     0,   302,     0,     0,     0,     0,   303,
     304,   305,     0,   306,   307,  3506,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   309,     0,   311,     0,
     313,   314,   315,     0,   316,   317,   318,     0,   319,     0,
     320,     0,     0,     0,   322,   323,     0,   324,     0,   325,
     326,     0,   327,   328,   329,     0,     0,     0,     0,     0,
       0,     0,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,     0,   339,     0,     0,   341,     0,   343,  -240,
       0,   344,     0,     0,   346,     0,     0,   348,   349,  3507,
       0,     0,     0,   351,     0,   352,   353,     0,   354,   355,
     356,     0,   358,     0,   359,     0,     0,     0,     0,   361,
     362,   363,     0,     0,   364,     0,     0,     0,   365,     0,
     367,     0,     0,   369,     0,   371,     0,     0,     0,     0,
       0,     0,   372,   373,     0,   374,     0,     0,   375,     0,
       0,     0,   377,   378,     0,     0,     0,   380,     0,   381,
     382,   383,   384,   385,     0,     0,     0,   386,   387,     0,
     388,   389,     0,   390,   391,     0,     0,   392,   393,   394,
     395,   396,     0,     0,     0,   397,     0,     0,   398,     0,
     399,     0,     0,     0,   401,   402,   403,     0,   404,   405,
     406,   407,     0,     0,     0,     0,     0,     0,     0,     0,
     410,     0,     0,   411,     0,     0,     0,   412,   413,     0,
       0,     0,     0,     0,     0,     0,   414,     0,     0,   415,
       0,     0,   416,   417,   418,   419,     0,     0,  -240,     0,
     420,     0,   421,     0,     0,     0,     0,   423,     0,     0,
       0,   135,  3508,   136,   137,   138,   139,   140,     0,     0,
       0,     0,     0,   141,     0,     0,     0,     0,   143,     0,
       0,   145,   146,   147,   148,     0,     0,  -240,     0,   151,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,     0,   156,     0,     0,     0,     0,     0,   159,     0,
     160,     0,   161,     0,     0,     0,     0,   164,   165,  3499,
     167,   168,     0,   169,   170,     0,     0,   172,     0,   174,
     175,   176,     0,     0,   177,     0,     0,   178,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,   182,   183,     0,     0,   184,     0,
       0,     0,     0,   185,     0,     0,     0,     0,     0,     0,
       0,   187,     0,   188,     0,     0,     0,     0,     0,   189,
       0,   190,   191,   192,   193,   194,     0,     0,     0,     0,
       0,     0,   196,   197,   198,     0,     0,     0,   199,     0,
       0,     0,     0,   201,   202,   203,   204,     0,     0,   205,
       0,   206,   207,   208,   209,     0,     0,     0,   211,     0,
     212,   213,     0,     0,   214,  3500,     0,   215,   216,   217,
       0,     0,     0,     0,     0,     0,     0,   219,   220,     0,
       0,   221,     0,   222,     0,     0,     0,     0,     0,     0,
     223,   224,     0,     0,   225,   226,  3501,     0,   227,     0,
       0,     0,     0,     0,     0,   229,     0,     0,     0,     0,
     231,     0,     0,     0,   232,   233,   234,   235,  3502,     0,
     236,   237,     0,     0,   238,     0,   239,     0,     0,     0,
     240,     0,     0,     0,     0,   242,     0,     0,   243,   244,
    3503,     0,     0,     0,     0,  3504,     0,     0,   246,     0,
       0,     0,   247,  3505,     0,   248,   249,     0,     0,     0,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
       0,   254,   255,     0,     0,     0,     0,     0,  -240,     0,
       0,     0,   256,   257,   258,   259,   260,   261,     0,   262,
     263,   264,   265,   266,   267,   268,   269,   270,     0,   271,
     272,   273,   274,     0,   275,   276,   277,     0,     0,     0,
     278,   279,   280,   281,   282,     0,     0,   283,   284,     0,
       0,   285,     0,   286,     0,   287,     0,     0,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,     0,
     297,   298,   299,   300,     0,     0,     0,     0,   302,     0,
       0,     0,     0,   303,   304,   305,     0,   306,   307,  3506,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     309,     0,   311,     0,   313,   314,   315,     0,   316,   317,
     318,     0,   319,     0,   320,     0,     0,     0,   322,   323,
       0,   324,     0,   325,   326,     0,   327,   328,   329,     0,
       0,     0,     0,     0,     0,     0,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,     0,   339,     0,     0,
     341,     0,   343,  -240,     0,   344,     0,     0,   346,     0,
       0,   348,   349,  3507,     0,     0,     0,   351,     0,   352,
     353,     0,   354,   355,   356,     0,   358,     0,   359,     0,
       0,     0,     0,   361,   362,   363,     0,     0,   364,     0,
       0,     0,   365,     0,   367,     0,     0,   369,     0,   371,
       0,     0,     0,     0,     0,     0,   372,   373,     0,   374,
       0,     0,   375,     0,     0,     0,   377,   378,     0,     0,
       0,   380,     0,   381,   382,   383,   384,   385,     0,     0,
       0,   386,   387,     0,   388,   389,     0,   390,   391,     0,
       0,   392,   393,   394,   395,   396,     0,     0,     0,   397,
       0,     0,   398,     0,   399,     0,     0,     0,   401,   402,
     403,     0,   404,   405,   406,   407,     0,     0,     0,     0,
       0,     0,     0,     0,   410,     0,     0,   411,     0,     0,
       0,   412,   413,     0,     0,     0,     0,     0,     0,     0,
     414,     0,     0,   415,     0,     0,   416,   417,   418,   419,
       0,     0,  -240,     0,   420,     0,   421,     0,     0,     0,
       0,   423,     0,     0,     0,   135,  3508,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
       0,     0,   143,     0,     0,   145,   146,   147,   148,     0,
       0,  -240,     0,   151,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,     0,   156,     0,     0,     0,
       0,     0,   159,     0,   160,     0,   161,     0,     0,     0,
       0,   164,   165,  3499,   167,   168,     0,   169,   170,     0,
       0,   172,     0,   174,   175,   176,     0,     0,   177,     0,
       0,   178,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,   182,   183,
       0,     0,   184,     0,     0,     0,     0,   185,     0,     0,
       0,     0,     0,     0,     0,   187,     0,   188,     0,     0,
       0,     0,     0,   189,     0,   190,   191,   192,   193,   194,
       0,     0,     0,     0,     0,     0,   196,   197,   198,     0,
       0,     0,   199,     0,     0,     0,     0,   201,   202,   203,
     204,     0,     0,   205,     0,   206,   207,   208,   209,     0,
       0,     0,   211,     0,   212,   213,     0,     0,   214,  3500,
       0,   215,   216,   217,     0,     0,     0,     0,     0,     0,
       0,   219,   220,     0,     0,   221,     0,   222,     0,     0,
       0,     0,     0,     0,   223,   224,     0,     0,   225,   226,
    3501,     0,   227,     0,     0,     0,     0,     0,     0,   229,
       0,     0,     0,     0,   231,     0,     0,     0,   232,   233,
     234,   235,  3502,     0,   236,   237,     0,     0,   238,     0,
     239,     0,     0,     0,   240,     0,     0,     0,     0,   242,
       0,     0,   243,   244,  3503,     0,     0,     0,     0,  3504,
       0,     0,   246,     0,     0,     0,   247,  3505,     0,   248,
     249,     0,     0,     0,     0,     0,     0,   250,   251,     0,
     252,     0,     0,   253,     0,   254,   255,     0,     0,     0,
       0,     0,  -240,     0,     0,     0,   256,   257,   258,   259,
     260,   261,     0,   262,   263,   264,   265,   266,   267,   268,
     269,   270,     0,   271,   272,   273,   274,     0,   275,   276,
     277,     0,     0,     0,   278,   279,   280,   281,   282,     0,
       0,   283,   284,     0,     0,   285,     0,   286,     0,   287,
       0,     0,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,     0,   297,   298,   299,   300,     0,     0,
       0,     0,   302,     0,     0,     0,     0,   303,   304,   305,
       0,   306,   307,  3506,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   309,     0,   311,     0,   313,   314,
     315,     0,   316,   317,   318,     0,   319,     0,   320,     0,
       0,     0,   322,   323,     0,   324,     0,   325,   326,     0,
     327,   328,   329,     0,     0,     0,     0,     0,     0,     0,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
       0,   339,     0,     0,   341,     0,   343,  -240,     0,   344,
       0,     0,   346,     0,     0,   348,   349,  3507,     0,     0,
       0,   351,     0,   352,   353,     0,   354,   355,   356,     0,
     358,     0,   359,     0,     0,     0,     0,   361,   362,   363,
       0,     0,   364,     0,     0,     0,   365,     0,   367,     0,
       0,   369,     0,   371,     0,     0,     0,     0,     0,     0,
     372,   373,     0,   374,     0,     0,   375,     0,     0,     0,
     377,   378,     0,     0,     0,   380,     0,   381,   382,   383,
     384,   385,     0,     0,     0,   386,   387,     0,   388,   389,
       0,   390,   391,     0,     0,   392,   393,   394,   395,   396,
       0,     0,     0,   397,     0,     0,   398,     0,   399,     0,
       0,     0,   401,   402,   403,     0,   404,   405,   406,   407,
       0,     0,     0,     0,     0,     0,     0,     0,   410,     0,
       0,  3941,     0,     0,     0,   412,   413,     0,     0,     0,
       0,     0,     0,     0,   414,     0,     0,   415,     0,     0,
     416,   417,   418,   419,     0,     0,  -240,     0,   420,     0,
     421,     0,     0,     0,     0,   423,     0,     0,     0,   135,
    3508,   136,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   142,     0,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   150,     0,   151,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,   160,     0,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
       0,   169,   170,     0,   171,   172,   173,   174,   175,   176,
       0,     0,   177,     0,     0,   178,     0,   179,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,   182,   183,     0,     0,   184,     0,     0,     0,
       0,   185,     0,   186,  1797,     0,     0,     0,     0,   187,
       0,   188,     0,     0,     0,     0,     0,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,     0,   199,     0,     0,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,     0,     0,   211,     0,   212,   213,
       0,     0,   214,     0,     0,   215,   216,   217,  1798,     0,
     218,     0,     0,     0,     0,   219,   220,     0,     0,   221,
       0,   222,     0,     0,     0,     0,     0,     0,   223,   224,
       0,     0,   225,   226,     0,     0,   227,     0,     0,     0,
       0,     0,   228,   229,     0,   230,  1799,     0,   231,     0,
       0,     0,   232,   233,   234,   235,     0,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,     0,   240,   241,
       0,     0,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,     0,   246,     0,     0,     0,
     247,     0,     0,   248,   249,     0,     0,     0,     0,     0,
       0,   250,   251,     0,   252,     0,     0,   253,     0,   254,
     255,     0,     0,     0,  1800,     0,     0,     0,     0,     0,
     256,   257,   258,   259,   260,   261,     0,   262,   263,   264,
     265,   266,   267,   268,   269,   270,     0,   271,   272,   273,
     274,     0,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   281,   282,     0,     0,   283,   284,     0,     0,   285,
       0,   286,     0,   287,     0,     0,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,   800,   801,     0,   301,   302,     0,     0,  1801,
       0,   303,   304,   305,     0,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,     0,
     319,     0,   320,     0,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   327,   328,   329,     0,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,     0,     0,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,   353,     0,
     354,   355,   356,   357,   358,     0,   359,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
    4161,  4132,  4162,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,     0,     0,   379,   380,
       0,   381,   382,   383,   384,   385,     0,     0,     0,   386,
     387,     0,   388,   389,     0,   390,   391,     0,     0,   392,
     393,   394,   395,   396,     0,     0,     0,   397,     0,     0,
     398,     0,   399,     0,     0,   400,   401,   402,   403,  1802,
     404,   405,   406,   407,     0,     0,   408,   409,     0,     0,
       0,     0,   410,     0,     0,   411,     0,     0,     0,   412,
     413,     0,     0,     0,     0,     0,     0,     0,   414,     0,
       0,   415,     0,     0,   416,   417,   418,   419,     0,     0,
       0,     0,   420,     0,   421,   422,     0,     0,   135,   423,
     136,   137,   138,   139,   140,     0,     0,     0,     0,     0,
     141,     0,     0,   142,     0,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,     0,   151,     0,  2579,   152,
       0,     0,     0,   153,     0,     0,   154,   155,     0,   156,
       0,   157,   158,     0,     0,   159,     0,   160,     0,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,     0,
     169,   170,     0,   171,   172,   173,   174,   175,   176,     0,
       0,   177,     0,     0,   178,     0,   179,     0,     0,     0,
       0,     0,     0,   180,     0,     0,     0,     0,     0,     0,
     181,   182,   183,     0,     0,   184,     0,     0,     0,     0,
     185,     0,   186,     0,     0,     0,     0,  2580,   187,     0,
     188,     0,     0,     0,     0,     0,   189,     0,   190,   191,
     192,   193,   194,     0,     0,     0,   195,     0,     0,   196,
     197,   198,     0,     0,     0,   199,     0,     0,     0,   200,
     201,   202,   203,   204,  1994,     0,   205,     0,   206,   207,
     208,   209,   210,     0,     0,   211,     0,   212,   213,     0,
       0,   214,     0,     0,   215,   216,   217,     0,     0,   218,
       0,     0,     0,     0,   219,   220,     0,     0,   221,     0,
     222,     0,     0,     0,     0,     0,     0,   223,   224,     0,
       0,   225,   226,     0,     0,   227,     0,     0,     0,     0,
       0,   228,   229,     0,   230,     0,     0,   231,     0,     0,
       0,   232,   233,   234,   235,     0,     0,   236,   237,     0,
       0,   238,     0,   239,     0,     0,     0,   240,   241,     0,
       0,     0,   242,     0,     0,   243,   244,     0,     0,     0,
       0,     0,     0,   245,     0,   246,     0,     0,     0,   247,
       0,     0,   248,   249,   628,     0,     0,     0,     0,     0,
     250,   251,     0,   252,     0,     0,   253,     0,   254,   255,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   256,
     257,   258,   259,   260,   261,     0,   262,   263,   264,   265,
     266,   267,   268,   269,   270,     0,   271,   272,   273,   274,
       0,   275,   276,   277,     0,     0,     0,   278,   279,   280,
     281,   282,     0,     0,   283,   284,     0,     0,   285,     0,
     286,     0,   287,     0,     0,   288,   289,   290,   291,   292,
     293,   294,     0,     0,   295,   296,     0,   297,   298,   299,
     300,     0,     0,     0,   301,   302,     0,     0,     0,     0,
     303,   304,   305,     0,   306,   307,   308,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,     0,   319,
       0,   320,     0,     0,   321,   322,   323,     0,   324,     0,
     325,   326,     0,   327,   328,   329,     0,     0,     0,   330,
       0,     0,     0,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,     0,   339,   340,     0,   341,   342,   343,
       0,     0,   344,     0,   345,   346,   347,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,   353,     0,   354,
     355,   356,   357,   358,     0,   359,   360,     0,     0,     0,
     361,   362,   363,     0,  1995,   364,     0,     0,     0,   365,
     366,   367,   368,     0,   369,   370,   371,     0,     0,     0,
       0,     0,     0,   372,   373,     0,   374,     0,     0,   375,
       0,     0,   376,   377,   378,     0,     0,   379,   380,     0,
     381,   382,   383,   384,   385,     0,     0,     0,   386,   387,
       0,   388,   389,     0,   390,   391,     0,   132,   392,   393,
     394,   395,   396,     0,     0,     0,   397,     0,     0,   398,
       0,   399,     0,     0,   400,   401,   402,   403,     0,   404,
     405,   406,   407,     0,     0,   408,   409,     0,     0,     0,
       0,   410,     0,     0,   411,     0,     0,     0,   412,   413,
       0,     0,     0,     0,     0,     0,     0,   414,     0,     0,
     415,     0,     0,   416,   417,   418,   419,     0,     0,     0,
       0,   420,     0,   421,   422,     0,     0,   135,   423,   136,
     137,   138,   139,   140,     0,     0,     0,     0,     0,   141,
       0,     0,   142,     0,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   150,     0,   151,     0,  2589,   152,     0,
       0,     0,   153,     0,     0,   154,   155,     0,   156,     0,
     157,   158,     0,     0,   159,     0,   160,     0,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,     0,   169,
     170,     0,   171,   172,   173,   174,   175,   176,     0,     0,
     177,     0,     0,   178,     0,   179,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
     182,   183,     0,     0,   184,     0,     0,     0,     0,   185,
       0,   186,     0,     0,     0,     0,  2590,   187,     0,   188,
       0,     0,     0,     0,     0,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,   195,     0,     0,   196,   197,
     198,     0,     0,     0,   199,     0,     0,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,   206,   207,   208,
     209,   210,     0,     0,   211,     0,   212,   213,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,   218,     0,
       0,     0,     0,   219,   220,     0,     0,   221,     0,   222,
       0,     0,     0,     0,     0,     0,   223,   224,     0,     0,
     225,   226,     0,     0,   227,     0,     0,     0,     0,     0,
     228,   229,     0,   230,     0,     0,   231,     0,     0,     0,
     232,   233,   234,   235,     0,     0,   236,   237,     0,     0,
     238,     0,   239,     0,     0,     0,   240,   241,     0,     0,
       0,   242,     0,     0,   243,   244,     0,     0,     0,     0,
       0,     0,   245,     0,   246,     0,     0,     0,   247,     0,
       0,   248,   249,   628,     0,     0,     0,     0,     0,   250,
     251,     0,   252,     0,     0,   253,     0,   254,   255,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   256,   257,
     258,   259,   260,   261,     0,   262,   263,   264,   265,   266,
     267,   268,   269,   270,     0,   271,   272,   273,   274,     0,
     275,   276,   277,     0,     0,     0,   278,   279,   280,   281,
     282,     0,     0,   283,   284,     0,     0,   285,     0,   286,
       0,   287,     0,     0,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   297,   298,   299,   300,
       0,     0,     0,   301,   302,     0,     0,     0,     0,   303,
     304,   305,     0,   306,   307,   308,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,     0,   319,     0,
     320,     0,     0,   321,   322,   323,     0,   324,     0,   325,
     326,     0,   327,   328,   329,     0,     0,     0,   330,     0,
       0,     0,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,     0,   339,   340,     0,   341,   342,   343,     0,
       0,   344,     0,   345,   346,   347,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,   353,     0,   354,   355,
     356,   357,   358,     0,   359,   360,     0,     0,     0,   361,
     362,   363,     0,     0,   364,     0,     0,     0,   365,   366,
     367,   368,     0,   369,   370,   371,     0,     0,     0,     0,
       0,     0,   372,   373,     0,   374,     0,     0,   375,     0,
       0,   376,   377,   378,     0,     0,   379,   380,     0,   381,
     382,   383,   384,   385,     0,     0,     0,   386,   387,     0,
     388,   389,     0,   390,   391,     0,   132,   392,   393,   394,
     395,   396,     0,     0,     0,   397,     0,     0,   398,     0,
     399,     0,     0,   400,   401,   402,   403,     0,   404,   405,
     406,   407,     0,     0,   408,   409,     0,     0,     0,     0,
     410,     0,     0,   411,     0,     0,     0,   412,   413,     0,
       0,     0,     0,     0,     0,     0,   414,     0,     0,   415,
       0,     0,   416,   417,   418,   419,     0,     0,     0,     0,
     420,     0,   421,   422,     0,     0,   135,   423,   136,   137,
     138,   139,   140,     0,     0,     0,     0,     0,   141,     0,
       0,   142,     0,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   150,     0,   151,     0,  2579,   152,     0,     0,
       0,   153,     0,     0,   154,   155,     0,   156,     0,   157,
     158,     0,     0,   159,     0,   160,     0,   161,   162,     0,
     163,     0,   164,   165,   166,   167,   168,     0,   169,   170,
       0,   171,   172,   173,   174,   175,   176,     0,     0,   177,
       0,     0,   178,     0,   179,     0,     0,     0,     0,     0,
       0,   180,     0,     0,     0,     0,     0,     0,   181,   182,
     183,     0,     0,   184,     0,     0,     0,     0,   185,     0,
     186,     0,     0,     0,     0,  2580,   187,     0,   188,     0,
       0,     0,     0,     0,   189,     0,   190,   191,   192,   193,
     194,     0,     0,     0,   195,     0,     0,   196,   197,   198,
       0,     0,     0,   199,     0,     0,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,   206,   207,   208,   209,
     210,     0,     0,   211,     0,   212,   213,     0,     0,   214,
       0,     0,   215,   216,   217,     0,     0,   218,     0,     0,
       0,     0,   219,   220,     0,     0,   221,     0,   222,     0,
       0,     0,     0,     0,     0,   223,   224,     0,     0,   225,
     226,     0,     0,   227,     0,     0,     0,     0,     0,   228,
     229,     0,   230,     0,     0,   231,     0,     0,     0,   232,
     233,   234,   235,     0,     0,   236,   237,     0,     0,   238,
       0,   239,     0,     0,     0,   240,   241,     0,     0,     0,
     242,     0,     0,   243,   244,     0,     0,     0,     0,     0,
       0,   245,     0,   246,     0,     0,     0,   247,     0,     0,
     248,   249,   628,     0,     0,     0,     0,     0,   250,   251,
       0,   252,     0,     0,   253,     0,   254,   255,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   256,   257,   258,
     259,   260,   261,     0,   262,   263,   264,   265,   266,   267,
     268,   269,   270,     0,   271,   272,   273,   274,     0,   275,
     276,   277,     0,     0,     0,   278,   279,   280,   281,   282,
       0,     0,   283,   284,     0,     0,   285,     0,   286,     0,
     287,     0,     0,   288,   289,   290,   291,   292,   293,   294,
       0,     0,   295,   296,     0,   297,   298,   299,   300,     0,
       0,     0,   301,   302,     0,     0,     0,     0,   303,   304,
     305,     0,   306,   307,   308,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,     0,   319,     0,   320,
       0,     0,   321,   322,   323,     0,   324,     0,   325,   326,
       0,   327,   328,   329,     0,     0,     0,   330,     0,     0,
       0,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,     0,   339,   340,     0,   341,   342,   343,     0,     0,
     344,     0,   345,   346,   347,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,   353,     0,   354,   355,   356,
     357,   358,     0,   359,   360,     0,     0,     0,   361,   362,
     363,     0,     0,   364,     0,     0,     0,   365,   366,   367,
     368,     0,   369,   370,   371,     0,     0,     0,     0,     0,
       0,   372,   373,     0,   374,     0,     0,   375,     0,     0,
     376,   377,   378,     0,     0,   379,   380,     0,   381,   382,
     383,   384,   385,     0,     0,     0,   386,   387,     0,   388,
     389,     0,   390,   391,     0,   132,   392,   393,   394,   395,
     396,     0,     0,     0,   397,     0,     0,   398,     0,   399,
       0,     0,   400,   401,   402,   403,     0,   404,   405,   406,
     407,     0,     0,   408,   409,     0,     0,     0,     0,   410,
       0,     0,   411,     0,     0,     0,   412,   413,     0,     0,
       0,     0,     0,     0,     0,   414,     0,     0,   415,     0,
       0,   416,   417,   418,   419,     0,     0,     0,     0,   420,
       0,   421,   422,     0,     0,   135,   423,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   150,     0,   151,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,     0,   156,     0,   157,   158,
       0,     0,   159,     0,   160,     0,   161,   162,     0,   163,
       0,   164,   165,   166,   167,   168,     0,   169,   170,     0,
     171,   172,   173,   174,   175,   176,     0,     0,   177,     0,
       0,   178,     0,   179,     0,     0,     0,     0,     0,     0,
     180,     0,   808,     0,     0,     0,     0,   181,   182,   183,
       0,     0,   184,     0,     0,     0,     0,   185,     0,   186,
       0,     0,     0,     0,     0,   187,     0,   188,     0,     0,
       0,     0,     0,   189,     0,   190,   191,   192,   193,   194,
       0,     0,     0,   195,     0,     0,   196,   197,   198,     0,
       0,     0,   199,     0,     0,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,   206,   207,   208,   209,   210,
       0,     0,   211,     0,   212,   213,     0,     0,   214,     0,
       0,   215,   216,   217,     0,     0,   218,     0,     0,     0,
       0,   219,   220,     0,     0,   221,     0,   222,     0,     0,
       0,     0,     0,     0,   223,   224,     0,     0,   225,   226,
       0,     0,   227,     0,     0,     0,     0,     0,   228,   229,
       0,   230,     0,     0,   231,     0,     0,     0,   232,   233,
     234,   235,     0,     0,   236,   237,     0,     0,   238,     0,
     239,     0,     0,     0,   240,   241,     0,     0,     0,   242,
       0,     0,   243,   244,     0,     0,     0,     0,     0,     0,
     245,     0,   246,     0,     0,     0,   247,     0,     0,   248,
     249,   628,     0,     0,     0,     0,     0,   250,   251,     0,
     252,     0,     0,   253,     0,   254,   255,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   256,   257,   258,   259,
     260,   261,     0,   262,   263,   264,   265,   266,   267,   268,
     269,   270,     0,   271,   272,   273,   274,     0,   275,   276,
     277,     0,     0,     0,   278,   279,   280,   281,   282,     0,
       0,   283,   284,     0,     0,   285,     0,   286,     0,   287,
       0,     0,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,     0,   297,   298,   299,   300,     0,     0,
       0,   301,   302,     0,     0,     0,     0,   303,   304,   305,
       0,   306,   307,   308,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   318,     0,   319,     0,   320,     0,
       0,   321,   322,   323,     0,   324,     0,   325,   326,     0,
     327,   328,   329,     0,     0,     0,   330,     0,     0,     0,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
       0,   339,   340,     0,   341,   342,   343,     0,     0,   344,
       0,   345,   346,   347,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,   353,     0,   354,   355,   356,   357,
     358,     0,   359,   360,     0,     0,     0,   361,   362,   363,
       0,     0,   364,     0,     0,     0,   365,   366,   367,   368,
       0,   369,   370,   371,     0,     0,     0,     0,     0,     0,
     372,   373,     0,   374,     0,     0,   375,     0,     0,   376,
     377,   378,     0,     0,   379,   380,     0,   381,   382,   383,
     384,   385,     0,     0,     0,   386,   387,     0,   388,   389,
       0,   390,   391,     0,   132,   392,   393,   394,   395,   396,
       0,     0,     0,   397,     0,     0,   398,     0,   399,     0,
       0,   400,   401,   402,   403,     0,   404,   405,   406,   407,
       0,     0,   408,   409,     0,     0,     0,     0,   410,     0,
       0,   411,     0,     0,     0,   412,   413,     0,     0,     0,
       0,     0,     0,     0,   414,     0,     0,   415,     0,     0,
     416,   417,   418,   419,     0,     0,     0,     0,   420,     0,
     421,   422,     0,     0,   135,   423,   136,   137,   138,   139,
     140,  1133,     0,     0,     0,     0,   141,     0,     0,   142,
       0,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,     0,   151,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,   160,     0,   161,   162,     0,   163,     0,
     164,   165,   166,   167,   168,     0,   169,   170,     0,   171,
     172,   173,   174,   175,   176,     0,     0,   177,     0,     0,
     178,     0,   179,     0,     0,     0,     0,     0,     0,   180,
       0,     0,     0,     0,     0,     0,   181,   182,   183,     0,
       0,   184,     0,     0,     0,     0,   185,     0,   186,     0,
       0,     0,     0,     0,   187,     0,   188,     0,     0,     0,
       0,     0,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,   197,   198,     0,     0,
       0,   199,     0,     0,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,   206,   207,   208,   209,   210,     0,
       0,   211,     0,   212,   213,     0,     0,   214,     0,     0,
     215,   216,   217,     0,     0,   218,     0,     0,     0,     0,
     219,   220,     0,     0,   221,     0,   222,     0,     0,     0,
       0,     0,     0,   223,   224,     0,     0,   225,   226,     0,
       0,   227,     0,     0,     0,     0,     0,   228,   229,     0,
     230,     0,     0,   231,     0,     0,     0,   232,   233,   234,
     235,     0,     0,   236,   237,     0,     0,   238,     0,   239,
       0,     0,     0,   240,   241,     0,     0,     0,   242,     0,
       0,   243,   244,     0,     0,     0,     0,     0,     0,   245,
       0,   246,     0,     0,     0,   247,     0,     0,   248,   249,
     628,     0,     0,     0,     0,     0,   250,   251,     0,   252,
       0,     0,   253,     0,   254,   255,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   256,   257,   258,   259,   260,
     261,     0,   262,   263,   264,   265,   266,   267,   268,   269,
     270,     0,   271,   272,   273,   274,     0,   275,   276,   277,
       0,     0,     0,   278,   279,   280,   281,   282,     0,     0,
     283,   284,     0,     0,   285,     0,   286,     0,   287,     0,
       0,   288,   289,   290,   291,   292,   293,   294,     0,     0,
     295,   296,     0,   297,   298,   299,   300,     0,     0,     0,
     301,   302,     0,     0,     0,     0,   303,   304,   305,     0,
     306,   307,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,     0,   319,     0,   320,     0,     0,
     321,   322,   323,     0,   324,     0,   325,   326,     0,   327,
     328,   329,     0,     0,     0,   330,     0,     0,     0,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,     0,
     339,   340,     0,   341,   342,   343,     0,     0,   344,     0,
     345,   346,   347,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,   353,     0,   354,   355,   356,   357,   358,
       0,   359,   360,     0,     0,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,     0,
     369,   370,   371,     0,     0,     0,     0,     0,     0,   372,
     373,     0,   374,     0,     0,   375,     0,     0,   376,   377,
     378,     0,     0,   379,   380,     0,   381,   382,   383,   384,
     385,     0,     0,     0,   386,   387,     0,   388,   389,     0,
     390,   391,     0,   132,   392,   393,   394,   395,   396,     0,
       0,     0,   397,     0,     0,   398,     0,   399,     0,     0,
     400,   401,   402,   403,     0,   404,   405,   406,   407,     0,
       0,   408,   409,     0,     0,     0,     0,   410,     0,     0,
     411,     0,     0,     0,   412,   413,     0,     0,     0,     0,
       0,     0,     0,   414,     0,     0,   415,     0,     0,   416,
     417,   418,   419,     0,     0,     0,     0,   420,     0,   421,
     422,     0,     0,   135,   423,   136,   137,   138,   139,   140,
       0,     0,     0,     0,     0,   141,     0,     0,   142,     0,
     143,     0,   144,   145,   146,   147,   148,   149,     0,   150,
       0,   151,     0,     0,   152,   745,     0,     0,   153,     0,
       0,   154,   155,     0,   156,     0,   157,   158,     0,     0,
     159,     0,   160,     0,   161,   162,     0,   163,     0,   164,
     165,   166,   167,   168,     0,   169,   170,     0,   171,   172,
     173,   174,   175,   176,     0,     0,   177,     0,     0,   178,
       0,   179,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,   182,   183,     0,     0,
     184,     0,     0,     0,     0,   185,     0,   186,     0,     0,
       0,     0,     0,   187,     0,   188,     0,     0,     0,     0,
       0,   189,     0,   190,   191,   192,   193,   194,     0,     0,
       0,   195,     0,     0,   196,   197,   198,     0,     0,     0,
     199,     0,     0,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,   206,   207,   208,   209,   210,     0,     0,
     211,     0,   212,   213,     0,     0,   214,     0,     0,   215,
     216,   217,     0,     0,   218,     0,     0,     0,     0,   219,
     220,     0,     0,   221,     0,   222,     0,     0,     0,     0,
       0,     0,   223,   224,     0,     0,   225,   226,     0,     0,
     227,     0,     0,     0,     0,     0,   228,   229,     0,   230,
     746,     0,   231,     0,     0,     0,   232,   233,   234,   235,
       0,     0,   236,   237,     0,     0,   238,     0,   239,     0,
       0,     0,   240,   241,     0,     0,     0,   242,     0,     0,
     243,   244,     0,     0,     0,     0,     0,     0,   245,     0,
     246,     0,     0,     0,   247,     0,     0,   248,   249,     0,
       0,     0,     0,     0,     0,   250,   251,     0,   252,     0,
       0,   253,     0,   254,   255,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   256,   257,   258,   259,   260,   261,
       0,   262,   263,   264,   265,   266,   267,   268,   269,   270,
       0,   271,   272,   273,   274,     0,   275,   276,   277,     0,
       0,     0,   278,   279,   280,   281,   282,     0,     0,   283,
     284,     0,     0,   285,     0,   286,     0,   287,     0,     0,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,   297,   298,   299,   300,     0,     0,     0,   301,
     302,     0,     0,     0,     0,   303,   304,   305,     0,   306,
     307,   308,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   318,     0,   319,     0,   320,     0,     0,   321,
     322,   323,     0,   324,     0,   325,   326,     0,   327,   328,
     329,     0,     0,     0,   330,     0,     0,     0,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,     0,   339,
     340,     0,   341,   342,   343,     0,     0,   344,     0,   345,
     346,   347,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,   353,     0,   354,   355,   356,   357,   358,     0,
     359,   360,     0,     0,     0,   361,   362,   363,     0,     0,
     364,     0,     0,     0,   365,   366,   367,   368,     0,   369,
     370,   371,     0,     0,     0,     0,     0,     0,   372,   373,
       0,   374,     0,     0,   375,     0,     0,   376,   377,   378,
       0,     0,   379,   380,     0,   381,   382,   383,   384,   385,
       0,     0,     0,   386,   387,     0,   388,   389,     0,   390,
     391,     0,   747,   392,   393,   394,   395,   396,     0,     0,
       0,   397,     0,     0,   398,     0,   399,     0,     0,   400,
     401,   402,   403,     0,   404,   405,   406,   407,     0,     0,
     408,   409,     0,     0,     0,     0,   410,     0,     0,   411,
       0,     0,     0,   412,   413,     0,     0,     0,     0,     0,
       0,     0,   414,     0,     0,   415,     0,     0,   416,   417,
     418,   419,     0,     0,     0,     0,   420,     0,   421,   422,
       0,     0,   135,   423,   136,   137,   138,   139,   140,     0,
       0,     0,     0,     0,   141,     0,     0,   142,     0,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,     0,
     151,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,     0,   156,     0,   157,   158,     0,     0,   159,
       0,   160,     0,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,     0,   169,   170,     0,   171,   172,   173,
     174,   175,   176,     0,     0,   177,     0,     0,   178,     0,
     179,     0,     0,     0,     0,     0,     0,   180,     0,  1213,
       0,     0,     0,     0,   181,   182,   183,     0,     0,   184,
       0,     0,     0,     0,   185,     0,   186,     0,     0,     0,
       0,     0,   187,     0,   188,     0,     0,     0,     0,     0,
     189,     0,   190,   191,   192,   193,   194,     0,     0,     0,
     195,     0,     0,   196,   197,   198,     0,     0,     0,   199,
       0,     0,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,   206,   207,   208,   209,   210,     0,     0,   211,
       0,   212,   213,     0,     0,   214,     0,     0,   215,   216,
     217,     0,     0,   218,     0,     0,     0,     0,   219,   220,
       0,     0,   221,     0,   222,     0,     0,     0,     0,     0,
       0,   223,   224,     0,     0,   225,   226,     0,     0,   227,
       0,     0,     0,     0,     0,   228,   229,     0,   230,     0,
       0,   231,     0,     0,     0,   232,   233,   234,   235,     0,
       0,   236,   237,     0,     0,   238,     0,   239,     0,     0,
       0,   240,   241,     0,     0,     0,   242,     0,     0,   243,
     244,     0,     0,     0,     0,     0,     0,   245,     0,   246,
       0,     0,     0,   247,     0,     0,   248,   249,   628,     0,
       0,     0,     0,     0,   250,   251,     0,   252,     0,     0,
     253,     0,   254,   255,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   256,   257,   258,   259,   260,   261,     0,
     262,   263,   264,   265,   266,   267,   268,   269,   270,     0,
     271,   272,   273,   274,     0,   275,   276,   277,     0,     0,
       0,   278,   279,   280,   281,   282,     0,     0,   283,   284,
       0,     0,   285,     0,   286,     0,   287,     0,     0,   288,
     289,   290,   291,   292,   293,   294,     0,     0,   295,   296,
       0,   297,   298,   299,   300,     0,     0,     0,   301,   302,
       0,     0,     0,     0,   303,   304,   305,     0,   306,   307,
     308,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,     0,   319,     0,   320,     0,     0,   321,   322,
     323,     0,   324,     0,   325,   326,     0,   327,   328,   329,
       0,     0,     0,   330,     0,     0,     0,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,     0,   339,   340,
       0,   341,   342,   343,     0,     0,   344,     0,   345,   346,
     347,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,   353,     0,   354,   355,   356,   357,   358,     0,   359,
     360,     0,     0,     0,   361,   362,   363,     0,     0,   364,
       0,     0,     0,   365,   366,   367,   368,     0,   369,   370,
     371,     0,     0,     0,     0,     0,     0,   372,   373,     0,
     374,     0,     0,   375,     0,     0,   376,   377,   378,     0,
       0,   379,   380,     0,   381,   382,   383,   384,   385,     0,
       0,     0,   386,   387,     0,   388,   389,     0,   390,   391,
       0,   132,   392,   393,   394,   395,   396,     0,     0,     0,
     397,     0,     0,   398,     0,   399,     0,     0,   400,   401,
     402,   403,     0,   404,   405,   406,   407,     0,     0,   408,
     409,     0,     0,     0,     0,   410,     0,     0,   411,     0,
       0,     0,   412,   413,     0,     0,     0,     0,     0,     0,
       0,   414,     0,     0,   415,     0,     0,   416,   417,   418,
     419,     0,     0,     0,     0,   420,     0,   421,   422,     0,
       0,   135,   423,   136,   137,   138,   139,   140,     0,     0,
       0,     0,     0,   141,     0,     0,   142,     0,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   150,     0,   151,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,     0,   156,     0,   157,   158,     0,     0,   159,     0,
     160,     0,   161,   162,     0,   163,     0,   164,   165,   166,
     167,   168,     0,   169,   170,     0,   171,   172,   173,   174,
     175,   176,     0,     0,   177,     0,     0,   178,     0,   179,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,   182,   183,     0,     0,   184,     0,
       0,     0,     0,   185,     0,   186,     0,     0,     0,     0,
    2627,   187,     0,   188,     0,     0,     0,     0,     0,   189,
       0,   190,   191,   192,   193,   194,     0,     0,     0,   195,
       0,     0,   196,   197,   198,     0,     0,     0,   199,     0,
       0,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,   206,   207,   208,   209,   210,     0,     0,   211,     0,
     212,   213,     0,     0,   214,     0,     0,   215,   216,   217,
       0,     0,   218,     0,     0,     0,     0,   219,   220,     0,
       0,   221,     0,   222,     0,     0,     0,     0,     0,     0,
     223,   224,     0,     0,   225,   226,     0,     0,   227,     0,
       0,     0,     0,     0,   228,   229,     0,   230,     0,     0,
     231,     0,     0,     0,   232,   233,   234,   235,     0,     0,
     236,   237,     0,     0,   238,     0,   239,     0,     0,     0,
     240,   241,     0,     0,     0,   242,     0,     0,   243,   244,
       0,     0,     0,     0,     0,     0,   245,     0,   246,     0,
       0,     0,   247,     0,     0,   248,   249,   628,     0,     0,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
       0,   254,   255,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   256,   257,   258,   259,   260,   261,     0,   262,
     263,   264,   265,   266,   267,   268,   269,   270,     0,   271,
     272,   273,   274,     0,   275,   276,   277,     0,     0,     0,
     278,   279,   280,   281,   282,     0,     0,   283,   284,     0,
       0,   285,     0,   286,     0,   287,     0,     0,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,     0,
     297,   298,   299,   300,     0,     0,     0,   301,   302,     0,
       0,     0,     0,   303,   304,   305,     0,   306,   307,   308,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     318,     0,   319,     0,   320,     0,     0,   321,   322,   323,
       0,   324,     0,   325,   326,     0,   327,   328,   329,     0,
       0,     0,   330,     0,     0,     0,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,     0,   339,   340,     0,
     341,   342,   343,     0,     0,   344,     0,   345,   346,   347,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
     353,     0,   354,   355,   356,   357,   358,     0,   359,   360,
       0,     0,     0,   361,   362,   363,     0,     0,   364,     0,
       0,     0,   365,   366,   367,   368,     0,   369,   370,   371,
       0,     0,     0,     0,     0,     0,   372,   373,     0,   374,
       0,     0,   375,     0,     0,   376,   377,   378,     0,     0,
     379,   380,     0,   381,   382,   383,   384,   385,     0,     0,
       0,   386,   387,     0,   388,   389,     0,   390,   391,     0,
     132,   392,   393,   394,   395,   396,     0,     0,     0,   397,
       0,     0,   398,     0,   399,     0,     0,   400,   401,   402,
     403,     0,   404,   405,   406,   407,     0,     0,   408,   409,
       0,     0,     0,     0,   410,     0,     0,   411,     0,     0,
       0,   412,   413,     0,     0,     0,     0,     0,     0,     0,
     414,     0,     0,   415,     0,     0,   416,   417,   418,   419,
       0,     0,     0,     0,   420,     0,   421,   422,     0,     0,
     135,   423,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,     0,   151,     0,
    2579,   152,     0,     0,     0,   153,     0,     0,   154,   155,
       0,   156,     0,   157,   158,     0,     0,   159,     0,   160,
       0,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,     0,   169,   170,     0,   171,   172,   173,   174,   175,
     176,     0,     0,   177,     0,     0,   178,     0,   179,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,   182,   183,     0,     0,   184,     0,     0,
       0,     0,   185,     0,   186,     0,     0,     0,     0,     0,
     187,     0,   188,     0,     0,     0,     0,     0,   189,     0,
     190,   191,   192,   193,   194,     0,     0,     0,   195,     0,
       0,   196,   197,   198,     0,     0,     0,   199,     0,     0,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
     206,   207,   208,   209,   210,     0,     0,   211,     0,   212,
     213,     0,     0,   214,     0,     0,   215,   216,   217,     0,
       0,   218,     0,     0,     0,     0,   219,   220,     0,     0,
     221,     0,   222,     0,     0,     0,     0,     0,     0,   223,
     224,     0,     0,   225,   226,     0,     0,   227,     0,     0,
       0,     0,     0,   228,   229,     0,   230,     0,     0,   231,
       0,     0,     0,   232,   233,   234,   235,     0,     0,   236,
     237,     0,     0,   238,     0,   239,     0,     0,     0,   240,
     241,     0,     0,     0,   242,     0,     0,   243,   244,     0,
       0,     0,     0,     0,     0,   245,     0,   246,     0,     0,
       0,   247,     0,     0,   248,   249,   628,     0,     0,     0,
       0,     0,   250,   251,     0,   252,     0,     0,   253,     0,
     254,   255,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   256,   257,   258,   259,   260,   261,     0,   262,   263,
     264,   265,   266,   267,   268,   269,   270,     0,   271,   272,
     273,   274,     0,   275,   276,   277,     0,     0,     0,   278,
     279,   280,   281,   282,     0,     0,   283,   284,     0,     0,
     285,     0,   286,     0,   287,     0,     0,   288,   289,   290,
     291,   292,   293,   294,     0,     0,   295,   296,     0,   297,
     298,   299,   300,     0,     0,     0,   301,   302,     0,     0,
       0,     0,   303,   304,   305,     0,   306,   307,   308,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
       0,   319,     0,   320,     0,     0,   321,   322,   323,     0,
     324,     0,   325,   326,     0,   327,   328,   329,     0,     0,
       0,   330,     0,     0,     0,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,     0,   339,   340,     0,   341,
     342,   343,     0,     0,   344,     0,   345,   346,   347,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,   353,
       0,   354,   355,   356,   357,   358,     0,   359,   360,     0,
       0,     0,   361,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,     0,   369,   370,   371,     0,
       0,     0,     0,     0,     0,   372,   373,     0,   374,     0,
       0,   375,     0,     0,   376,   377,   378,     0,     0,   379,
     380,     0,   381,   382,   383,   384,   385,     0,     0,     0,
     386,   387,     0,   388,   389,     0,   390,   391,     0,   132,
     392,   393,   394,   395,   396,     0,     0,     0,   397,     0,
       0,   398,     0,   399,     0,     0,   400,   401,   402,   403,
       0,   404,   405,   406,   407,     0,     0,   408,   409,     0,
       0,     0,     0,   410,     0,     0,   411,     0,     0,     0,
     412,   413,     0,     0,     0,     0,     0,     0,     0,   414,
       0,     0,   415,     0,     0,   416,   417,   418,   419,     0,
       0,     0,     0,   420,     0,   421,   422,     0,     0,   135,
     423,   136,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   142,     0,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   150,     0,   151,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,   160,     0,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
       0,   169,   170,     0,   171,   172,   173,   174,   175,   176,
       0,     0,   177,     0,     0,   178,     0,   179,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,   182,   183,     0,     0,   184,     0,     0,     0,
       0,   185,     0,   186,     0,     0,     0,     0,     0,   187,
       0,   188,     0,     0,     0,     0,     0,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,     0,   199,     0,     0,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,     0,     0,   211,     0,   212,   213,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
     218,     0,     0,     0,     0,   219,   220,     0,     0,   221,
       0,   222,     0,     0,     0,     0,     0,     0,   223,   224,
       0,     0,   225,   226,     0,     0,   227,     0,     0,     0,
       0,     0,   228,   229,     0,   230,     0,     0,   231,     0,
       0,     0,   232,   233,   234,   235,     0,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,     0,   240,   241,
       0,     0,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,     0,   246,     0,     0,     0,
     247,     0,     0,   248,   249,   628,     0,     0,     0,     0,
       0,   250,   251,     0,   252,     0,     0,   253,     0,   254,
     255,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     256,   257,   258,   259,   260,   261,     0,   262,   263,   264,
     265,   266,   267,   268,   269,   270,     0,   271,   272,   273,
     274,     0,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   281,   282,     0,     0,   283,   284,     0,     0,   285,
       0,   286,     0,   287,     0,     0,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,     0,     0,     0,   301,   302,     0,     0,     0,
       0,   303,   304,   305,     0,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,     0,
     319,     0,   320,     0,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   327,   328,   329,     0,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,     0,     0,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,   353,     0,
     354,   355,   356,   357,   358,     0,   359,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,     0,     0,   379,   380,
       0,   381,   382,   383,   384,   385,     0,     0,     0,   386,
     387,     0,   388,   389,     0,   390,   391,     0,   132,   392,
     393,   394,   395,   396,     0,     0,     0,   397,     0,     0,
     398,     0,   399,     0,     0,   400,   401,   402,   403,     0,
     404,   405,   406,   407,     0,     0,   408,   409,     0,     0,
       0,     0,   410,     0,     0,   411,     0,     0,     0,   412,
     413,     0,     0,     0,     0,     0,     0,     0,   414,     0,
       0,   415,     0,     0,   416,   417,   418,   419,     0,     0,
       0,     0,   420,     0,   421,   422,     0,     0,   135,   423,
     136,   137,   138,   139,   140,     0,     0,     0,     0,     0,
     141,  2555,     0,   142,     0,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,     0,   151,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,     0,   156,
       0,   157,   158,     0,     0,   159,     0,   160,     0,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,     0,
     169,   170,     0,   171,   172,   173,   174,   175,   176,     0,
       0,   177,     0,     0,   178,     0,   179,     0,     0,     0,
       0,     0,     0,   180,     0,     0,     0,     0,     0,     0,
     181,   182,   183,     0,     0,   184,     0,     0,     0,     0,
     185,     0,   186,     0,     0,     0,     0,     0,   187,     0,
     188,     0,     0,     0,     0,     0,   189,     0,   190,   191,
     192,   193,   194,     0,     0,     0,   195,     0,     0,   196,
     197,   198,     0,     0,     0,   199,     0,     0,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,   206,   207,
     208,   209,   210,     0,     0,   211,     0,   212,   213,     0,
       0,   214,     0,     0,   215,   216,   217,     0,     0,   218,
       0,     0,     0,     0,   219,   220,     0,     0,   221,     0,
     222,     0,     0,     0,     0,     0,     0,   223,   224,     0,
       0,   225,   226,     0,     0,   227,     0,     0,     0,     0,
       0,   228,   229,     0,   230,     0,     0,   231,     0,     0,
       0,   232,   233,   234,   235,     0,     0,   236,   237,     0,
       0,   238,     0,   239,     0,     0,     0,   240,   241,     0,
       0,     0,   242,     0,     0,   243,   244,     0,     0,     0,
       0,     0,     0,   245,     0,   246,     0,     0,     0,   247,
       0,     0,   248,   249,     0,     0,     0,     0,     0,     0,
     250,   251,     0,   252,     0,     0,   253,     0,   254,   255,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   256,
     257,   258,   259,   260,   261,     0,   262,   263,   264,   265,
     266,   267,   268,   269,   270,     0,   271,   272,   273,   274,
       0,   275,   276,   277,     0,     0,     0,   278,   279,   280,
     281,   282,     0,     0,   283,   284,     0,     0,   285,     0,
     286,     0,   287,     0,     0,   288,   289,   290,   291,   292,
     293,   294,     0,     0,   295,   296,     0,   297,   298,   299,
     300,     0,     0,     0,   301,   302,     0,     0,     0,     0,
     303,   304,   305,     0,   306,   307,   308,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,     0,   319,
       0,   320,     0,     0,   321,   322,   323,     0,   324,     0,
     325,   326,     0,   327,   328,   329,     0,     0,     0,   330,
       0,     0,     0,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,     0,   339,   340,     0,   341,   342,   343,
       0,     0,   344,     0,   345,   346,   347,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,   353,     0,   354,
     355,   356,   357,   358,     0,   359,   360,     0,     0,     0,
     361,   362,   363,     0,     0,   364,     0,     0,     0,   365,
     366,   367,   368,     0,   369,   370,   371,     0,     0,     0,
       0,     0,     0,   372,   373,     0,   374,     0,     0,   375,
       0,     0,   376,   377,   378,     0,     0,   379,   380,     0,
     381,   382,   383,   384,   385,     0,     0,     0,   386,   387,
       0,   388,   389,     0,   390,   391,     0,   132,   392,   393,
     394,   395,   396,     0,     0,     0,   397,     0,     0,   398,
       0,   399,     0,     0,   400,   401,   402,   403,     0,   404,
     405,   406,   407,     0,     0,   408,   409,     0,     0,     0,
       0,   410,     0,     0,   411,     0,     0,     0,   412,   413,
       0,     0,     0,     0,     0,     0,     0,   414,     0,     0,
     415,     0,     0,   416,   417,   418,   419,     0,     0,     0,
       0,   420,     0,   421,   422,     0,     0,   135,   423,   136,
     137,   138,   139,   140,     0,     0,     0,     0,     0,   141,
       0,     0,   142,     0,   143,     0,   144,   145,   146,   147,
     148,   149,     0,   150,     0,   151,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,     0,   156,     0,
     157,   158,     0,     0,   159,     0,   160,     0,   161,   162,
       0,   163,     0,   164,   165,   166,   167,   168,     0,   169,
     170,     0,   171,   172,   173,   174,   175,   176,     0,     0,
     177,     0,     0,   178,     0,   179,  4025,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
     182,   183,     0,     0,   184,     0,     0,     0,     0,   185,
       0,   186,     0,     0,     0,     0,     0,   187,     0,   188,
       0,     0,     0,     0,     0,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,   195,     0,     0,   196,   197,
     198,     0,     0,     0,   199,     0,     0,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,   206,   207,   208,
     209,   210,     0,  4026,   211,     0,   212,   213,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,   218,     0,
       0,     0,     0,   219,   220,     0,     0,   221,     0,   222,
       0,     0,     0,     0,     0,     0,   223,   224,     0,     0,
     225,   226,     0,     0,   227,     0,     0,     0,     0,     0,
     228,   229,     0,   230,     0,     0,   231,     0,     0,     0,
     232,   233,   234,   235,     0,     0,   236,   237,     0,     0,
     238,     0,   239,     0,     0,     0,   240,   241,     0,     0,
       0,   242,     0,     0,   243,   244,     0,     0,     0,     0,
       0,     0,   245,     0,   246,     0,     0,     0,   247,     0,
       0,   248,   249,     0,     0,     0,     0,     0,     0,   250,
     251,     0,   252,     0,     0,   253,     0,   254,   255,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   256,   257,
     258,   259,   260,   261,     0,   262,   263,   264,   265,   266,
     267,   268,   269,   270,     0,   271,   272,   273,   274,     0,
     275,   276,   277,     0,     0,     0,   278,   279,   280,   281,
     282,     0,     0,   283,   284,     0,     0,   285,     0,   286,
       0,   287,     0,     0,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   297,   298,   299,   300,
       0,     0,     0,   301,   302,     0,     0,     0,     0,   303,
     304,   305,     0,   306,   307,   308,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,     0,   319,     0,
     320,     0,     0,   321,   322,   323,     0,   324,     0,   325,
     326,     0,   327,   328,   329,     0,     0,     0,   330,     0,
       0,     0,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,     0,   339,   340,     0,   341,   342,   343,     0,
       0,   344,     0,   345,   346,   347,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,   353,     0,   354,   355,
     356,   357,   358,     0,   359,   360,     0,     0,     0,   361,
     362,   363,     0,     0,   364,     0,     0,     0,   365,   366,
     367,   368,     0,   369,   370,   371,     0,     0,     0,     0,
       0,     0,   372,   373,     0,   374,     0,     0,   375,     0,
       0,   376,   377,   378,     0,     0,   379,   380,     0,   381,
     382,   383,   384,   385,     0,     0,     0,   386,   387,     0,
     388,   389,     0,   390,   391,     0,     0,   392,   393,   394,
     395,   396,     0,     0,     0,   397,     0,     0,   398,     0,
     399,     0,     0,   400,   401,   402,   403,     0,   404,   405,
     406,   407,     0,     0,   408,   409,     0,     0,     0,     0,
     410,     0,     0,   411,     0,     0,     0,   412,   413,     0,
       0,     0,     0,     0,     0,     0,   414,     0,     0,   415,
       0,     0,   416,   417,   418,   419,     0,     0,     0,     0,
     420,     0,   421,   422,     0,     0,   135,   423,   136,   137,
     138,   139,   140,     0,     0,     0,     0,     0,   141,     0,
       0,   142,     0,   143,     0,   144,   145,   146,   147,   148,
     149,     0,   150,     0,   151,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,     0,   156,     0,   157,
     158,     0,     0,   159,     0,   160,     0,   161,   162,     0,
     163,     0,   164,   165,   166,   167,   168,     0,   169,   170,
       0,   171,   172,   173,   174,   175,   176,     0,     0,   177,
       0,     0,   178,     0,   179,     0,     0,     0,     0,     0,
       0,   180,     0,     0,     0,     0,     0,     0,   181,   182,
     183,     0,     0,   184,     0,     0,     0,     0,   185,     0,
     186,     0,     0,     0,     0,     0,   187,     0,   188,     0,
       0,     0,     0,     0,   189,     0,   190,   191,   192,   193,
     194,     0,     0,     0,   195,     0,     0,   196,   197,   198,
       0,     0,     0,   199,     0,     0,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,   206,   207,   208,   209,
     210,     0,     0,   211,     0,   212,   213,     0,     0,   214,
       0,     0,   215,   216,   217,     0,     0,   218,     0,     0,
       0,     0,   219,   220,   827,     0,   221,     0,   222,     0,
       0,     0,     0,     0,     0,   223,   224,     0,     0,   225,
     226,     0,     0,   227,     0,     0,     0,     0,     0,   228,
     229,     0,   230,     0,     0,   231,     0,     0,     0,   232,
     233,   234,   235,     0,     0,   236,   237,     0,     0,   238,
       0,   239,     0,     0,     0,   240,   241,     0,     0,     0,
     242,     0,     0,   243,   244,     0,     0,     0,     0,     0,
       0,   245,     0,   246,     0,     0,     0,   247,     0,     0,
     248,   249,     0,     0,     0,     0,     0,     0,   250,   251,
       0,   252,     0,     0,   253,     0,   254,   255,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   256,   257,   258,
     259,   260,   261,     0,   262,   263,   264,   265,   266,   267,
     268,   269,   270,     0,   271,   272,   273,   274,     0,   275,
     276,   277,     0,     0,     0,   278,   279,   280,   281,   282,
       0,     0,   283,   284,     0,     0,   285,     0,   286,     0,
     287,     0,     0,   288,   289,   290,   291,   292,   293,   294,
       0,     0,   295,   296,     0,   297,   298,   299,   300,     0,
       0,     0,   301,   302,     0,     0,     0,     0,   303,   304,
     305,     0,   306,   307,   308,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,     0,   319,     0,   320,
       0,     0,   321,   322,   323,     0,   324,     0,   325,   326,
       0,   327,   328,   329,     0,     0,     0,   330,     0,     0,
       0,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,     0,   339,   340,     0,   341,   342,   343,     0,     0,
     344,     0,   345,   346,   347,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,   353,     0,   354,   355,   356,
     357,   358,     0,   359,   360,     0,     0,     0,   361,   362,
     363,     0,     0,   364,     0,     0,     0,   365,   366,   367,
     368,     0,   369,   370,   371,     0,     0,     0,     0,     0,
       0,   372,   373,     0,   374,     0,     0,   375,     0,     0,
     376,   377,   378,     0,     0,   379,   380,     0,   381,   382,
     383,   384,   385,     0,     0,     0,   386,   387,     0,   388,
     389,     0,   390,   391,     0,     0,   392,   393,   394,   395,
     396,     0,     0,     0,   397,     0,     0,   398,     0,   399,
       0,     0,   400,   401,   402,   403,     0,   404,   405,   406,
     407,     0,     0,   408,   409,     0,     0,     0,     0,   410,
       0,     0,   411,     0,     0,     0,   412,   413,     0,     0,
       0,     0,     0,     0,     0,   414,     0,     0,   415,     0,
       0,   416,   417,   418,   419,     0,     0,     0,     0,   420,
       0,   421,   422,     0,     0,   135,   423,   136,   137,   138,
     139,   140,     0,     0,     0,     0,     0,   141,     0,     0,
     142,     0,   143,     0,   144,   145,   146,   147,   148,   149,
       0,   150,     0,   151,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,     0,   156,     0,   157,   158,
       0,     0,   159,     0,   160,     0,   161,   162,     0,   163,
       0,   164,   165,   166,   167,   168,     0,   169,   170,     0,
     171,   172,   173,   174,   175,   176,     0,     0,   177,     0,
       0,   178,     0,   179,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,   182,   183,
       0,     0,   184,     0,     0,     0,     0,   185,     0,   186,
       0,     0,     0,     0,  1220,   187,     0,   188,     0,     0,
       0,     0,     0,   189,     0,   190,   191,   192,   193,   194,
       0,     0,     0,   195,     0,     0,   196,   197,   198,     0,
       0,     0,   199,     0,     0,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,   206,   207,   208,   209,   210,
       0,     0,   211,     0,   212,   213,     0,     0,   214,     0,
       0,   215,   216,   217,     0,     0,   218,     0,     0,     0,
       0,   219,   220,     0,     0,   221,     0,   222,     0,     0,
       0,     0,     0,     0,   223,   224,     0,     0,   225,   226,
       0,     0,   227,     0,     0,     0,     0,     0,   228,   229,
       0,   230,     0,     0,   231,     0,     0,     0,   232,   233,
     234,   235,     0,     0,   236,   237,     0,     0,   238,     0,
     239,     0,     0,     0,   240,   241,     0,     0,     0,   242,
       0,     0,   243,   244,     0,     0,     0,     0,     0,     0,
     245,     0,   246,     0,     0,     0,   247,     0,     0,   248,
     249,     0,     0,     0,     0,     0,     0,   250,   251,     0,
     252,     0,     0,   253,     0,   254,   255,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   256,   257,   258,   259,
     260,   261,     0,   262,   263,   264,   265,   266,   267,   268,
     269,   270,     0,   271,   272,   273,   274,     0,   275,   276,
     277,     0,     0,     0,   278,   279,   280,   281,   282,     0,
       0,   283,   284,     0,     0,   285,     0,   286,     0,   287,
       0,     0,   288,   289,   290,   291,   292,   293,   294,     0,
       0,   295,   296,     0,   297,   298,   299,   300,     0,     0,
       0,   301,   302,     0,     0,     0,     0,   303,   304,   305,
       0,   306,   307,   308,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   318,     0,   319,     0,   320,     0,
       0,   321,   322,   323,     0,   324,     0,   325,   326,     0,
     327,   328,   329,     0,     0,     0,   330,     0,     0,     0,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
       0,   339,   340,     0,   341,   342,   343,     0,     0,   344,
       0,   345,   346,   347,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,   353,     0,   354,   355,   356,   357,
     358,     0,   359,   360,     0,     0,     0,   361,   362,   363,
       0,     0,   364,     0,     0,     0,   365,   366,   367,   368,
       0,   369,   370,   371,     0,     0,     0,     0,     0,     0,
     372,   373,     0,   374,     0,     0,   375,     0,     0,   376,
     377,   378,     0,     0,   379,   380,     0,   381,   382,   383,
     384,   385,     0,     0,     0,   386,   387,     0,   388,   389,
       0,   390,   391,     0,     0,   392,   393,   394,   395,   396,
       0,     0,     0,   397,     0,     0,   398,     0,   399,     0,
       0,   400,   401,   402,   403,     0,   404,   405,   406,   407,
       0,     0,   408,   409,     0,     0,     0,     0,   410,     0,
       0,   411,     0,     0,     0,   412,   413,     0,     0,     0,
       0,     0,     0,     0,   414,     0,     0,   415,     0,     0,
     416,   417,   418,   419,     0,     0,     0,     0,   420,     0,
     421,   422,     0,     0,   135,   423,   136,   137,   138,   139,
     140,     0,     0,     0,     0,     0,   141,     0,     0,   142,
       0,   143,     0,   144,   145,   146,   147,   148,   149,     0,
     150,     0,   151,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,     0,   156,     0,   157,   158,     0,
       0,   159,     0,   160,     0,   161,   162,     0,   163,     0,
     164,   165,   166,   167,   168,     0,   169,   170,     0,   171,
     172,   173,   174,   175,   176,     0,     0,   177,     0,     0,
     178,     0,   179,     0,     0,     0,     0,     0,     0,   180,
       0,     0,     0,     0,     0,     0,   181,   182,   183,     0,
       0,   184,     0,     0,     0,     0,   185,     0,   186,     0,
       0,     0,     0,  2087,   187,     0,   188,     0,     0,     0,
       0,     0,   189,     0,   190,   191,   192,   193,   194,     0,
       0,     0,   195,     0,     0,   196,   197,   198,     0,     0,
       0,   199,     0,     0,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,   206,   207,   208,   209,   210,     0,
       0,   211,     0,   212,   213,     0,     0,   214,     0,     0,
     215,   216,   217,     0,     0,   218,     0,     0,     0,     0,
     219,   220,     0,     0,   221,     0,   222,     0,     0,     0,
       0,     0,     0,   223,   224,     0,     0,   225,   226,     0,
       0,   227,     0,     0,     0,     0,     0,   228,   229,     0,
     230,     0,     0,   231,     0,     0,     0,   232,   233,   234,
     235,     0,     0,   236,   237,     0,     0,   238,     0,   239,
       0,     0,     0,   240,   241,     0,     0,     0,   242,     0,
       0,   243,   244,     0,     0,     0,     0,     0,     0,   245,
       0,   246,     0,     0,     0,   247,     0,     0,   248,   249,
       0,     0,     0,     0,     0,     0,   250,   251,     0,   252,
       0,     0,   253,     0,   254,   255,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   256,   257,   258,   259,   260,
     261,     0,   262,   263,   264,   265,   266,   267,   268,   269,
     270,     0,   271,   272,   273,   274,     0,   275,   276,   277,
       0,     0,     0,   278,   279,   280,   281,   282,     0,     0,
     283,   284,     0,     0,   285,     0,   286,     0,   287,     0,
       0,   288,   289,   290,   291,   292,   293,   294,     0,     0,
     295,   296,     0,   297,   298,   299,   300,     0,     0,     0,
     301,   302,     0,     0,     0,     0,   303,   304,   305,     0,
     306,   307,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,     0,   319,     0,   320,     0,     0,
     321,   322,   323,     0,   324,     0,   325,   326,     0,   327,
     328,   329,     0,     0,     0,   330,     0,     0,     0,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,     0,
     339,   340,     0,   341,   342,   343,     0,     0,   344,     0,
     345,   346,   347,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,   353,     0,   354,   355,   356,   357,   358,
       0,   359,   360,     0,     0,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,     0,
     369,   370,   371,     0,     0,     0,     0,     0,     0,   372,
     373,     0,   374,     0,     0,   375,     0,     0,   376,   377,
     378,     0,     0,   379,   380,     0,   381,   382,   383,   384,
     385,     0,     0,     0,   386,   387,     0,   388,   389,     0,
     390,   391,     0,     0,   392,   393,   394,   395,   396,     0,
       0,     0,   397,     0,     0,  2088,     0,   399,     0,     0,
     400,   401,   402,   403,     0,   404,   405,   406,   407,     0,
       0,   408,   409,     0,     0,     0,     0,   410,     0,     0,
     411,     0,     0,     0,   412,   413,     0,     0,     0,     0,
       0,     0,     0,   414,     0,     0,   415,     0,     0,   416,
     417,   418,   419,     0,     0,     0,     0,   420,     0,   421,
     422,     0,     0,   135,   423,   136,   137,   138,   139,   140,
       0,     0,     0,     0,     0,   141,     0,     0,   142,     0,
     143,     0,   144,   145,   146,   147,   148,   149,     0,   150,
       0,   151,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,     0,   156,     0,   157,   158,     0,     0,
     159,     0,   160,     0,   161,   162,     0,   163,     0,   164,
     165,   166,   167,   168,     0,   169,   170,     0,   171,   172,
     173,   174,   175,   176,     0,     0,   177,     0,     0,   178,
       0,   179,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,   182,   183,     0,     0,
     184,     0,     0,     0,     0,   185,     0,   186,     0,     0,
       0,     0,     0,   187,     0,   188,     0,     0,     0,     0,
       0,   189,     0,   190,   191,   192,   193,   194,     0,     0,
       0,   195,     0,     0,   196,   197,   198,     0,     0,     0,
     199,     0,     0,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,   206,   207,   208,   209,   210,     0,     0,
     211,     0,   212,   213,     0,     0,   214,     0,     0,   215,
     216,   217,     0,     0,   218,     0,     0,     0,     0,   219,
     220,     0,     0,   221,     0,   222,     0,     0,     0,     0,
       0,     0,   223,   224,     0,     0,   225,   226,     0,     0,
     227,     0,     0,     0,     0,     0,   228,   229,     0,   230,
       0,     0,   231,     0,     0,     0,   232,   233,   234,   235,
       0,     0,   236,   237,     0,     0,   238,     0,   239,     0,
       0,     0,   240,   241,     0,     0,     0,   242,     0,     0,
     243,   244,     0,     0,     0,     0,     0,     0,   245,     0,
     246,     0,     0,     0,   247,     0,     0,   248,   249,     0,
       0,     0,     0,     0,     0,   250,   251,     0,   252,     0,
       0,   253,     0,   254,   255,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   256,   257,   258,   259,   260,   261,
       0,   262,   263,   264,   265,   266,   267,   268,   269,   270,
       0,   271,   272,   273,   274,     0,   275,   276,   277,     0,
       0,     0,   278,   279,   280,   281,   282,     0,     0,   283,
     284,     0,     0,   285,     0,   286,     0,   287,     0,     0,
     288,   289,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,   297,   298,   299,   300,     0,     0,     0,   301,
     302,     0,     0,     0,     0,   303,   304,   305,     0,   306,
     307,   308,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   318,     0,   319,     0,   320,     0,     0,   321,
     322,   323,  2251,   324,     0,   325,   326,     0,   327,   328,
     329,     0,     0,     0,   330,     0,     0,     0,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,     0,   339,
     340,     0,   341,   342,   343,     0,     0,   344,     0,   345,
     346,   347,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,   353,     0,   354,   355,   356,   357,   358,     0,
     359,   360,     0,     0,     0,   361,   362,   363,     0,     0,
     364,     0,     0,     0,   365,   366,   367,   368,     0,   369,
     370,   371,     0,     0,     0,     0,     0,     0,   372,   373,
       0,   374,     0,     0,   375,     0,     0,   376,   377,   378,
       0,     0,   379,   380,     0,   381,   382,   383,   384,   385,
       0,     0,     0,   386,   387,     0,   388,   389,     0,   390,
     391,     0,     0,   392,   393,   394,   395,   396,     0,     0,
       0,   397,     0,     0,   398,     0,   399,     0,     0,   400,
     401,   402,   403,     0,   404,   405,   406,   407,     0,     0,
     408,   409,     0,     0,     0,     0,   410,     0,     0,   411,
       0,     0,     0,   412,   413,     0,     0,     0,     0,     0,
       0,     0,   414,     0,     0,   415,     0,     0,   416,   417,
     418,   419,     0,     0,     0,     0,   420,     0,   421,   422,
       0,     0,   135,   423,   136,   137,   138,   139,   140,  2673,
       0,     0,     0,     0,   141,     0,     0,   142,     0,   143,
       0,   144,   145,   146,   147,   148,   149,     0,   150,     0,
     151,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,     0,   156,     0,   157,   158,     0,     0,   159,
       0,   160,     0,   161,   162,     0,   163,     0,   164,   165,
     166,   167,   168,     0,   169,   170,     0,   171,   172,   173,
     174,   175,   176,     0,     0,   177,     0,     0,   178,     0,
     179,     0,     0,     0,     0,     0,     0,   180,     0,     0,
       0,     0,     0,     0,   181,   182,   183,     0,     0,   184,
       0,     0,     0,     0,   185,     0,   186,     0,     0,     0,
       0,     0,   187,     0,   188,     0,     0,     0,     0,     0,
     189,     0,   190,   191,   192,   193,   194,     0,     0,     0,
     195,     0,     0,   196,   197,   198,     0,     0,     0,   199,
       0,     0,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,   206,   207,   208,   209,   210,     0,     0,   211,
       0,   212,   213,     0,     0,   214,     0,     0,   215,   216,
     217,     0,     0,   218,     0,     0,     0,     0,   219,   220,
       0,     0,   221,     0,   222,     0,     0,     0,     0,     0,
       0,   223,   224,     0,     0,   225,   226,     0,     0,   227,
       0,     0,     0,     0,     0,   228,   229,     0,   230,     0,
       0,   231,     0,     0,     0,   232,   233,   234,   235,     0,
       0,   236,   237,     0,     0,   238,     0,   239,     0,     0,
       0,   240,   241,     0,     0,     0,   242,     0,     0,   243,
     244,     0,     0,     0,     0,     0,     0,   245,     0,   246,
       0,     0,     0,   247,     0,     0,   248,   249,     0,     0,
       0,     0,     0,     0,   250,   251,     0,   252,     0,     0,
     253,     0,   254,   255,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   256,   257,   258,   259,   260,   261,     0,
     262,   263,   264,   265,   266,   267,   268,   269,   270,     0,
     271,   272,   273,   274,     0,   275,   276,   277,     0,     0,
       0,   278,   279,   280,   281,   282,     0,     0,   283,   284,
       0,     0,   285,     0,   286,     0,   287,     0,     0,   288,
     289,   290,   291,   292,   293,   294,     0,     0,   295,   296,
       0,   297,   298,   299,   300,     0,     0,     0,   301,   302,
       0,     0,     0,     0,   303,   304,   305,     0,   306,   307,
     308,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,     0,   319,     0,   320,     0,     0,   321,   322,
     323,     0,   324,     0,   325,   326,     0,   327,   328,   329,
       0,     0,     0,   330,     0,     0,     0,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,     0,   339,   340,
       0,   341,   342,   343,     0,     0,   344,     0,   345,   346,
     347,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,   353,     0,   354,   355,   356,   357,   358,     0,   359,
     360,     0,     0,     0,   361,   362,   363,     0,     0,   364,
       0,     0,     0,   365,   366,   367,   368,     0,   369,   370,
     371,     0,     0,     0,     0,     0,     0,   372,   373,     0,
     374,     0,     0,   375,     0,     0,   376,   377,   378,     0,
       0,   379,   380,     0,   381,   382,   383,   384,   385,     0,
       0,     0,   386,   387,     0,   388,   389,     0,   390,   391,
       0,     0,   392,   393,   394,   395,   396,     0,     0,     0,
     397,     0,     0,   398,     0,   399,     0,     0,   400,   401,
     402,   403,     0,   404,   405,   406,   407,     0,     0,   408,
     409,     0,     0,     0,     0,   410,     0,     0,   411,     0,
       0,     0,   412,   413,     0,     0,     0,     0,     0,     0,
       0,   414,     0,     0,   415,     0,     0,   416,   417,   418,
     419,     0,     0,     0,     0,   420,     0,   421,   422,     0,
       0,   135,   423,   136,   137,   138,   139,   140,     0,     0,
       0,     0,     0,   141,     0,     0,   142,     0,   143,     0,
     144,   145,   146,   147,   148,   149,     0,   150,     0,   151,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,     0,   156,     0,   157,   158,     0,     0,   159,     0,
     160,     0,   161,   162,     0,   163,     0,   164,   165,   166,
     167,   168,     0,   169,   170,     0,   171,   172,   173,   174,
     175,   176,     0,     0,   177,     0,     0,   178,     0,   179,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,   182,   183,     0,     0,   184,     0,
       0,     0,     0,   185,     0,   186,     0,     0,     0,     0,
       0,   187,     0,   188,     0,     0,     0,     0,     0,   189,
       0,   190,   191,   192,   193,   194,     0,     0,     0,   195,
       0,     0,   196,   197,   198,     0,     0,     0,   199,     0,
       0,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,   206,   207,   208,   209,   210,     0,     0,   211,     0,
     212,   213,     0,     0,   214,     0,     0,   215,   216,   217,
       0,     0,   218,     0,     0,     0,     0,   219,   220,     0,
       0,   221,     0,   222,     0,     0,     0,     0,     0,     0,
     223,   224,     0,     0,   225,   226,     0,     0,   227,     0,
       0,     0,     0,     0,   228,   229,     0,   230,     0,     0,
     231,     0,     0,     0,   232,   233,   234,   235,     0,     0,
     236,   237,     0,     0,   238,     0,   239,     0,     0,     0,
     240,   241,     0,     0,     0,   242,     0,     0,   243,   244,
       0,     0,     0,     0,     0,     0,   245,     0,   246,     0,
       0,     0,   247,     0,     0,   248,   249,     0,     0,     0,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
       0,   254,   255,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   256,   257,   258,   259,   260,   261,     0,   262,
     263,   264,   265,   266,   267,   268,   269,   270,     0,   271,
     272,   273,   274,     0,   275,   276,   277,     0,     0,     0,
     278,   279,   280,   281,   282,     0,     0,   283,   284,     0,
       0,   285,     0,   286,     0,   287,     0,     0,   288,   289,
     290,   291,   292,   293,   294,     0,     0,   295,   296,     0,
     297,   298,   299,   300,     0,     0,     0,   301,   302,     0,
       0,     0,     0,   303,   304,   305,     0,   306,   307,   308,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     318,     0,   319,     0,   320,     0,     0,   321,   322,   323,
       0,   324,     0,   325,   326,     0,   327,   328,   329,     0,
       0,     0,   330,     0,     0,     0,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,     0,   339,   340,     0,
     341,   342,   343,     0,     0,   344,     0,   345,   346,   347,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
     353,     0,   354,   355,   356,   357,   358,     0,   359,   360,
       0,     0,     0,   361,   362,   363,     0,     0,   364,     0,
       0,     0,   365,   366,   367,   368,     0,   369,   370,   371,
       0,     0,     0,     0,     0,     0,   372,   373,     0,   374,
       0,     0,   375,     0,     0,   376,   377,   378,     0,     0,
     379,   380,     0,   381,   382,   383,   384,   385,     0,     0,
       0,   386,   387,     0,   388,   389,     0,   390,   391,     0,
     132,   392,   393,   394,   395,   396,     0,     0,     0,   397,
       0,     0,   398,     0,   399,     0,     0,   400,   401,   402,
     403,     0,   404,   405,   406,   407,     0,     0,   408,   409,
       0,     0,     0,     0,   410,     0,     0,   411,     0,     0,
       0,   412,   413,     0,     0,     0,     0,     0,     0,     0,
     414,     0,     0,   415,     0,     0,   416,   417,   418,   419,
       0,     0,     0,     0,   420,     0,   421,   422,     0,     0,
     135,   423,   136,   137,   138,   139,   140,     0,     0,     0,
       0,     0,   141,     0,     0,   142,     0,   143,     0,   144,
     145,   146,   147,   148,   149,     0,   150,     0,   151,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
       0,   156,     0,   157,   158,     0,     0,   159,     0,   160,
       0,   161,   162,     0,   163,     0,   164,   165,   166,   167,
     168,     0,   169,   170,     0,   171,   172,   173,   174,   175,
     176,     0,     0,   177,     0,     0,   178,     0,   179,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,   182,   183,     0,     0,   184,     0,     0,
       0,     0,   185,     0,   186,     0,     0,     0,     0,  2087,
     187,     0,   188,     0,     0,     0,     0,     0,   189,     0,
     190,   191,   192,   193,   194,     0,     0,     0,   195,     0,
       0,   196,   197,   198,     0,     0,     0,   199,     0,     0,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
     206,   207,   208,   209,   210,     0,     0,   211,     0,   212,
     213,     0,     0,   214,     0,     0,   215,   216,   217,     0,
       0,   218,     0,     0,     0,     0,   219,   220,     0,     0,
     221,     0,   222,     0,     0,     0,     0,     0,     0,   223,
     224,     0,     0,   225,   226,     0,     0,   227,     0,     0,
       0,     0,     0,   228,   229,     0,   230,     0,     0,   231,
       0,     0,     0,   232,   233,   234,   235,     0,     0,   236,
     237,     0,     0,   238,     0,   239,     0,     0,     0,   240,
     241,     0,     0,     0,   242,     0,     0,   243,   244,     0,
       0,     0,     0,     0,     0,   245,     0,   246,     0,     0,
       0,   247,     0,     0,   248,   249,     0,     0,     0,     0,
       0,     0,   250,   251,     0,   252,     0,     0,   253,     0,
     254,   255,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   256,   257,   258,   259,   260,   261,     0,   262,   263,
     264,   265,   266,   267,   268,   269,   270,     0,   271,   272,
     273,   274,     0,   275,   276,   277,     0,     0,     0,   278,
     279,   280,   281,   282,     0,     0,   283,   284,     0,     0,
     285,     0,   286,     0,   287,     0,     0,   288,   289,   290,
     291,   292,   293,   294,     0,     0,   295,   296,     0,   297,
     298,   299,   300,     0,     0,     0,   301,   302,     0,     0,
       0,     0,   303,   304,   305,     0,   306,   307,   308,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
       0,   319,     0,   320,     0,     0,   321,   322,   323,     0,
     324,     0,   325,   326,     0,   327,   328,   329,     0,     0,
       0,   330,     0,     0,     0,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,     0,   339,   340,     0,   341,
     342,   343,     0,     0,   344,     0,   345,   346,   347,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,   353,
       0,   354,   355,   356,   357,   358,     0,   359,   360,     0,
       0,     0,   361,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,     0,   369,   370,   371,     0,
       0,     0,     0,     0,     0,   372,   373,     0,   374,     0,
       0,   375,     0,     0,   376,   377,   378,     0,     0,   379,
     380,     0,   381,   382,   383,   384,   385,     0,     0,     0,
     386,   387,     0,   388,   389,     0,   390,   391,     0,     0,
     392,   393,   394,   395,   396,     0,     0,     0,   397,     0,
       0,   398,     0,   399,     0,     0,   400,   401,   402,   403,
       0,   404,   405,   406,   407,     0,     0,   408,   409,     0,
       0,     0,     0,   410,     0,     0,   411,     0,     0,     0,
     412,   413,     0,     0,     0,     0,     0,     0,     0,   414,
       0,     0,   415,     0,     0,   416,   417,   418,   419,     0,
       0,     0,     0,   420,     0,   421,   422,     0,     0,   135,
     423,   136,   137,   138,   139,   140,     0,     0,     0,     0,
       0,   141,     0,     0,   142,     0,   143,     0,   144,   145,
     146,   147,   148,   149,     0,   150,     0,   151,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,     0,
     156,     0,   157,   158,     0,     0,   159,     0,   160,     0,
     161,   162,     0,   163,     0,   164,   165,   166,   167,   168,
       0,   169,   170,     0,   171,   172,   173,   174,   175,   176,
       0,     0,   177,     0,     0,   178,     0,   179,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,   182,   183,     0,     0,   184,     0,     0,     0,
       0,   185,     0,   186,     0,     0,     0,     0,     0,   187,
       0,   188,     0,     0,     0,     0,     0,   189,     0,   190,
     191,   192,   193,   194,     0,     0,     0,   195,     0,     0,
     196,   197,   198,     0,     0,     0,   199,     0,     0,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,   206,
     207,   208,   209,   210,     0,     0,   211,     0,   212,   213,
       0,     0,   214,     0,     0,   215,   216,   217,     0,     0,
     218,     0,     0,     0,     0,   219,   220,     0,     0,   221,
       0,   222,     0,     0,     0,     0,     0,     0,   223,   224,
       0,     0,   225,   226,     0,     0,   227,     0,     0,     0,
       0,     0,   228,   229,     0,   230,     0,     0,   231,     0,
       0,     0,   232,   233,   234,   235,     0,     0,   236,   237,
       0,     0,   238,     0,   239,     0,     0,     0,   240,   241,
       0,     0,     0,   242,     0,     0,   243,   244,     0,     0,
       0,     0,     0,     0,   245,     0,   246,     0,     0,     0,
     247,     0,     0,   248,   249,     0,     0,     0,     0,     0,
       0,   250,   251,     0,   252,     0,     0,   253,     0,   254,
     255,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     256,   257,   258,   259,   260,   261,     0,   262,   263,   264,
     265,   266,   267,   268,   269,   270,     0,   271,   272,   273,
     274,     0,   275,   276,   277,     0,     0,     0,   278,   279,
     280,   281,   282,     0,     0,   283,   284,     0,     0,   285,
       0,   286,     0,   287,     0,     0,   288,   289,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,     0,     0,     0,   301,   302,     0,     0,     0,
       0,   303,   304,   305,     0,   306,   307,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,     0,
     319,     0,   320,     0,     0,   321,   322,   323,     0,   324,
       0,   325,   326,     0,   327,   328,   329,     0,     0,     0,
     330,     0,     0,     0,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,     0,   339,   340,     0,   341,   342,
     343,     0,     0,   344,     0,   345,   346,   347,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,   353,     0,
     354,   355,   356,   357,   358,     0,   359,   360,     0,     0,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,     0,   369,   370,   371,     0,     0,
       0,     0,     0,     0,   372,   373,     0,   374,     0,     0,
     375,     0,     0,   376,   377,   378,     0,     0,   379,   380,
       0,   381,   382,   383,   384,   385,     0,     0,     0,   386,
     387,     0,   388,   389,     0,   390,   391,     0,     0,   392,
     393,   394,   395,   396,     0,     0,     0,   397,     0,     0,
     398,     0,   399,     0,     0,   400,   401,   402,   403,     0,
     404,   405,   406,   407,     0,     0,   408,   409,     0,     0,
       0,     0,   410,     0,     0,   411,     0,     0,     0,   412,
     413,     0,     0,     0,     0,     0,     0,     0,   414,     0,
       0,   415,     0,     0,   416,   417,   418,   419,     0,     0,
       0,     0,   420,     0,   421,   422,     0,     0,   135,   423,
     136,   137,   138,   139,   140,     0,     0,     0,     0,     0,
     141,     0,     0,   142,     0,   143,     0,   144,   145,   146,
     147,   148,   149,     0,   150,     0,   151,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,     0,   156,
       0,   157,   158,     0,     0,   159,     0,   160,     0,   161,
     162,     0,   163,     0,   164,   165,   166,   167,   168,     0,
     169,   170,     0,   171,   172,   173,   174,   175,   176,     0,
       0,   177,     0,     0,   178,     0,   179,     0,     0,     0,
       0,     0,     0,   180,     0,     0,     0,     0,     0,     0,
     181,   182,   183,     0,     0,   184,     0,     0,     0,     0,
     185,     0,   186,     0,     0,     0,     0,     0,   187,     0,
     188,     0,     0,     0,     0,     0,   189,     0,   190,   191,
     192,   193,   194,     0,     0,     0,   195,     0,     0,   196,
     197,   198,     0,     0,     0,   199,     0,     0,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,   206,   207,
     208,   209,   210,     0,     0,   211,     0,   212,   213,     0,
       0,   214,     0,     0,   215,  1531,   217,     0,     0,   218,
       0,     0,     0,     0,   219,   220,     0,     0,   221,     0,
     222,     0,     0,     0,     0,     0,     0,   223,   224,     0,
       0,   225,   226,     0,     0,   227,     0,     0,     0,     0,
       0,   228,   229,     0,   230,     0,     0,   231,     0,     0,
       0,   232,   233,   234,   235,     0,     0,   236,   237,     0,
       0,   238,     0,   239,     0,     0,     0,   240,   241,     0,
       0,     0,   242,     0,     0,   243,   244,     0,     0,     0,
       0,     0,     0,   245,     0,   246,     0,     0,     0,   247,
       0,     0,   248,   249,     0,     0,     0,     0,     0,     0,
     250,   251,     0,   252,     0,     0,   253,     0,   254,   255,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   256,
     257,   258,   259,   260,   261,     0,   262,   263,   264,   265,
     266,   267,   268,   269,   270,     0,   271,   272,   273,   274,
       0,   275,   276,   277,     0,     0,     0,   278,   279,   280,
     281,   282,     0,     0,   283,   284,     0,     0,   285,     0,
     286,     0,   287,     0,     0,   288,   289,   290,   291,   292,
     293,   294,     0,     0,   295,   296,     0,   297,  1532,   299,
     300,     0,     0,     0,   301,   302,     0,     0,     0,     0,
     303,   304,   305,     0,   306,   307,   308,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,     0,   319,
       0,   320,     0,     0,   321,   322,   323,     0,   324,     0,
     325,   326,     0,   327,   328,   329,     0,     0,     0,   330,
       0,     0,     0,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,     0,   339,   340,     0,   341,   342,   343,
       0,     0,   344,     0,   345,   346,   347,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,   353,     0,   354,
     355,   356,   357,   358,     0,   359,   360,     0,     0,     0,
     361,   362,   363,     0,     0,   364,     0,     0,     0,   365,
     366,   367,   368,     0,   369,   370,   371,     0,     0,     0,
       0,     0,     0,   372,   373,     0,   374,     0,     0,   375,
       0,     0,   376,   377,   378,     0,     0,   379,   380,     0,
     381,   382,   383,   384,   385,     0,     0,     0,   386,   387,
       0,   388,   389,     0,   390,   391,     0,     0,   392,   393,
     394,   395,   396,     0,     0,     0,   397,     0,     0,   398,
       0,   399,     0,     0,   400,   401,   402,   403,     0,   404,
     405,   406,   407,     0,     0,   408,   409,     0,     0,     0,
       0,   410,     0,     0,   411,     0,     0,     0,   412,   413,
       0,     0,     0,     0,     0,     0,     0,   414,     0,     0,
     415,     0,     0,   416,   417,   418,   419,     0,     0,     0,
       0,   420,     0,   421,   422,     0,     0,   135,   423,   136,
     137,   138,   139,   140,     0,     0,     0,     0,     0,   141,
       0,     0,     0,     0,   143,     0,     0,   145,   146,   147,
     148,     0,     0,     0,     0,   151,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,     0,   156,     0,
       0,     0,     0,     0,   159,     0,   160,     0,   161,     0,
       0,     0,     0,   164,   165,     0,   167,   168,     0,   169,
     170,     0,     0,   172,     0,   174,   175,   176,     0,     0,
     177,     0,     0,   178,     0,     0,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
     182,   183,     0,     0,   184,     0,     0,     0,     0,   185,
       0,     0,     0,     0,     0,     0,     0,   187,     0,   188,
       0,     0,     0,     0,     0,   189,     0,   190,   191,   192,
     193,   194,     0,     0,     0,     0,     0,     0,   196,   197,
     198,     0,     0,     0,   199,     0,     0,     0,     0,   201,
     202,   203,   204,     0,     0,   205,     0,   206,   207,   208,
     209,     0,     0,     0,   211,     0,   212,   213,     0,     0,
     214,     0,     0,   215,   216,   217,     0,     0,     0,     0,
       0,     0,     0,   219,   220,     0,     0,   221,     0,   222,
       0,     0,     0,     0,     0,     0,   223,   224,     0,     0,
     225,   226,     0,     0,   227,     0,     0,     0,     0,     0,
       0,   229,     0,     0,     0,     0,   231,     0,     0,     0,
     232,   233,   234,   235,     0,     0,   236,   237,     0,     0,
     238,     0,   239,     0,     0,     0,   240,     0,     0,     0,
       0,   242,     0,     0,   243,   244,     0,     0,     0,     0,
       0,     0,     0,     0,   246,     0,     0,     0,   247,     0,
       0,   248,   249,     0,     0,     0,     0,     0,     0,   250,
     251,     0,   252,     0,     0,   253,     0,   254,   255,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   256,   257,
     258,   259,   260,   261,     0,   262,   263,   264,   265,   266,
     267,   268,   269,   270,     0,   271,   272,   273,   274,     0,
     275,   276,   277,     0,     0,     0,   278,   279,   280,   281,
     282,     0,     0,   283,   284,     0,     0,   285,     0,   286,
       0,   287,     0,     0,   288,   289,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   297,   298,   299,   300,
       0,     0,     0,     0,   302,     0,     0,     0,     0,   303,
     304,   305,     0,   306,   307,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   309,     0,   311,     0,
     313,   314,   315,     0,   316,   317,   318,     0,   319,     0,
     320,     0,     0,     0,   322,   323,     0,   324,     0,   325,
     326,     0,   327,   328,   329,     0,     0,     0,     0,     0,
       0,     0,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,     0,   339,     0,     0,   341,     0,   343,     0,
       0,   344,     0,     0,   346,     0,     0,   348,   349,     0,
       0,     0,     0,   351,     0,   352,   353,     0,   354,   355,
     356,     0,   358,     0,   359,     0,     0,     0,     0,   361,
     362,   363,     0,     0,   364,     0,     0,     0,   365,     0,
     367,     0,     0,   369,     0,   371,     0,     0,     0,     0,
       0,     0,   372,   373,     0,   374,     0,     0,   375,     0,
       0,     0,   377,   378,     0,     0,     0,   380,     0,   381,
     382,   383,   384,   385,     0,     0,     0,   386,   387,     0,
     388,   389,     0,   390,   391,     0,     0,   392,   393,   394,
     395,   396,     0,     0,     0,   397,     0,     0,   398,     0,
     399,     0,     0,     0,   401,   402,   403,     0,   404,   405,
     406,   407,     0,     0,     0,     0,     0,     0,     0,     0,
     410,     0,     0,   411,     0,     0,     0,   412,   413,     0,
       0,     0,     0,     0,     0,     0,   414,     0,     0,   415,
       0,     0,   416,   417,   418,   419,     0,     0,     0,     0,
     420,     0,   421,     0,     0,     0,     0,   423
};

static const short int yycheck[] =
{
       8,   499,   559,   512,   513,   514,   675,   516,   520,   518,
     761,  1294,    20,   499,    21,    23,   815,   816,   817,  1006,
    1217,  1386,   789,    30,    32,   854,   855,   856,  1997,    36,
    1014,  1422,  1070,   725,    42,   591,     6,  1136,  1422,   702,
    2090,  2091,  2092,  2097,  1332,    53,  2063,   838,  1187,  2027,
     920,   469,   589,  1442,  2548,   860,   699,   116,   117,  2604,
    1449,   120,   725,  2327,  2121,  1296,  1297,  1298,  1511,  2309,
    2334,  1679,  2129,  1212,  2131,    23,  2128,   870,  1309,  1438,
     555,   556,  1677,   726,  2302,    93,  2304,  1452,  1675,  1454,
    1677,  1680,   921,  1322,  1783,  1684,  3020,  1212,   654,  2106,
    2107,  1677,  2906,  1628,  2208,  2083,  1695,   115,   116,   117,
     674,  1572,   120,   121,  2292,  1704,  2189,   592,   947,  2292,
    2980,   506,  1652,  1653,  1460,  1461,   134,   435,  3512,     3,
    1835,   960,   961,   962,  1365,  1364,     3,  1368,    17,  2147,
    2194,    17,  3293,   948,    19,    93,   951,     3,     3,     3,
       3,    36,  1682,  1683,     3,  1685,    27,    52,  1688,  1689,
       3,    19,  1692,  2217,  2218,  1396,  1397,  1697,    58,    59,
    1401,  1701,  1702,  1703,    17,    17,  1706,  1764,  1708,   970,
     971,   972,  1788,  1547,  1714,  1151,   134,  1717,  1718,     3,
    1421,   666,  1423,  2142,  3285,  1161,    27,  1163,  1164,   990,
    3050,  2182,    72,  3053,    21,    19,  2169,  2306,  2189,  2162,
    2281,  2192,   184,  1301,  1302,  2196,  1304,   141,    21,    36,
      21,    32,  3072,    59,    62,    57,    66,  1583,  3078,  2210,
    2211,    31,    49,    36,  3503,    19,  3505,    66,  2219,    27,
    3301,    58,    59,   184,  2213,   727,    49,    38,    11,   154,
      75,  1289,   761,  1341,   229,    58,    59,    58,    59,    38,
     765,   115,   115,   241,   572,  1548,    52,  2236,  1356,   311,
     765,  3121,    64,  2541,   659,   181,  2745,   152,  2127,   150,
      79,  1642,    27,   701,    21,    61,  1374,  1375,  1376,   353,
    2666,  2183,   241,  2185,   152,    62,  2176,  1385,   455,    36,
     188,   263,    97,   364,   186,   359,    36,    61,   783,   184,
     137,  3400,    49,    36,   263,   317,    27,  3884,    67,    61,
     380,    58,    59,   360,     9,  1786,    71,  2647,  2648,    59,
     437,   443,   301,   165,   468,   116,   414,   169,   152,   264,
     136,   277,   116,  1330,   381,   184,   378,   381,  1545,   181,
     224,    20,   271,   165,   119,   119,   165,    71,   229,   224,
      71,  2535,   780,   525,   515,   184,   184,   559,   152,   545,
     100,   303,   515,   103,   117,   470,  3467,  3237,   353,   534,
    2913,   227,   112,   603,  1213,   184,    99,    63,    96,   420,
     610,   423,     9,    40,   184,   127,   579,   264,   229,   458,
     336,   439,   248,   578,   559,   150,   244,  3496,   264,   264,
    3214,   143,   455,   605,    31,   264,   132,   551,   456,  2739,
    2740,   166,   213,  2112,  1175,   179,   284,   984,   604,   361,
     605,   439,   527,   402,   213,   354,   307,   179,    47,   100,
     178,   229,   103,   605,   369,   453,   603,   337,   456,  2623,
     458,   120,  2985,   587,   605,   166,   487,   465,   570,   240,
    1743,   469,   540,   471,    12,  1748,   240,   475,   417,   234,
     241,  1754,   283,   481,  1757,  1012,   307,   244,   515,   227,
    3330,   515,   353,   315,   229,   284,   224,   996,   173,  3339,
     135,   381,  2511,  2512,  2513,   377,   603,  1140,   506,   507,
     248,   470,   561,    69,   152,  1148,    91,   346,   572,   397,
     348,   513,   241,   369,   227,   229,   524,  1501,   229,   307,
     369,   496,  1165,  1166,  1187,   584,   585,   475,   536,   588,
      81,  2550,  2551,  2552,    55,   543,   538,  4104,  2588,   547,
     435,   284,  1347,   603,  1019,   553,   373,   555,   556,   610,
     408,   605,   560,   561,   562,   429,   492,   565,   976,  2611,
     603,   603,   307,  1794,   429,   353,   574,  2745,   116,  2619,
     578,   403,  2745,   605,   152,   583,   584,   585,   301,   587,
     588,  2176,  2169,   591,   592,  1141,  3675,   469,   215,  2176,
    2663,   403,   158,  3453,   403,   543,   307,   572,  1073,  1964,
    2176,   210,   347,   181,  1969,  1970,  1721,   165,   353,   144,
    1415,  2684,   342,   329,   576,  1090,   408,   428,  2079,   627,
     155,   370,  2311,   511,  1188,   496,   451,   605,  3720,  3098,
    3006,  2161,   604,   347,   397,   643,   347,  2167,  2168,   353,
     416,   395,   353,   592,  1875,   653,   654,   655,  1879,   435,
     488,   659,   492,   395,  2922,  1621,   597,  1450,   666,   455,
    1451,  1079,   500,   492,   605,   589,  1175,   537,   573,  3730,
    2741,  2770,  2063,  2203,  3943,  1060,  1467,   647,  1160,  2063,
    2044,  1912,  2663,   525,   559,  2215,  2649,  1975,  3777,  1977,
    1195,  1675,  2645,   701,  2281,   643,  3241,  2292,   604,   413,
    1195,   572,  1493,  2684,  2310,  2292,  1091,   655,   496,   576,
     605,  3862,    71,  1199,   593,  3806,  2292,   593,   603,   609,
     576,   576,   580,   486,   515,   525,   543,   576,  2736,  2085,
     605,   567,  2681,   500,   605,   578,   515,   611,   468,  2130,
     543,   525,   543,   581,   611,   557,  2130,  2277,  2278,  2279,
    2280,   496,  4136,   761,   610,   611,   611,   611,   611,  2120,
    1265,   610,   611,  2612,  2613,   528,   577,   570,   611,  2661,
    1265,  2651,   780,   605,   605,   783,   571,  3097,   786,   787,
    1764,  2486,   496,    32,   572,   496,   605,   605,   553,   553,
     520,   150,   546,   605,   470,   442,   605,   611,   511,  3321,
     603,   509,  3324,   511,   546,   168,   543,   603,   571,   112,
    1319,   607,   459,    12,   462,   605,   461,   825,  1126,   827,
     558,   551,   593,   371,    73,   539,  3915,   572,   111,   566,
     567,   352,   367,   399,  1219,    26,   483,    28,   188,   787,
     449,  3765,    52,    96,    44,   403,  3770,  2308,   556,   246,
    1938,   402,  2135,  1271,    13,   603,   517,   442,   572,   520,
     605,   572,  3991,   224,   593,   492,  2916,    58,    59,    60,
     229,  1959,   115,   340,  2563,  2564,    67,   825,   232,   827,
      71,   597,   598,   599,   462,   431,   264,   241,  1445,   129,
      81,   635,   175,    53,   361,    27,  1405,    96,   147,   492,
    1409,    61,  2919,  3753,   157,  3755,  2956,  2926,    99,     4,
      88,   168,  2195,  2970,  2197,    10,    11,  2974,  2970,  3023,
    3098,  2204,  2974,   284,   115,  3098,   111,   118,  1695,  4021,
    3003,   150,   515,    57,    29,   188,   239,  3299,  2221,   303,
      35,   246,  4034,   509,    39,   603,   200,   515,   349,   350,
      23,  1507,   610,   131,   259,  1647,  2934,    67,   157,   150,
     111,    61,   184,   529,  4056,   281,   181,   975,   976,   977,
      70,   559,   131,  1616,  1961,   568,   509,  1620,   511,   514,
    1623,  1624,  1625,    83,  1647,  3347,   349,   350,   347,   188,
     175,   369,   355,   284,   353,    13,   384,   361,   281,   557,
     744,  1557,  1558,  1011,   232,  2341,  2342,  2106,  2107,  1573,
     229,  1019,   492,   241,   108,   443,   604,   271,  1582,   241,
     374,  3871,  3003,  3873,   175,   224,   609,  2392,   213,  4158,
     227,   455,   127,    90,  4126,   220,   227,   605,  3278,   436,
     356,   165,   403,  1518,   235,   169,   156,   397,  1056,  3571,
    1058,   455,  1060,   533,   413,   214,  2651,   181,  3291,   605,
     275,  3325,  2649,  1011,  2651,  1073,   382,  4159,  1127,  1128,
    1129,  1079,   263,   356,  1492,  2651,   316,   276,  2603,   179,
    1139,  4005,  1090,  1091,  2773,   200,   159,   187,  1147,   183,
    3107,  1061,   559,  1101,  1512,  2133,   281,   229,   355,  1107,
    2239,  2490,   341,  3907,  1590,   301,  3113,   410,  2716,  3969,
     341,   271,   355,   131,    26,   306,  2475,   408,   184,  1127,
    1128,  1129,  1130,  1131,  2239,   219,    96,   227,  2717,   111,
     281,  1139,   323,  1141,   353,   440,  4060,   496,  1675,  1147,
     340,   569,   352,   392,   397,  2536,   374,  2113,   248,  1157,
    2745,  1121,  2536,    71,  2741,    67,   271,   341,  2745,    71,
    2525,   511,    41,   412,  2393,  1958,    84,   545,   531,  2745,
    3297,   356,   238,   230,  1967,   307,    71,  1968,  3396,   603,
     539,   173,  1130,  1131,   375,  2169,   549,   157,    71,   246,
     381,   315,   441,   175,    74,   498,    76,   366,   397,   603,
     210,    84,   259,   115,    99,   356,   460,   125,  1216,  1157,
     455,  1219,  3262,   572,  2744,  1274,  1275,   187,  3270,  3271,
     536,    61,    90,    90,    90,   435,  3771,  1764,   322,  3469,
      70,   213,  3754,   117,  3756,   115,   330,  1207,   248,   603,
    2039,   490,     7,    83,  2332,  2688,   605,   362,  1218,  2337,
     604,   461,   131,   536,   455,   150,   447,   227,   511,   139,
     370,   253,   341,  1271,  2352,  1273,  1274,  1275,  1216,  1277,
    3503,  2359,  3505,   350,   531,  2313,   515,   496,  1286,   403,
    1288,   455,   455,   340,   515,    70,  2374,  2375,   450,   580,
    2979,    56,   549,  2381,   174,   395,   184,  2281,   109,   281,
    1958,  2389,   541,   369,  3568,   496,   276,   401,  2292,  1967,
     541,   510,   511,   265,  1322,  1733,   393,   269,   571,   510,
     111,   480,   481,   482,   483,   484,   485,   289,   290,  1277,
     214,   515,   227,   251,  3879,   130,   248,   111,   497,   179,
    2428,   115,   241,   534,   470,   460,  2634,   187,  1857,    13,
     455,   536,   444,   572,   545,   352,  1364,   541,   603,   453,
     352,   260,   230,   230,   230,   511,   461,    13,   251,  2784,
     135,   489,   603,  2788,   356,   475,   264,   384,   246,   246,
     246,     3,   477,   440,   175,   536,   605,   227,    13,     0,
     485,   259,   259,   259,   179,  2678,   514,    90,    13,  3893,
     284,   175,   603,  2491,  3531,  3532,   607,   210,   248,   327,
      70,   306,   603,   508,  1422,  1924,  2183,   392,  2185,   603,
     512,   455,   213,   152,   421,    13,  3483,   461,   323,   603,
     603,   349,   350,    80,   352,   511,   515,   349,   350,   213,
     497,   562,   227,   355,   327,   248,   546,    94,   241,   361,
     205,   368,   347,   405,   371,  2738,   418,   419,   408,   564,
     565,  4006,   541,   248,   556,   116,   587,   131,   575,   352,
     263,   610,   340,   340,   340,   773,   774,   427,   567,   571,
     574,   570,   589,   395,  1492,   131,  3719,  3720,   406,  1497,
     281,  2668,   586,   361,   361,   361,  2885,    96,   603,  1507,
     220,   525,   222,  3098,  1512,   475,   131,   281,   458,   807,
    1518,  3098,  1520,  2801,  2802,    17,   131,  1525,  1526,   179,
    1528,  2698,  3098,   406,   603,  1943,  2703,   464,   465,  2706,
     564,   565,  2923,  1541,   223,   415,  1544,   230,   378,  2923,
     510,   511,   512,   131,  3823,   511,  3825,   459,  1556,  1557,
    1558,  1559,  1560,   246,   536,   395,   349,   350,   157,  1567,
    1568,  1569,    58,    59,   205,   356,   259,   227,   486,   603,
     490,    67,   440,   440,   440,   495,   546,  1525,  1526,  1997,
    1528,  1589,   356,   202,  1554,   350,   556,  2978,   248,   188,
    1598,   595,   596,  1541,  2978,  1565,  1544,    38,   451,   452,
    3617,   496,   455,   486,   604,   605,  3839,   460,  2478,  1617,
     395,  1559,  1560,   227,  1622,   510,   604,   605,  3033,  1567,
    1568,  1569,  3855,  1593,   417,   604,   605,  1635,   227,   497,
     497,   497,  2169,  1641,   546,   475,   512,  1526,   223,  1528,
     501,   502,   407,   504,   409,  3319,  3320,   340,   604,   605,
     205,  3039,  3067,  3068,  3042,  3043,   604,   605,  1045,   364,
    3075,  1048,   103,  3337,  1051,  2649,   238,  3082,    48,  3343,
     111,  3059,   184,  2091,  1622,  2093,  2094,   276,  1567,  1568,
    1569,   474,   578,  2822,   284,   304,   305,   478,  1658,   604,
     309,   310,  3366,  1641,   109,  3369,  2487,  1667,  1668,  3677,
     513,   514,  2501,   516,     3,   518,   546,   610,  1716,   152,
    3943,   604,   605,   486,  1773,     7,  2202,   603,   378,   429,
      19,  1729,    12,  2141,  2142,  1733,   161,   168,  3961,   604,
     605,   361,  1740,   559,   175,   395,    16,    17,    58,    59,
     593,   604,   605,     3,  2281,   536,   496,   440,   604,   605,
    1462,  1463,  1464,  1465,  1466,  2292,  3773,  2741,   396,    19,
    3993,  2745,   536,   604,   605,  1773,   604,   605,   604,   605,
     604,   605,   213,  1781,  1744,  1745,  1784,  1747,   444,  1749,
    1750,  1751,  1752,  1753,   366,  1755,  1756,   509,  4021,   604,
     605,    90,   361,   392,   224,  2213,   604,   605,   397,   592,
     593,  4034,  4035,   605,   497,   604,   605,   604,   605,    50,
     124,   184,   604,   605,   473,  3012,   604,   605,  2236,   277,
     604,   605,  4055,  4056,   604,   605,    50,  3115,   604,   605,
      90,   361,  4065,  1781,   604,   605,  2345,   604,   605,   605,
     281,   604,   605,   450,  2353,  3236,   604,   605,   604,   605,
     604,   605,  3236,   152,   603,  3905,   604,   605,   604,   605,
     604,   605,  4095,   604,   605,   604,   605,   604,   605,   604,
     605,  3925,   604,   605,   604,   605,   604,   605,   545,  2548,
     604,   605,   181,   604,   605,   604,   605,   604,   605,   604,
     605,   597,   152,  4126,  2661,   604,   605,   158,  3186,   277,
     341,   215,   461,  2595,   533,  4138,   205,   604,   605,  2327,
     351,   510,   211,   512,   355,   356,  2334,   152,   178,   604,
     605,   181,   604,   605,  4157,   603,  4159,   604,   605,   528,
    4163,   230,  2595,   604,   605,  1943,   264,  1945,   173,   238,
     152,   153,   604,   605,   181,   205,   492,   246,  4181,   492,
    2717,   211,   604,   605,  1458,  1459,   492,   556,   193,  2602,
     259,  1460,  1461,   277,   224,   264,  2982,  2983,  1406,  1407,
     230,   301,   571,   208,  3537,  3538,   275,  2533,   238,  2565,
    2566,   193,   509,    38,  2896,  2897,   246,   301,   277,  1997,
     149,  3219,  3220,    82,   363,   605,   208,   507,   604,   259,
     361,     7,    98,     5,   264,   454,   571,    55,   421,  3292,
     161,   603,   609,   221,  3113,   275,  3839,   571,   253,   254,
     610,   605,   605,   603,   603,   603,   603,  4081,  4082,  2585,
     242,   605,  3855,   603,   600,   603,   603,  2045,   150,   603,
     603,   340,   254,   603,   515,   603,   603,   603,   103,   610,
     285,   603,   603,   603,   603,  2063,   111,   605,   603,   603,
     583,   603,   361,   603,   603,   603,   603,  2075,  2076,   603,
     369,   603,   603,   285,   515,   603,   517,   603,   603,   520,
     340,   603,   396,  2091,   603,  2093,  2094,   603,   402,  2148,
     531,   594,   603,    50,   603,   536,   603,   603,   397,   603,
     541,   361,   603,  3300,   603,  2075,   603,   605,   603,   369,
     603,   346,  2649,   168,  3098,   603,   603,   603,   603,   433,
     175,   603,  2130,   603,   603,   603,   603,   603,   603,   603,
     603,   603,   344,  2141,  2142,   603,   603,   397,  3961,   603,
    2148,   440,   603,   603,   603,   578,   603,   603,   603,   603,
    2568,  4120,   603,   603,   595,   596,   470,  2948,   213,   394,
     509,   603,   461,   603,   603,   603,   603,   603,   301,   603,
    3993,   603,   603,   271,  2182,   603,   603,  2184,   492,   603,
     440,  2189,   603,   603,  2192,   603,  2193,   603,  2196,   603,
    2198,   603,  2199,   603,   603,   509,   603,   511,   497,   603,
    2208,   461,  2210,  2211,  2741,  2213,   603,   603,  2745,   603,
     603,  2219,  4035,  2220,  2981,  2982,  2983,  2224,   603,   603,
     603,  2229,   603,  2230,  2231,   301,   281,  3265,  2236,   603,
    2200,  2201,  4055,   603,   609,  2243,  2244,   497,   603,   603,
    2715,   603,  4065,   603,   603,   603,   545,   603,   603,   603,
     603,   603,   603,  2223,   380,   605,   525,   605,   525,   605,
     559,   525,   605,  2681,   597,   605,   605,   241,   597,   181,
     552,   605,  4095,   472,   383,   424,   603,   576,   609,   578,
     604,  2229,   605,   152,   152,   545,   341,   152,   152,   152,
     152,   152,   152,  2301,  2302,   152,   152,   152,   558,   559,
     355,   356,  3101,   152,   152,   604,   605,   152,   152,   605,
     554,   361,   611,   558,    48,  4138,   576,   604,   578,  2327,
     361,   188,    26,    67,    28,   184,  2334,    13,   604,   515,
     455,   604,   131,    10,  4157,   575,   604,   263,   604,  2347,
    4163,   462,   596,   408,   604,   605,   603,  3544,   610,   604,
     576,   611,   605,  2301,    58,    59,    60,   228,  4181,   202,
     603,   603,   610,    67,   184,   604,   604,    71,   470,   461,
     181,   605,   605,  3656,  3657,  3658,  3659,    81,   287,   288,
     289,   290,   291,   292,    48,  2393,   295,   296,   297,   298,
     299,   300,   486,   302,   525,    99,   486,   454,   486,   486,
      26,  3632,    28,   486,    70,   378,   378,   378,   525,   126,
    3794,   115,   247,   510,   118,   247,  3215,   510,   126,   378,
     378,   451,   276,   379,   378,   378,   610,   559,   605,   604,
     604,  3796,    58,    59,    60,   605,   604,   604,   604,    19,
     604,    67,   604,   604,   604,    71,   150,   605,   605,   605,
     604,   597,   604,   184,   604,    81,   275,   605,   605,   604,
     515,   605,   517,   604,   604,   520,   605,   610,   605,   605,
     605,   605,   610,    99,   603,   605,   531,   605,   605,   525,
     604,   536,   605,   605,   604,   604,   541,   605,   604,   115,
     605,   605,   118,   603,   605,  2503,   515,   605,   605,   604,
    2508,   605,  2510,  2511,  2512,  2513,   605,   608,   603,   418,
     419,  4041,   593,  2521,  4044,  4045,  4046,  4047,   604,   604,
    2938,   605,   604,   227,   150,  2533,   604,   604,  2536,   604,
     604,   235,   604,   604,   604,  2953,   604,   604,   604,   525,
     595,   596,  2550,  2551,  2552,   604,   604,  2555,   604,  4079,
    4080,   605,   605,   605,   605,   604,   525,  4087,   605,  3647,
    2568,  3098,    26,   605,    28,   604,   604,  2575,   605,  2577,
     605,   604,   604,  2521,  3373,  3374,   605,  2585,   604,   604,
     604,   604,   610,   610,  3968,  2555,   604,   580,   605,   610,
     610,   605,   271,   501,   525,   603,    60,   366,   184,   184,
     184,   227,   306,   238,   243,   184,   576,    71,   605,   235,
     610,   610,  3599,   578,   246,   246,   372,    81,   319,   323,
     393,   361,    71,    99,    99,  3908,   248,   248,   603,   610,
     205,   515,   378,   369,   597,    99,   603,   603,   237,   184,
     604,   356,   604,   356,   604,   184,   184,   356,   589,   604,
     361,   115,   604,   604,   118,  2663,   604,   604,   597,   603,
    2668,   610,  3413,   224,    48,   605,   604,   604,  2638,   605,
     184,   375,   553,  2681,  4039,   610,  2684,   381,   241,   261,
     306,    67,   289,   361,   246,   605,   150,   246,    75,   134,
    2698,   248,   248,    19,   605,  2703,   361,   323,  2706,    19,
      48,   603,   239,   604,   264,   604,   604,  2715,   603,   603,
    4075,   239,  2682,   604,   604,  4106,  2724,   604,   604,  2727,
    2690,   604,  4106,  2731,  2732,   604,   604,  2735,   605,  3534,
    3535,  3536,   604,   147,   610,  2743,   575,   138,   604,   257,
     265,   455,   205,   447,  4109,   463,   604,   152,   372,   375,
     246,   604,  3581,   604,   604,   381,  2764,   246,   605,   605,
     115,  4145,   604,   227,   604,     3,   604,  2737,   604,     7,
     604,   235,   605,   604,   604,   604,    14,    15,   604,  2727,
     605,   605,   604,   604,  4175,   115,   604,   604,    26,   604,
      28,  4175,   496,   605,   604,   604,   604,   604,   604,   604,
    4083,   604,   604,   604,   604,   590,   510,   604,   604,  4092,
     604,  3562,   605,   604,   603,   605,  2764,  4100,    56,   605,
     604,   447,    60,    61,  3575,   604,   604,    65,   604,   604,
     534,   605,   604,    71,  3252,   605,  3322,    13,    14,   604,
     604,   545,   306,    81,   604,   604,  4129,   605,    86,   603,
     605,   603,   605,   603,   603,   603,   391,   356,   603,   323,
     603,    99,   603,   610,   603,   356,  3665,  2875,   457,   604,
     496,   604,   604,   356,   604,   604,   578,   115,   604,   604,
     118,   604,   356,   578,   510,   238,   378,    48,   604,   127,
     128,   610,   604,   211,    69,   605,   326,   135,   408,  4182,
     515,   605,   515,  2911,  3413,   143,   246,  3325,   534,   559,
     559,   375,   150,    89,   603,  2923,  2924,   381,  2926,   545,
     491,   603,  3751,   603,   356,  2933,    36,  3345,   356,   603,
    2938,   603,   570,   570,   356,   104,   105,   106,   107,   108,
     178,   553,   115,   119,   248,  2953,   248,   355,   578,   356,
     356,   604,   356,  2961,   356,    19,   356,   605,   473,   135,
     604,   603,   605,   604,   604,   326,   251,  3766,   604,   402,
    2978,   604,   515,   590,   515,   604,   604,   248,   605,   604,
     267,   157,   605,   447,   160,   604,   604,   225,   604,   227,
     604,   515,    17,   604,   604,  3003,   172,   235,   604,   604,
     603,   603,   603,  3011,   604,  3013,   604,   559,   559,   148,
     220,   220,   238,   604,   183,  3023,    13,    14,   612,  3027,
     575,   604,   351,   604,   181,   565,   202,   604,   604,   134,
     604,   604,   496,   605,   604,   356,   605,   356,   326,   163,
     553,   366,   578,   511,    48,    48,   510,   216,   217,   218,
     219,   227,   144,  3562,    48,   290,   603,   603,   234,   184,
    3811,  3812,   604,  3814,   376,    61,  3575,   366,   306,   603,
     534,    61,   604,   604,   604,   604,   502,   604,    48,    48,
     397,   545,    48,   152,   604,   323,   605,   238,  3600,   147,
     328,   575,    89,   416,   611,     6,   366,   366,   140,   275,
     437,   604,   564,  3111,   605,   223,   147,   113,   590,   283,
     612,   611,   134,   125,   448,    17,   604,   604,   608,   591,
     590,  3872,   119,   603,   603,   611,   524,   365,   294,   147,
     209,   369,   605,   611,   605,   224,   147,   375,   135,   126,
     378,   126,   150,   381,   604,   152,   181,   591,   181,   318,
    3568,   320,   321,   322,   181,   428,   356,   603,   605,   115,
     157,   330,   603,   160,   604,   577,   267,   461,   604,  3920,
     501,  3922,  3923,   411,   565,   172,  2001,   182,  2276,  3089,
    3376,  3762,  1758,   771,  4067,   423,   424,   425,   426,  3612,
    3769,  3605,  4100,  4182,  3291,  3291,  4125,  3291,  3291,  3291,
    3291,  3291,  3291,  3291,  3291,   202,  3291,  3291,  3291,   447,
    3291,  3857,  1210,   806,  3772,  1501,  1212,  2222,  2908,  2911,
    3911,  3796,   398,  3973,  3893,  3670,  4075,  4109,  3236,  4179,
     227,  4187,   401,  4049,  1265,   446,  3108,   234,  1721,    14,
     416,  3495,  2302,  3727,  3252,  1195,   422,  3027,  1729,  2187,
    3668,  2246,  3011,  4052,   430,  3083,  3050,  3050,   496,  3560,
    3305,  3858,  3015,  3345,  2953,  3869,  3552,  3737,  3354,  1281,
    3619,  3575,   510,  3013,  2239,  1728,  1172,  2058,   275,   455,
    3309,  1261,  1559,   452,   453,  1630,  2521,  2032,  2077,  3297,
     466,   467,   787,   760,  3264,   519,   534,   687,   759,  3306,
    1188,  3672,  3811,  3812,  1457,  3814,  1650,   545,  3438,  2502,
    2335,  3215,  2968,  1455,    89,  3698,  1361,  3325,  1309,  3493,
    4123,  2493,  3252,  2082,  4123,  1091,  2028,  3884,  2062,  3236,
     506,  2918,  1060,  2917,  2978,  4145,  3968,  3345,   509,   579,
    1286,   499,   827,  2902,   119,  1517,  1605,  3970,  3682,  4010,
    3818,  4175,   528,  3347,  1096,  1584,  2923,  2587,  2961,  3259,
     135,  3480,  3370,  3872,  3372,  1544,   489,   667,  1053,  1107,
    3654,  2508,  1099,   611,   490,  3660,  3346,   553,  3386,   555,
    1273,   671,   157,   545,  3392,   160,   823,  2300,  3105,  3393,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,
      -1,   398,    -1,    -1,    -1,   574,    -1,    -1,    -1,    -1,
      -1,  3920,    -1,  3922,  3923,    -1,   585,   586,    -1,   416,
      -1,    -1,    -1,    -1,    -1,   422,    -1,   202,    -1,    -1,
    3438,    -1,    -1,   430,    -1,    -1,    -1,    -1,  3386,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   227,    -1,   581,    -1,    -1,    -1,   455,   234,
      -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,  3438,   466,
     467,    -1,    -1,    -1,    14,    15,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3492,    -1,    -1,    -1,    -1,    -1,
      30,  3499,    32,    -1,    -1,    -1,    -1,    37,  3506,    -1,
     275,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   506,
      50,    51,   639,    -1,    -1,    -1,    56,  4015,    -1,    -1,
      60,    61,    -1,  3531,  3532,    -1,    -1,    -1,    -1,    -1,
      -1,   528,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3549,    -1,    -1,    -1,    -1,    -1,  4104,    -1,    89,
      -1,  4049,    -1,    -1,    -1,    -1,   553,    -1,   555,    -1,
    3568,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,    -1,  4129,    -1,    -1,    -1,    -1,    -1,    -1,   119,
     120,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   134,   135,    -1,    -1,  3606,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3619,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     160,    -1,    -1,   398,    -1,  4182,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   177,  3608,    -1,
      -1,   416,    -1,    -1,    -1,    -1,    -1,   422,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   430,    -1,    -1,    -1,  3667,
    3668,  4170,   202,   790,    -1,    -1,  4084,    -1,    -1,   209,
      -1,    -1,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     455,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4187,
    3698,   466,   467,    -1,   234,    -1,   236,    -1,    -1,  3707,
      -1,    -1,  4120,    -1,    -1,    -1,    -1,    -1,    -1,   249,
      -1,   838,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4141,    -1,    -1,    -1,    -1,    -1,    -1,
     270,   506,    -1,    -1,    -1,   275,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   528,    -1,    -1,    -1,    -1,    -1,  4177,
      -1,  3769,    -1,    -1,    -1,    -1,    -1,   894,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   553,    -1,
     555,    -1,    -1,    -1,    -1,    -1,  3794,  3795,    -1,    -1,
      -1,    -1,    -1,   920,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3823,    -1,  3825,    -1,  3827,
      -1,    -1,    -1,    -1,    -1,   365,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,    -1,
      -1,    -1,   969,   970,   971,   972,   973,  3795,    -1,    -1,
      -1,    -1,   392,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     400,    -1,  3870,   990,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   421,    -1,    -1,   424,    -1,   426,    -1,    -1,   429,
      -1,    -1,   432,    -1,   434,    -1,    -1,    -1,    -1,   439,
      -1,   441,    -1,  3911,    -1,    -1,    -1,    -1,  3916,    -1,
     450,    -1,    -1,    -1,    -1,   455,    -1,    -1,    -1,    -1,
      -1,   461,    -1,    -1,    -1,    -1,   466,    -1,    -1,    -1,
     470,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     490,    -1,    -1,    -1,    -1,   495,    -1,    -1,    -1,    -1,
    3968,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3986,    -1,
    1107,    -1,    -1,    -1,  3992,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   532,    -1,    -1,  1122,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   544,    -1,    -1,    -1,    -1,    -1,
     550,    -1,    -1,   553,    -1,    -1,    -1,    -1,   558,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   582,    -1,    -1,    -1,  4054,    -1,    -1,    -1,
      -1,  4059,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   603,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4084,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4106,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4078,    -1,
      -1,    -1,  4120,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4141,    -1,    -1,    -1,  4145,    -1,    -1,
      -1,    -1,  4112,  4113,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1290,  1291,  1292,    -1,  4175,    -1,  4177,
      -1,    -1,  1299,  1300,  4182,    -1,  1303,    -1,  1305,  1306,
    1307,  1308,    -1,    -1,    -1,  1312,    -1,    -1,  1315,  1316,
      -1,  1318,    -1,  1320,  1321,    -1,  1323,  1324,  1325,  1326,
    1327,    -1,    -1,    -1,  1331,    -1,  1333,  1334,  1335,    -1,
    1337,  1338,  1339,  1340,    -1,  1342,  1343,    -1,  1345,    -1,
      -1,  1348,  1349,  1350,    -1,  1352,  1353,  1354,  1355,    -1,
    1357,  1358,  1359,  1360,    -1,    -1,    -1,    -1,    -1,  1366,
    1367,    -1,  1369,  1370,  1371,  1372,  1373,    -1,    -1,    -1,
      -1,  1378,    -1,  1380,  1381,  1382,  1383,  1384,    -1,  1386,
    1387,  1388,  1389,  1390,  1391,  1392,    -1,  1394,  1395,    -1,
      -1,  1398,  1399,  1400,    -1,  1402,    -1,  1404,    -1,    -1,
      -1,  1408,    -1,  1410,  1411,    -1,    -1,    -1,    -1,  1416,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1424,  1425,  1426,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1434,    -1,    -1,
      -1,  1438,    -1,    -1,    -1,  1442,    -1,    -1,    -1,    -1,
      -1,    -1,  1449,    -1,  1451,  1452,    -1,  1454,  1455,    -1,
    1457,  1458,  1459,  1460,  1461,  1462,  1463,  1464,  1465,  1466,
    1467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    15,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    30,    -1,  1493,  1494,    -1,    -1,
      -1,    37,    -1,    35,    36,    -1,    -1,    -1,    -1,    41,
      -1,    43,    44,    45,    50,    51,    -1,    -1,    -1,    -1,
      56,    -1,    -1,    -1,    60,    61,    -1,    59,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    89,    -1,    -1,  1553,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,    -1,
      -1,   103,    -1,    -1,   110,    -1,    -1,    -1,    -1,    -1,
     112,    -1,    -1,   119,   120,   121,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,   135,
      -1,   133,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   151,
      -1,    -1,    -1,    -1,   160,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   177,   174,    -1,   176,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   202,    -1,    -1,    -1,
      -1,    -1,    -1,   209,    -1,    -1,   212,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,
     236,    -1,    -1,    -1,    -1,    -1,    -1,   239,    -1,    -1,
      -1,    -1,    -1,   249,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   270,    -1,   268,    -1,    -1,   275,
      -1,    -1,    -1,    -1,    -1,  1742,    -1,   279,   280,    -1,
     282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     312,   313,   314,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   333,   334,   335,    -1,    -1,    -1,   339,    -1,    -1,
     342,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   357,   358,    -1,    -1,   365,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   378,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   387,   392,   389,    -1,    -1,
      -1,    -1,    -1,    -1,   400,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   410,    -1,
      -1,    -1,    -1,    -1,    -1,   421,    -1,    -1,   424,    -1,
     426,    -1,    -1,   429,    -1,    -1,   432,    -1,   434,    -1,
      -1,    -1,    -1,   439,    -1,   441,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   450,    -1,    -1,    -1,    -1,   455,
      -1,    -1,  1919,  1920,  1921,   461,    -1,   459,    -1,   461,
     466,    -1,    -1,    -1,   470,    -1,    -1,    -1,    -1,   471,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1944,    -1,    -1,
      -1,    -1,    -1,    -1,   490,    -1,    -1,     7,    -1,   495,
      -1,    -1,    -1,    -1,    14,    -1,    -1,  1964,    -1,    -1,
      -1,  1968,  1969,  1970,    -1,    -1,    26,    -1,    28,    -1,
      -1,    -1,    -1,    -1,   516,   517,    -1,  1984,   520,   521,
     522,   523,    -1,    -1,    -1,    -1,   532,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    56,    -1,   544,    -1,
      60,    -1,    -1,    -1,   550,    -1,    -1,   553,    -1,    -1,
      -1,    71,   558,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    81,    -1,    -1,   566,   567,    86,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   582,    -1,    -1,    99,
      -1,    -1,    -1,    -1,   586,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   115,    -1,   603,   118,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   143,    -1,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   178,    34,
      -1,    36,    37,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2145,  2146,
      -1,    -1,    -1,    58,    59,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    -1,    70,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   227,    -1,    -1,
      -1,    -1,    -1,    88,    89,   235,    -1,    -1,    -1,    -1,
      -1,    -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   130,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   149,   150,    -1,    -1,    -1,   154,
      -1,    -1,    -1,    -1,    -1,    -1,   306,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   323,    -1,    -1,    -1,    -1,   328,    -1,
      -1,   186,    -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   200,    -1,    -1,   203,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2314,    -1,   369,
    2317,   226,   227,  2320,  2321,   375,   231,    -1,    -1,    -1,
      -1,   381,    -1,    -1,    -1,    -1,  2333,    -1,    -1,  2336,
      -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2349,    -1,  2351,    -1,    -1,    -1,  2355,    -1,
    2357,  2358,    -1,    -1,    -1,  2362,   271,  2364,  2365,    -1,
    2367,    -1,   277,  2370,   424,  2372,  2373,    -1,    -1,    -1,
      -1,  2378,  2379,    -1,    -1,  2382,    -1,  2384,    -1,  2386,
      -1,  2388,    -1,  2390,    -1,  2392,   301,   447,    -1,    -1,
      -1,    -1,    -1,    -1,  2401,  2402,    -1,    -1,  2405,    -1,
    2407,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2415,  2416,
      -1,  2418,    -1,  2420,    -1,    -1,  2423,  2424,  2425,    -1,
    2427,   336,    -1,    -1,    -1,  2432,  2433,  2434,  2435,    -1,
     345,    -1,    -1,  2440,  2441,  2442,   496,  2444,    -1,  2446,
      -1,  2448,    -1,  2450,    -1,  2452,    -1,    -1,    -1,   364,
     510,    -1,  2459,    -1,  2461,    -1,    -1,  2464,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2475,   384,
     385,  2478,    -1,    -1,   534,    -1,    -1,    -1,    -1,    -1,
    2487,   396,   397,  2490,    -1,   545,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2515,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2525,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   460,  2553,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   470,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   581,    -1,    -1,    -1,    -1,    -1,
      -1,  2578,    -1,    -1,    -1,    -1,  2583,   492,    -1,    -1,
      -1,   496,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   511,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2626,
      -1,    -1,   639,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2658,    -1,   568,    -1,    -1,    -1,    -1,   573,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2777,    -1,    -1,   790,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2850,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2860,    -1,  2862,    -1,  2864,    -1,    -1,
      -1,    -1,    -1,  2870,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   894,  2885,    -1,
    2887,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2898,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2917,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2948,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   969,    -1,    -1,  2962,   973,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2980,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1107,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1122,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3144,    -1,    -1,
      -1,    -1,    -1,  3150,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3159,  3160,    -1,    -1,    -1,    -1,  3165,    -1,
      -1,    -1,  3169,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3182,    -1,    -1,    -1,    -1,
      -1,  3188,    -1,    -1,  3191,  3192,    -1,  3194,  3195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3209,  3210,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3274,  3275,    -1,
      -1,    -1,    -1,  1290,  1291,  1292,    -1,    -1,  3285,    -1,
      -1,    -1,  1299,  1300,  3291,    -1,  1303,    -1,  1305,  1306,
    1307,  1308,    -1,    -1,    -1,  1312,    -1,    -1,  1315,  1316,
      -1,  1318,    -1,  1320,  1321,    -1,  1323,  1324,  1325,  1326,
    1327,    -1,    -1,    -1,  1331,    -1,  1333,  1334,  1335,    -1,
    1337,  1338,  1339,  1340,    -1,  1342,  1343,    -1,  1345,    -1,
      -1,  1348,  1349,  1350,    -1,  1352,  1353,  1354,  1355,    -1,
    1357,  1358,  1359,  1360,    -1,    -1,    -1,    -1,    -1,  1366,
    1367,    -1,  1369,  1370,  1371,  1372,  1373,    -1,    -1,    -1,
      -1,  1378,    -1,  1380,  1381,  1382,  1383,  1384,    -1,    -1,
    1387,  1388,  1389,  1390,  1391,  1392,    -1,  1394,  1395,    -1,
      -1,  1398,  1399,  1400,    -1,  1402,    -1,  1404,    -1,    -1,
      -1,  1408,    -1,  1410,  1411,    -1,    -1,    -1,    -1,  1416,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1424,  1425,  1426,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1434,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3453,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3480,    -1,    -1,    -1,  1494,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3497,    -1,    -1,    -1,    -1,    -1,  3503,    -1,  3505,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1553,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3628,    -1,    -1,    -1,    -1,    -1,  3634,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3648,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3676,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3691,    -1,  3693,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3702,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3714,    -1,  3716,
      -1,    -1,  3719,  3720,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1742,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3796,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3806,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3834,    -1,    -1,
      -1,    -1,  3839,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3855,  3856,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3894,    -1,    -1,
      -1,    -1,  3899,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1919,  1920,  1921,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3926,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1944,  3935,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3943,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3961,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3969,    -1,    -1,    -1,    -1,  1984,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3993,    -1,    -1,    -1,
    3997,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4021,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4034,  4035,    -1,
      -1,    -1,  4039,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4055,  4056,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4065,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4075,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4088,    -1,    -1,    -1,    -1,    -1,    -1,  4095,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4126,
      -1,    -1,    -1,  4130,    -1,    -1,    -1,    -1,  2145,  2146,
      -1,  4138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4157,    -1,  4159,    -1,    -1,    -1,  4163,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4181,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2314,    -1,    -1,
    2317,    -1,    -1,  2320,  2321,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2333,    -1,    -1,  2336,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2349,    -1,  2351,    -1,    -1,    -1,  2355,    -1,
    2357,  2358,    -1,    -1,    -1,  2362,    -1,  2364,  2365,    -1,
    2367,    -1,    -1,  2370,    -1,  2372,  2373,    -1,    -1,    -1,
      -1,  2378,  2379,    -1,    -1,  2382,    -1,  2384,    -1,  2386,
      -1,  2388,    -1,  2390,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2401,  2402,    -1,    -1,  2405,    -1,
    2407,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2415,  2416,
      -1,  2418,    -1,  2420,    -1,    -1,  2423,  2424,  2425,    -1,
    2427,    -1,    -1,    -1,    -1,  2432,  2433,  2434,  2435,    -1,
      -1,    -1,    -1,  2440,  2441,  2442,    -1,  2444,    -1,  2446,
      -1,  2448,    -1,  2450,    -1,  2452,    -1,    -1,    -1,    -1,
      -1,    -1,  2459,    -1,  2461,    -1,    -1,  2464,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2515,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2553,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2578,    -1,    -1,    -1,    -1,  2583,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2626,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2777,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2850,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2860,    -1,  2862,    -1,  2864,    -1,    -1,
      -1,    -1,    -1,  2870,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2887,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2962,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3144,    -1,    -1,
      -1,    -1,    -1,  3150,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3159,  3160,    -1,    -1,    -1,    -1,  3165,    -1,
      -1,    -1,  3169,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3182,    -1,    -1,    -1,    -1,
      -1,  3188,    -1,    -1,  3191,  3192,    -1,  3194,  3195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3209,  3210,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3274,  3275,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3480,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3497,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3628,    -1,    -1,    -1,    -1,    -1,  3634,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3648,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3676,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3691,    -1,  3693,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3702,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3714,    -1,  3716,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3806,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3834,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3856,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3899,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3926,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3935,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,
    3997,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      32,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    -1,    44,    45,    46,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    -1,
      82,    -1,    84,    -1,    86,    87,    88,    -1,    -1,    91,
      92,    93,    -1,    95,    96,    -1,    98,    99,   100,   101,
     102,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,   111,
      -1,  4088,   114,   115,   116,    -1,   118,    -1,    -1,    -1,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
      -1,    -1,   154,  4130,   156,   157,   158,   159,   160,   161,
      -1,   163,   164,   165,   166,   167,   168,   169,    -1,   171,
     172,   173,   174,   175,    -1,   177,    -1,    -1,   180,    -1,
     182,   183,    -1,   185,   186,    -1,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,    -1,
      -1,   203,   204,    -1,   206,   207,    -1,   209,   210,    -1,
     212,   213,    -1,   215,    -1,    -1,    -1,   219,   220,   221,
     222,   223,    -1,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,   237,    -1,    -1,   240,    -1,
      -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,
     252,   253,    -1,   255,   256,   257,    -1,   259,   260,   261,
      -1,    -1,    -1,    -1,   266,    -1,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,    -1,    -1,   281,
      -1,    -1,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,    -1,   358,   359,   360,    -1,
     362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,    -1,    -1,   407,    -1,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,    -1,
     422,   423,    -1,   425,   426,   427,   428,   429,   430,    -1,
     432,   433,   434,    -1,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,
     492,   493,   494,   495,   496,    -1,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,    -1,
     512,   513,    -1,   515,   516,   517,   518,   519,   520,    -1,
      -1,    -1,   524,    -1,   526,   527,    -1,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,    -1,    -1,
     552,    -1,    -1,    -1,   556,   557,    -1,    -1,   560,   561,
     562,   563,   564,   565,    -1,    -1,   568,   569,    -1,   571,
     572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,
     582,    -1,   584,    -1,   586,    -1,    -1,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,    -1,    -1,    -1,    -1,   601,
      -1,   603,    -1,    -1,   606,   607,    -1,   609,   610,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    32,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    -1,    82,    -1,    84,    -1,    86,
      87,    88,    -1,    -1,    91,    92,    93,    -1,    95,    96,
      -1,    98,    99,   100,   101,   102,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,   111,    -1,    -1,   114,   115,   116,
      -1,   118,    -1,    -1,    -1,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,   161,    -1,   163,   164,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,   174,   175,    -1,
     177,    -1,    -1,   180,    -1,   182,   183,    -1,   185,   186,
      -1,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,   212,   213,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,   223,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
     237,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,   252,   253,    -1,    -1,   256,
     257,    -1,   259,   260,   261,    -1,    -1,    -1,    -1,   266,
      -1,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,    -1,    -1,   281,    -1,    -1,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
      -1,   358,   359,   360,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,   404,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,   493,   494,   495,   496,
      -1,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,    -1,   512,   513,    -1,   515,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,    -1,   543,   544,    -1,    -1,
     547,   548,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,   560,   561,   562,   563,   564,   565,    -1,
      -1,   568,   569,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,   584,    -1,   586,
      -1,    -1,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
      -1,    -1,    -1,    -1,   601,    -1,   603,    -1,    -1,   606,
     607,    -1,   609,   610,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      32,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    -1,
      82,    -1,    84,    -1,    86,    87,    88,    -1,    -1,    91,
      92,    93,    -1,    95,    96,    -1,    98,    99,   100,   101,
     102,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,   111,
      -1,    -1,   114,   115,   116,    -1,   118,    -1,    -1,    -1,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
      -1,    -1,   154,    -1,   156,   157,   158,   159,   160,   161,
      -1,   163,   164,   165,   166,   167,   168,   169,    -1,   171,
     172,   173,   174,   175,    -1,   177,    -1,    -1,   180,    -1,
     182,   183,    -1,   185,   186,    -1,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,    -1,
      -1,   203,   204,    -1,   206,   207,    -1,   209,   210,    -1,
     212,   213,    -1,   215,    -1,    -1,    -1,   219,   220,   221,
     222,   223,    -1,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,   237,    -1,    -1,   240,    -1,
      -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,
     252,   253,    -1,    -1,   256,   257,    -1,   259,   260,   261,
      -1,    -1,    -1,    -1,   266,    -1,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,    -1,    -1,   281,
      -1,    -1,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,    -1,   358,   359,   360,    -1,
     362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,    -1,    -1,   407,    -1,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,    -1,
     422,   423,    -1,   425,   426,   427,   428,   429,   430,    -1,
     432,   433,   434,    -1,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,   455,    -1,    -1,   458,   459,   460,    -1,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,
     492,   493,   494,   495,   496,    -1,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,    -1,
     512,   513,    -1,   515,   516,   517,   518,   519,   520,    -1,
      -1,    -1,   524,    -1,    -1,   527,    -1,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,    -1,    -1,
     552,    -1,    -1,    -1,   556,   557,    -1,    -1,   560,   561,
     562,   563,   564,   565,    -1,    -1,   568,   569,    -1,   571,
     572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,
     582,    -1,   584,    -1,   586,    -1,    -1,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,    -1,    -1,    -1,    -1,   601,
      -1,   603,    -1,    -1,   606,   607,    -1,   609,   610,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    32,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    -1,    82,    -1,    84,    -1,    86,
      87,    88,    -1,    -1,    91,    92,    93,    -1,    95,    96,
      -1,    98,    99,   100,   101,   102,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,   111,    -1,    -1,   114,   115,   116,
      -1,   118,    -1,    -1,    -1,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,   161,    -1,   163,   164,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,   174,   175,    -1,
     177,    -1,    -1,   180,    -1,   182,   183,    -1,   185,   186,
      -1,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,   212,   213,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,   223,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
     237,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,   252,   253,    -1,    -1,   256,
     257,    -1,   259,   260,   261,    -1,    -1,    -1,    -1,   266,
      -1,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,    -1,    -1,   281,    -1,    -1,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,   404,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,   493,   494,   495,   496,
      -1,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,    -1,   512,   513,    -1,   515,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,    -1,   543,   544,    -1,    -1,
     547,   548,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,   560,   561,   562,   563,   564,   565,    -1,
      -1,   568,   569,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,   584,    -1,   586,
      -1,    -1,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
      -1,    -1,    -1,    -1,   601,    -1,   603,   604,    -1,   606,
     607,    -1,   609,   610,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      32,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    -1,
      82,    -1,    84,    -1,    86,    87,    88,    -1,    -1,    91,
      92,    93,    -1,    95,    96,    -1,    98,    99,   100,   101,
     102,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,   111,
      -1,    -1,   114,   115,   116,    -1,   118,    -1,    -1,    -1,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
      -1,    -1,   154,    -1,   156,   157,   158,   159,   160,   161,
      -1,   163,   164,   165,   166,   167,   168,   169,    -1,   171,
     172,   173,   174,   175,    -1,   177,    -1,    -1,   180,    -1,
     182,   183,    -1,   185,   186,    -1,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,    -1,
      -1,   203,   204,    -1,   206,   207,    -1,   209,   210,    -1,
     212,   213,    -1,   215,    -1,    -1,    -1,   219,   220,   221,
     222,   223,    -1,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,   237,    -1,    -1,   240,    -1,
      -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,
     252,   253,    -1,    -1,   256,   257,    -1,   259,   260,   261,
      -1,    -1,    -1,    -1,   266,    -1,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,    -1,    -1,   281,
      -1,    -1,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,    -1,   358,   359,   360,    -1,
     362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,    -1,    -1,   407,    -1,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,    -1,
     422,   423,    -1,   425,   426,   427,   428,   429,   430,    -1,
     432,   433,   434,    -1,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,
     492,   493,   494,   495,   496,    -1,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,    -1,
     512,   513,    -1,   515,   516,   517,   518,   519,   520,    -1,
      -1,    -1,   524,    -1,    -1,   527,    -1,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,    -1,    -1,
     552,    -1,    -1,    -1,   556,   557,    -1,    -1,   560,   561,
     562,   563,   564,   565,    -1,    -1,   568,   569,    -1,   571,
     572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,
     582,    -1,   584,    -1,   586,    -1,    -1,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,    -1,    -1,    -1,    -1,   601,
      -1,   603,   604,    -1,   606,   607,    -1,   609,   610,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    32,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    -1,    82,    -1,    84,    -1,    86,
      87,    88,    -1,    -1,    91,    92,    93,    -1,    95,    96,
      -1,    98,    99,   100,   101,   102,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,   111,    -1,    -1,   114,   115,   116,
      -1,   118,    -1,    -1,    -1,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,   161,    -1,   163,   164,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,   174,   175,    -1,
     177,    -1,    -1,   180,    -1,   182,   183,    -1,   185,   186,
      -1,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,   212,   213,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,   223,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
     237,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,   252,   253,    -1,    -1,   256,
     257,    -1,   259,   260,   261,    -1,    -1,    -1,    -1,   266,
      -1,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,    -1,    -1,   281,    -1,    -1,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,   404,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,   493,   494,   495,   496,
      -1,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,    -1,   512,   513,    -1,   515,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,    -1,   543,   544,    -1,    -1,
     547,   548,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,   560,   561,   562,   563,   564,   565,    -1,
      -1,   568,   569,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,   584,    -1,   586,
      -1,    -1,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
      -1,    -1,    -1,    -1,   601,    -1,   603,   604,    -1,   606,
     607,    -1,   609,   610,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      32,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    -1,
      82,    -1,    84,    -1,    86,    87,    88,    -1,    -1,    91,
      92,    93,    -1,    95,    96,    -1,    98,    99,   100,   101,
     102,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,   111,
      -1,    -1,   114,   115,   116,    -1,   118,    -1,    -1,    -1,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
      -1,    -1,   154,    -1,   156,   157,   158,   159,   160,   161,
      -1,   163,   164,   165,   166,   167,   168,   169,    -1,   171,
     172,   173,   174,   175,    -1,   177,    -1,    -1,   180,    -1,
     182,   183,    -1,   185,   186,    -1,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,    -1,
      -1,   203,   204,    -1,   206,   207,    -1,   209,   210,    -1,
     212,   213,    -1,   215,    -1,    -1,    -1,   219,   220,   221,
     222,   223,    -1,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,   237,    -1,    -1,   240,    -1,
      -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,
     252,   253,    -1,    -1,   256,   257,    -1,   259,   260,   261,
      -1,    -1,    -1,    -1,   266,    -1,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,    -1,    -1,   281,
      -1,    -1,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,    -1,   358,   359,   360,    -1,
     362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,    -1,    -1,   407,    -1,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,    -1,
     422,   423,    -1,   425,   426,   427,   428,   429,   430,    -1,
     432,   433,   434,    -1,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,
     492,   493,   494,   495,   496,    -1,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,    -1,
     512,   513,    -1,   515,   516,   517,   518,   519,   520,    -1,
      -1,    -1,   524,    -1,    -1,   527,    -1,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,    -1,    -1,
     552,    -1,    -1,    -1,   556,   557,    -1,    -1,   560,   561,
     562,   563,   564,   565,    -1,    -1,   568,   569,    -1,   571,
     572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,
     582,    -1,   584,    -1,   586,    -1,    -1,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,    -1,    -1,    -1,    -1,   601,
      -1,   603,   604,    -1,   606,   607,    -1,   609,   610,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    32,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    -1,    82,    -1,    84,    -1,    86,
      87,    88,    -1,    -1,    91,    92,    93,    -1,    95,    96,
      -1,    98,    99,   100,   101,   102,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,   111,    -1,    -1,   114,   115,   116,
      -1,   118,    -1,    -1,    -1,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,   161,    -1,   163,   164,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,   174,   175,    -1,
     177,    -1,    -1,   180,    -1,   182,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,   212,   213,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,   223,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
     237,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,   252,   253,    -1,    -1,   256,
     257,    -1,   259,   260,   261,    -1,    -1,    -1,    -1,   266,
      -1,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,    -1,    -1,   281,    -1,    -1,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,   404,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,   493,   494,   495,   496,
      -1,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,    -1,   512,   513,    -1,   515,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,    -1,   543,   544,    -1,    -1,
     547,   548,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,   560,   561,   562,   563,   564,   565,    -1,
      -1,   568,   569,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,   584,    -1,   586,
      -1,    -1,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
      -1,    -1,    -1,    -1,   601,    -1,   603,    -1,    -1,   606,
     607,    -1,   609,   610,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      32,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    -1,
      82,    -1,    84,    -1,    86,    87,    88,    -1,    -1,    91,
      92,    93,    -1,    95,    96,    -1,    98,    99,   100,   101,
     102,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,   111,
      -1,    -1,   114,   115,   116,    -1,   118,    -1,    -1,    -1,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
      -1,    -1,   154,    -1,   156,   157,   158,   159,   160,   161,
      -1,   163,   164,   165,   166,   167,   168,   169,    -1,   171,
     172,   173,   174,   175,    -1,   177,    -1,    -1,   180,    -1,
     182,   183,   184,   185,   186,    -1,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,    -1,
      -1,   203,   204,    -1,   206,   207,    -1,   209,   210,    -1,
     212,   213,    -1,   215,    -1,    -1,    -1,   219,   220,   221,
     222,   223,    -1,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,   237,    -1,    -1,   240,    -1,
      -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,
     252,   253,    -1,    -1,   256,   257,    -1,   259,   260,   261,
      -1,    -1,    -1,    -1,   266,    -1,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,    -1,    -1,   281,
      -1,    -1,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,    -1,   358,   359,   360,    -1,
     362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,    -1,    -1,   407,    -1,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,    -1,
     422,   423,    -1,   425,   426,   427,   428,   429,   430,    -1,
     432,   433,   434,    -1,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,
     492,   493,   494,   495,   496,    -1,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,    -1,
     512,   513,    -1,   515,   516,   517,   518,   519,   520,    -1,
      -1,    -1,   524,    -1,    -1,   527,    -1,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,    -1,    -1,
     552,    -1,    -1,    -1,   556,   557,    -1,    -1,   560,   561,
     562,   563,   564,   565,    -1,    -1,   568,   569,    -1,   571,
     572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,
     582,    -1,   584,    -1,   586,    -1,    -1,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,    -1,    -1,    -1,    -1,   601,
      -1,   603,    -1,    -1,   606,   607,    -1,   609,   610,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    32,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    -1,    82,    -1,    84,    -1,    86,
      87,    88,    -1,    -1,    91,    92,    93,    -1,    95,    96,
      -1,    98,    99,   100,   101,   102,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,   111,    -1,    -1,   114,   115,   116,
      -1,   118,    -1,    -1,    -1,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,   161,    -1,   163,   164,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,   174,   175,    -1,
     177,    -1,    -1,   180,    -1,   182,   183,   184,   185,   186,
      -1,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,   212,   213,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,   223,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
     237,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,   252,   253,    -1,    -1,   256,
     257,    -1,   259,   260,   261,    -1,    -1,    -1,    -1,   266,
      -1,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,    -1,    -1,   281,    -1,    -1,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,   404,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,   493,   494,   495,   496,
      -1,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,    -1,   512,   513,    -1,   515,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,    -1,   543,   544,    -1,    -1,
     547,   548,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,   560,   561,   562,   563,   564,   565,    -1,
      -1,   568,   569,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,   584,    -1,   586,
      -1,    -1,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
      -1,    -1,    -1,    -1,   601,    -1,   603,    -1,    -1,   606,
     607,    -1,   609,   610,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      32,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    -1,
      82,    -1,    84,    -1,    86,    87,    88,    -1,    -1,    91,
      92,    93,    -1,    95,    96,    -1,    98,    99,   100,   101,
     102,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,   111,
      -1,    -1,   114,   115,   116,    -1,   118,    -1,    -1,    -1,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
      -1,    -1,   154,    -1,   156,   157,   158,   159,   160,   161,
      -1,   163,   164,   165,   166,   167,   168,   169,    -1,   171,
     172,   173,   174,   175,    -1,   177,    -1,    -1,   180,    -1,
     182,   183,    -1,   185,   186,    -1,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,    -1,
      -1,   203,   204,    -1,   206,   207,    -1,   209,   210,    -1,
     212,   213,    -1,   215,    -1,    -1,    -1,   219,   220,   221,
     222,   223,    -1,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,   237,    -1,    -1,   240,    -1,
      -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,
     252,   253,    -1,    -1,   256,   257,    -1,   259,   260,   261,
      -1,    -1,    -1,    -1,   266,    -1,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,    -1,    -1,   281,
      -1,    -1,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,    -1,   358,   359,   360,    -1,
     362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,    -1,    -1,   407,    -1,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,    -1,
     422,   423,    -1,   425,   426,   427,   428,   429,   430,    -1,
     432,   433,   434,    -1,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,
     492,   493,   494,   495,   496,    -1,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,    -1,
     512,   513,    -1,   515,   516,   517,   518,   519,   520,    -1,
      -1,    -1,   524,    -1,    -1,   527,    -1,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,    -1,    -1,
     552,    -1,    -1,    -1,   556,   557,    -1,    -1,   560,   561,
     562,   563,   564,   565,    -1,    -1,   568,   569,    -1,   571,
     572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,
     582,    -1,   584,    -1,   586,    -1,    -1,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,    -1,    -1,    -1,    -1,   601,
      -1,   603,    -1,    -1,   606,   607,    -1,   609,   610,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    32,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    -1,    82,    -1,    84,    -1,    86,
      87,    88,    -1,    -1,    91,    92,    93,    -1,    95,    96,
      -1,    98,    99,   100,   101,   102,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,   111,    -1,    -1,   114,   115,   116,
      -1,   118,    -1,    -1,    -1,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,   161,    -1,   163,   164,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,   174,   175,    -1,
     177,    -1,    -1,   180,    -1,   182,   183,    -1,   185,   186,
      -1,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,   212,   213,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,   223,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
     237,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,   252,   253,    -1,    -1,   256,
     257,    -1,   259,   260,   261,    -1,    -1,    -1,    -1,   266,
      -1,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,    -1,    -1,   281,    -1,    -1,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,    -1,   351,   352,   353,    -1,   355,   356,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,   404,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,   493,   494,   495,   496,
      -1,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,    -1,   512,   513,    -1,   515,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,    -1,   543,   544,    -1,    -1,
     547,   548,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,   560,   561,   562,   563,   564,   565,    -1,
      -1,   568,   569,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,   584,    -1,   586,
      -1,    -1,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
      -1,    -1,    -1,    -1,   601,    -1,   603,    -1,    -1,   606,
     607,    -1,   609,   610,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      32,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    -1,
      82,    -1,    84,    -1,    86,    87,    88,    -1,    -1,    91,
      92,    93,    -1,    95,    96,    -1,    98,    99,   100,   101,
     102,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,   111,
      -1,    -1,   114,   115,   116,    -1,   118,    -1,    -1,    -1,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
      -1,    -1,   154,    -1,   156,   157,   158,   159,   160,   161,
      -1,   163,   164,   165,   166,   167,   168,   169,    -1,   171,
     172,   173,   174,   175,    -1,   177,    -1,    -1,   180,    -1,
     182,   183,    -1,   185,   186,    -1,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,    -1,
      -1,   203,   204,    -1,   206,   207,    -1,   209,   210,    -1,
     212,   213,    -1,   215,    -1,    -1,    -1,   219,   220,   221,
     222,   223,    -1,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,   237,    -1,    -1,   240,    -1,
      -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,
     252,   253,    -1,    -1,   256,   257,    -1,   259,   260,   261,
      -1,    -1,    -1,    -1,   266,    -1,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,    -1,    -1,   281,
      -1,    -1,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,    -1,   358,   359,   360,    -1,
     362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,    -1,    -1,   407,    -1,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,    -1,
     422,   423,    -1,   425,   426,   427,   428,   429,   430,    -1,
     432,   433,   434,    -1,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,
     492,   493,   494,   495,   496,    -1,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,    -1,
     512,   513,    -1,   515,   516,   517,   518,   519,   520,    -1,
      -1,    -1,   524,    -1,    -1,   527,    -1,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,    -1,    -1,
     552,    -1,    -1,    -1,   556,   557,    -1,    -1,   560,   561,
     562,   563,   564,   565,    -1,    -1,   568,   569,    -1,   571,
     572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,
     582,    -1,   584,    -1,   586,    -1,    -1,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,    -1,    -1,    -1,    -1,   601,
      -1,   603,    -1,    -1,   606,   607,    -1,   609,   610,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    32,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    -1,    82,    -1,    84,    -1,    86,
      87,    88,    -1,    -1,    91,    92,    93,    -1,    95,    96,
      -1,    98,    99,   100,   101,   102,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,   111,    -1,    -1,   114,   115,   116,
      -1,   118,    -1,    -1,    -1,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,   161,    -1,   163,   164,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,   174,   175,    -1,
     177,    -1,    -1,   180,    -1,   182,   183,    -1,   185,   186,
      -1,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,   212,   213,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,   223,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
     237,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,   252,   253,    -1,    -1,   256,
     257,    -1,   259,   260,   261,    -1,    -1,    -1,    -1,   266,
      -1,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,    -1,    -1,   281,    -1,    -1,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,   404,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,   493,   494,   495,   496,
      -1,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,    -1,   512,   513,    -1,   515,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,    -1,   543,   544,    -1,    -1,
     547,   548,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,   560,   561,   562,   563,   564,   565,    -1,
      -1,   568,   569,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,   584,    -1,   586,
      -1,    -1,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
      -1,    -1,    -1,    -1,   601,    -1,   603,    -1,    -1,   606,
     607,    -1,   609,   610,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      32,    33,    34,    -1,    36,    37,    38,    39,    40,    41,
      42,    -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    -1,
      82,    -1,    84,    -1,    86,    87,    88,    -1,    -1,    91,
      92,    93,    -1,    95,    96,    -1,    98,    99,   100,   101,
     102,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,   111,
      -1,    -1,   114,   115,   116,    -1,   118,    -1,    -1,    -1,
     122,   123,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
      -1,    -1,   154,    -1,   156,   157,   158,   159,   160,   161,
      -1,   163,   164,   165,   166,   167,   168,   169,    -1,   171,
     172,   173,   174,   175,    -1,   177,    -1,    -1,   180,    -1,
     182,   183,    -1,   185,   186,    -1,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,    -1,
      -1,   203,   204,    -1,   206,   207,    -1,   209,   210,    -1,
     212,   213,    -1,   215,    -1,    -1,    -1,   219,   220,   221,
     222,   223,    -1,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,   237,    -1,    -1,   240,    -1,
      -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,
     252,   253,    -1,    -1,   256,   257,    -1,   259,   260,   261,
      -1,    -1,    -1,    -1,   266,    -1,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,    -1,    -1,   281,
      -1,    -1,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,    -1,   358,   359,   360,    -1,
     362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,    -1,   401,
     402,   403,   404,    -1,    -1,   407,    -1,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,    -1,
     422,   423,    -1,   425,   426,   427,   428,   429,   430,    -1,
     432,   433,   434,    -1,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,
     492,   493,   494,   495,   496,    -1,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,    -1,
     512,   513,    -1,   515,   516,   517,   518,   519,   520,    -1,
      -1,    -1,   524,    -1,    -1,   527,    -1,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
      -1,   543,   544,    -1,    -1,   547,   548,   549,    -1,    -1,
     552,    -1,    -1,    -1,   556,   557,    -1,    -1,   560,   561,
     562,   563,   564,   565,    -1,    -1,   568,   569,    -1,   571,
     572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,
     582,    -1,   584,    -1,   586,    -1,    -1,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,    -1,    -1,    -1,    -1,   601,
      -1,   603,    -1,    -1,   606,   607,    -1,   609,   610,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    32,    33,    34,    -1,    36,
      37,    38,    39,    40,    41,    42,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    -1,    82,    -1,    84,    -1,    86,
      87,    88,    -1,    -1,    91,    92,    93,    -1,    95,    96,
      -1,    98,    99,   100,   101,   102,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,   111,    -1,    -1,   114,   115,   116,
      -1,   118,    -1,    -1,    -1,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,   161,    -1,   163,   164,   165,   166,
     167,   168,   169,    -1,   171,   172,   173,   174,   175,    -1,
     177,    -1,    -1,   180,    -1,   182,   183,    -1,   185,   186,
      -1,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,    -1,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,   212,   213,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,   223,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
     237,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,   252,   253,    -1,    -1,   256,
     257,    -1,   259,   260,   261,    -1,    -1,    -1,    -1,   266,
      -1,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,    -1,    -1,   281,    -1,    -1,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,    -1,   345,   346,
     347,   348,   349,    -1,   351,   352,   353,    -1,   355,   356,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,   404,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,   428,   429,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,   493,   494,   495,   496,
      -1,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,    -1,   512,   513,    -1,   515,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,    -1,   543,   544,    -1,    -1,
     547,   548,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,   560,   561,   562,   563,   564,   565,    -1,
      -1,   568,   569,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,   584,    -1,   586,
      -1,    -1,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
      -1,    -1,    -1,    -1,   601,    -1,   603,    -1,    -1,   606,
     607,    -1,   609,   610,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    34,    -1,    -1,    37,    -1,    -1,    -1,    41,
      -1,    -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    -1,    -1,    79,    -1,    -1,
      82,    83,    84,    -1,    -1,    -1,    -1,    -1,    -1,    91,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    99,   100,    -1,
      -1,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,    -1,
      -1,    -1,    -1,    -1,   116,    -1,   118,    -1,    -1,    -1,
      -1,    -1,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,    -1,   147,   148,   149,   150,   151,
      -1,    -1,   154,    -1,   156,   157,   158,   159,   160,    -1,
      -1,   163,    -1,   165,   166,    -1,    -1,   169,    -1,    -1,
     172,   173,   174,    -1,    -1,   177,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,   187,   188,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,    -1,   199,   200,    -1,
      -1,   203,    -1,    -1,    -1,    -1,    -1,   209,   210,    -1,
     212,    -1,    -1,   215,    -1,    -1,    -1,   219,   220,   221,
     222,    -1,    -1,   225,   226,   227,    -1,   229,    -1,   231,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,   240,    -1,
      -1,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,   251,
      -1,   253,    -1,    -1,    -1,   257,    -1,    -1,   260,   261,
      -1,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
      -1,    -1,   274,    -1,   276,   277,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,   288,   289,   290,   291,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,
     322,   323,    -1,    -1,   326,    -1,   328,    -1,   330,    -1,
      -1,   333,   334,   335,   336,   337,   338,   339,    -1,    -1,
     342,   343,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
     352,   353,    -1,    -1,    -1,    -1,   358,   359,   360,    -1,
     362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,   377,   378,   379,   380,   381,
      -1,   383,   384,   385,    -1,   387,    -1,   389,    -1,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,    -1,   401,
     402,   403,    -1,    -1,    -1,   407,    -1,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,    -1,
     422,   423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,
     432,   433,   434,    -1,   436,   437,    -1,    -1,    -1,   441,
     442,    -1,   444,   445,    -1,   447,   448,   449,   450,   451,
      -1,   453,   454,   455,    -1,    -1,   458,   459,   460,    -1,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,
     472,   473,   474,   475,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,
     492,    -1,    -1,   495,   496,    -1,   498,   499,   500,   501,
     502,    -1,    -1,    -1,   506,   507,    -1,   509,   510,    -1,
     512,   513,    -1,    -1,   516,   517,   518,   519,   520,    -1,
      -1,    -1,   524,    -1,    -1,   527,    -1,   529,    -1,    -1,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,   543,   544,    -1,    -1,    -1,    -1,   549,    -1,    -1,
     552,    -1,    -1,    -1,   556,   557,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   565,    -1,    -1,   568,    -1,    -1,   571,
     572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,
     582,    -1,    -1,     6,   586,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,   610,    32,
      -1,    34,    -1,    -1,    37,    -1,    -1,    -1,    41,    -1,
      -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    -1,    71,    72,
      73,    74,    75,    76,    -1,    -1,    79,    -1,    -1,    82,
      83,    84,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    -1,    -1,    -1,    98,    99,   100,    -1,    -1,
     103,    -1,    -1,    -1,    -1,   108,    -1,   110,    -1,    -1,
      -1,    -1,    -1,   116,    -1,   118,    -1,    -1,    -1,    -1,
      -1,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
      -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,    -1,   147,   148,   149,   150,   151,    -1,
      -1,   154,    -1,   156,   157,   158,   159,   160,    -1,    -1,
     163,    -1,   165,   166,    -1,    -1,   169,    -1,    -1,   172,
     173,   174,    -1,    -1,   177,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,   187,   188,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,    -1,   199,   200,    -1,    -1,
     203,    -1,    -1,    -1,    -1,    -1,   209,   210,    -1,   212,
      -1,    -1,   215,    -1,    -1,    -1,   219,   220,   221,   222,
      -1,    -1,   225,   226,   227,    -1,   229,    -1,   231,    -1,
      -1,    -1,   235,   236,    -1,    -1,    -1,   240,    -1,    -1,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,   251,    -1,
     253,    -1,    -1,    -1,   257,    -1,    -1,   260,   261,    -1,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,   290,   291,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,   311,    -1,
      -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,   322,
     323,    -1,    -1,   326,    -1,   328,    -1,   330,    -1,    -1,
     333,   334,   335,   336,   337,   338,   339,    -1,    -1,   342,
     343,    -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,
     353,    -1,    -1,    -1,    -1,   358,   359,   360,    -1,   362,
     363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,   385,    -1,   387,    -1,   389,    -1,    -1,   392,
     393,   394,    -1,   396,    -1,   398,   399,    -1,   401,   402,
     403,    -1,    -1,    -1,   407,    -1,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,    -1,   422,
     423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,   432,
     433,   434,    -1,   436,   437,    -1,    -1,    -1,   441,   442,
      -1,   444,   445,    -1,   447,   448,   449,   450,   451,    -1,
     453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,    -1,
     463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,   472,
     473,   474,   475,    -1,    -1,    -1,    -1,    -1,   481,   482,
      -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,   492,
      -1,    -1,   495,   496,    -1,   498,   499,   500,   501,   502,
      -1,    -1,    -1,   506,   507,    -1,   509,   510,    -1,   512,
     513,    -1,    -1,   516,   517,   518,   519,   520,    -1,    -1,
      -1,   524,    -1,    -1,   527,    -1,   529,    -1,    -1,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,    -1,    -1,
     543,   544,    -1,    -1,    -1,    -1,   549,    -1,    -1,   552,
      -1,    -1,    -1,   556,   557,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   565,    -1,    -1,   568,    -1,    -1,   571,   572,
     573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,   582,
      -1,    -1,     6,   586,     8,     9,    10,    11,    12,    -1,
      -1,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,   610,    32,    -1,
      34,    -1,    -1,    37,    -1,    -1,    -1,    41,    -1,    -1,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    -1,    71,    72,    73,
      74,    75,    76,    -1,    -1,    79,    -1,    -1,    82,    -1,
      84,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    98,    99,   100,    -1,    -1,   103,
      -1,    -1,    -1,    -1,   108,    -1,   110,    -1,    -1,    -1,
      -1,    -1,   116,    -1,   118,    -1,    -1,    -1,    -1,    -1,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,    -1,   147,   148,   149,   150,   151,    -1,    -1,
     154,    -1,   156,   157,   158,   159,   160,    -1,    -1,   163,
      -1,   165,   166,    -1,    -1,   169,    -1,    -1,   172,   173,
     174,    -1,    -1,   177,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,    -1,   188,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,    -1,   199,   200,    -1,    -1,   203,
      -1,    -1,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,
      -1,   215,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
      -1,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
      -1,   235,   236,    -1,    -1,    -1,   240,    -1,    -1,   243,
     244,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,
      -1,    -1,    -1,   257,    -1,    -1,   260,   261,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,    -1,
     274,    -1,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,   288,   289,   290,   291,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,   307,    -1,   309,   310,   311,    -1,    -1,
      -1,   315,   316,   317,   318,   319,    -1,    -1,   322,   323,
      -1,    -1,   326,    -1,   328,    -1,   330,    -1,    -1,   333,
     334,   335,   336,   337,   338,   339,    -1,    -1,   342,   343,
      -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,   353,
      -1,    -1,    -1,    -1,   358,   359,   360,    -1,   362,   363,
     364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   375,   376,   377,   378,   379,   380,   381,    -1,   383,
     384,   385,    -1,   387,    -1,   389,    -1,    -1,   392,   393,
     394,    -1,   396,    -1,   398,   399,    -1,   401,   402,   403,
      -1,    -1,    -1,   407,    -1,    -1,    -1,   411,   412,   413,
     414,   415,    -1,    -1,   418,   419,   420,    -1,   422,   423,
      -1,   425,   426,   427,    -1,    -1,   430,    -1,   432,   433,
     434,    -1,   436,   437,    -1,    -1,    -1,   441,   442,    -1,
     444,   445,    -1,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,    -1,    -1,   458,   459,   460,    -1,    -1,   463,
      -1,    -1,    -1,   467,   468,   469,   470,    -1,   472,   473,
     474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,
     484,    -1,    -1,   487,    -1,    -1,   490,   491,   492,    -1,
      -1,   495,   496,    -1,   498,   499,   500,   501,   502,    -1,
      -1,    -1,   506,   507,    -1,   509,   510,    -1,   512,   513,
      -1,    -1,   516,   517,   518,   519,   520,    -1,    -1,    -1,
     524,    -1,    -1,   527,    -1,   529,    -1,    -1,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,    -1,    -1,   543,
     544,    -1,    -1,    -1,    -1,   549,    -1,    -1,   552,    -1,
      -1,    -1,   556,   557,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   565,    -1,    -1,   568,    -1,    -1,   571,   572,   573,
     574,    -1,    -1,    -1,    -1,   579,    -1,   581,   582,    -1,
      -1,    -1,   586,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,
     604,    -1,    18,    -1,    -1,    21,   610,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    34,    -1,
      -1,    37,    -1,    -1,    -1,    41,    -1,    -1,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    -1,    71,    72,    73,    74,    75,
      76,    -1,    -1,    79,    -1,    -1,    82,    -1,    84,    -1,
      -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,
      -1,    -1,    98,    99,   100,    -1,    -1,   103,    -1,    -1,
      -1,    -1,   108,    -1,   110,    -1,    -1,    -1,    -1,    -1,
     116,    -1,   118,    -1,    -1,    -1,    -1,    -1,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
      -1,   147,   148,   149,   150,   151,    -1,    -1,   154,    -1,
     156,   157,   158,   159,   160,    -1,    -1,   163,    -1,   165,
     166,    -1,    -1,   169,    -1,    -1,   172,   173,   174,    -1,
      -1,   177,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,    -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,    -1,   199,   200,    -1,    -1,   203,    -1,    -1,
      -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,
      -1,    -1,    -1,   219,   220,   221,   222,    -1,    -1,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,    -1,   235,
     236,    -1,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,
      -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,
      -1,   257,    -1,    -1,   260,   261,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,    -1,   274,    -1,
     276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,   288,   289,   290,   291,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,   311,    -1,    -1,    -1,   315,
     316,   317,   318,   319,    -1,    -1,   322,   323,    -1,    -1,
     326,    -1,   328,    -1,   330,    -1,    -1,   333,   334,   335,
     336,   337,   338,   339,    -1,    -1,   342,   343,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,
      -1,    -1,   358,   359,   360,    -1,   362,   363,   364,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,
     376,   377,   378,   379,   380,   381,    -1,   383,   384,   385,
      -1,   387,    -1,   389,    -1,    -1,   392,   393,   394,    -1,
     396,    -1,   398,   399,    -1,   401,   402,   403,    -1,    -1,
      -1,   407,    -1,    -1,    -1,   411,   412,   413,   414,   415,
      -1,    -1,   418,   419,   420,    -1,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,   432,   433,   434,    -1,
     436,   437,    -1,    -1,    -1,   441,   442,    -1,   444,   445,
      -1,   447,   448,   449,   450,   451,    -1,   453,   454,    -1,
      -1,    -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,
      -1,   467,   468,   469,   470,    -1,   472,   473,   474,    -1,
      -1,    -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,
      -1,   487,    -1,    -1,   490,   491,   492,    -1,    -1,   495,
     496,    -1,   498,   499,   500,   501,   502,    -1,    -1,    -1,
     506,   507,    -1,   509,   510,    -1,   512,   513,    -1,    -1,
     516,   517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,
      -1,   527,    -1,   529,    -1,    -1,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,   543,   544,    -1,
      -1,    -1,    -1,   549,    -1,    -1,   552,    -1,    -1,    -1,
     556,   557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,
      -1,    -1,   568,    -1,    -1,   571,   572,   573,   574,    -1,
      -1,    -1,    -1,   579,    -1,   581,   582,    -1,    -1,    -1,
     586,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       6,    -1,     8,     9,    10,    11,    12,    -1,   604,    -1,
      -1,    -1,    18,   609,   610,    21,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    34,    -1,
      -1,    37,    -1,    -1,    -1,    41,    -1,    -1,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    -1,    71,    72,    73,    74,    75,
      76,    -1,    -1,    79,    -1,    -1,    82,    -1,    84,    -1,
      -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,
      -1,    -1,    98,    99,   100,    -1,    -1,   103,    -1,    -1,
      -1,    -1,   108,    -1,   110,    -1,    -1,    -1,    -1,    -1,
     116,    -1,   118,    -1,    -1,    -1,    -1,    -1,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
      -1,   147,   148,   149,   150,   151,    -1,    -1,   154,    -1,
     156,   157,   158,   159,   160,    -1,    -1,   163,    -1,   165,
     166,    -1,    -1,   169,    -1,    -1,   172,   173,   174,    -1,
      -1,   177,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,    -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,    -1,   199,   200,    -1,    -1,   203,    -1,    -1,
      -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,
      -1,    -1,    -1,   219,   220,   221,   222,    -1,    -1,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,    -1,   235,
     236,    -1,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,
      -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,
      -1,   257,    -1,    -1,   260,   261,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,    -1,   274,    -1,
     276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,   288,   289,   290,   291,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,   311,    -1,    -1,    -1,   315,
     316,   317,   318,   319,    -1,    -1,   322,   323,    -1,    -1,
     326,    -1,   328,    -1,   330,    -1,    -1,   333,   334,   335,
     336,   337,   338,   339,    -1,    -1,   342,   343,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,
      -1,    -1,   358,   359,   360,    -1,   362,   363,   364,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,
     376,   377,   378,   379,   380,   381,    -1,   383,   384,   385,
      -1,   387,    -1,   389,    -1,    -1,   392,   393,   394,    -1,
     396,    -1,   398,   399,    -1,   401,   402,   403,    -1,    -1,
      -1,   407,    -1,    -1,    -1,   411,   412,   413,   414,   415,
      -1,    -1,   418,   419,   420,    -1,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,   432,   433,   434,    -1,
     436,   437,    -1,    -1,    -1,   441,   442,    -1,   444,   445,
      -1,   447,   448,   449,   450,   451,    -1,   453,   454,   455,
      -1,    -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,
      -1,   467,   468,   469,   470,    -1,   472,   473,   474,    -1,
      -1,    -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,
      -1,   487,    -1,    -1,   490,   491,   492,    -1,    -1,   495,
     496,    -1,   498,   499,   500,   501,   502,    -1,    -1,    -1,
     506,   507,    -1,   509,   510,    -1,   512,   513,    -1,    -1,
     516,   517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,
      -1,   527,    -1,   529,    -1,    -1,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,   543,   544,    -1,
      -1,    -1,    -1,   549,    -1,    -1,   552,    -1,    -1,    -1,
     556,   557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,
      -1,    -1,   568,    -1,    -1,   571,   572,   573,   574,    -1,
      -1,    -1,    -1,   579,    -1,   581,   582,    -1,    -1,     6,
     586,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,   610,    32,    -1,    34,    -1,    -1,
      37,    -1,    -1,    -1,    41,    -1,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      -1,    -1,    79,    -1,    -1,    82,    -1,    84,    -1,    -1,
      -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    99,   100,    -1,    -1,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,    -1,    -1,    -1,    -1,    -1,   116,
      -1,   118,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,    -1,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,    -1,    -1,   163,    -1,   165,   166,
      -1,    -1,   169,    -1,    -1,   172,   173,   174,    -1,    -1,
     177,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
      -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,    -1,   199,   200,    -1,    -1,   203,    -1,    -1,    -1,
      -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,    -1,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,    -1,   235,   236,
      -1,   238,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,    -1,
     257,    -1,    -1,   260,   261,    -1,    -1,    -1,    -1,    -1,
      -1,   268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,   290,   291,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,    -1,    -1,   326,
      -1,   328,    -1,   330,    -1,    -1,   333,   334,   335,   336,
     337,   338,   339,    -1,    -1,   342,   343,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,   385,    -1,
     387,    -1,   389,    -1,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,    -1,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,    -1,    -1,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,    -1,   441,   442,    -1,   444,   445,    -1,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,    -1,    -1,   495,   496,
      -1,   498,   499,   500,   501,   502,    -1,    -1,    -1,   506,
     507,    -1,   509,   510,    -1,   512,   513,    -1,    -1,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,    -1,    -1,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,
      -1,    -1,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,
      -1,   568,    -1,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,    -1,     6,   586,
       8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,
      18,    -1,    -1,    21,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,   610,    32,    -1,    34,    -1,    -1,    37,
      -1,    -1,    -1,    41,    -1,    -1,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    -1,    71,    72,    73,    74,    75,    76,    -1,
      -1,    79,    -1,    -1,    82,    -1,    84,    -1,    -1,    -1,
      -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,
      98,    99,   100,    -1,    -1,   103,    -1,    -1,    -1,    -1,
     108,    -1,   110,    -1,    -1,    -1,    -1,    -1,   116,    -1,
     118,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,    -1,   147,
     148,   149,   150,   151,    -1,    -1,   154,    -1,   156,   157,
     158,   159,   160,    -1,    -1,   163,    -1,   165,   166,    -1,
      -1,   169,    -1,    -1,   172,   173,   174,    -1,    -1,   177,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,    -1,
     188,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
      -1,   199,   200,    -1,    -1,   203,    -1,    -1,    -1,    -1,
      -1,   209,   210,    -1,   212,    -1,    -1,   215,    -1,    -1,
      -1,   219,   220,   221,   222,    -1,    -1,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,    -1,   235,   236,    -1,
      -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,    -1,
      -1,    -1,    -1,   251,    -1,   253,    -1,    -1,    -1,   257,
      -1,    -1,   260,   261,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
     288,   289,   290,   291,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,   311,    -1,    -1,    -1,   315,   316,   317,
     318,   319,    -1,    -1,   322,   323,    -1,    -1,   326,    -1,
     328,    -1,   330,    -1,    -1,   333,   334,   335,   336,   337,
     338,   339,    -1,    -1,   342,   343,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,    -1,
     358,   359,   360,    -1,   362,   363,   364,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,   385,    -1,   387,
      -1,   389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,
     398,   399,    -1,   401,   402,   403,    -1,    -1,    -1,   407,
      -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,
     418,   419,   420,    -1,   422,   423,    -1,   425,   426,   427,
      -1,    -1,   430,    -1,   432,   433,   434,    -1,   436,   437,
      -1,    -1,    -1,   441,   442,    -1,   444,   445,    -1,   447,
     448,   449,   450,   451,    -1,   453,   454,    -1,    -1,    -1,
     458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,   467,
     468,   469,   470,    -1,   472,   473,   474,    -1,    -1,    -1,
      -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,   487,
      -1,    -1,   490,   491,   492,    -1,    -1,   495,   496,    -1,
     498,   499,   500,   501,   502,    -1,    -1,    -1,   506,   507,
      -1,   509,   510,    -1,   512,   513,    -1,    -1,   516,   517,
     518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,   527,
      -1,   529,    -1,    -1,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,    -1,
      -1,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,   557,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,
     568,    -1,    -1,   571,   572,   573,   574,    -1,    -1,    -1,
      -1,   579,    -1,   581,   582,    -1,    -1,    -1,   586,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     6,   597,
       8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,
      18,    -1,   610,    21,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    34,    -1,    -1,    37,
      -1,    -1,    -1,    41,    -1,    -1,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    -1,    71,    72,    73,    74,    75,    76,    -1,
      -1,    79,    -1,    -1,    82,    -1,    84,    -1,    -1,    -1,
      -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,
      98,    99,   100,    -1,    -1,   103,    -1,    -1,    -1,    -1,
     108,    -1,   110,    -1,    -1,    -1,    -1,    -1,   116,    -1,
     118,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,    -1,   147,
     148,   149,   150,   151,    -1,    -1,   154,    -1,   156,   157,
     158,   159,   160,    -1,    -1,   163,    -1,   165,   166,    -1,
      -1,   169,    -1,    -1,   172,   173,   174,    -1,    -1,   177,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,    -1,
     188,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
      -1,   199,   200,    -1,    -1,   203,    -1,    -1,    -1,    -1,
      -1,   209,   210,    -1,   212,    -1,    -1,   215,    -1,    -1,
      -1,   219,   220,   221,   222,    -1,    -1,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,    -1,   235,   236,    -1,
      -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,    -1,
      -1,    -1,    -1,   251,    -1,   253,    -1,    -1,    -1,   257,
      -1,    -1,   260,   261,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
     288,   289,   290,   291,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,   311,    -1,    -1,    -1,   315,   316,   317,
     318,   319,    -1,    -1,   322,   323,    -1,    -1,   326,    -1,
     328,    -1,   330,    -1,    -1,   333,   334,   335,   336,   337,
     338,   339,    -1,    -1,   342,   343,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,    -1,
     358,   359,   360,    -1,   362,   363,   364,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,   385,    -1,   387,
      -1,   389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,
     398,   399,    -1,   401,   402,   403,    -1,    -1,    -1,   407,
      -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,
     418,   419,   420,    -1,   422,   423,    -1,   425,   426,   427,
      -1,    -1,   430,    -1,   432,   433,   434,    -1,   436,   437,
      -1,    -1,    -1,   441,   442,    -1,   444,   445,    -1,   447,
     448,   449,   450,   451,    -1,   453,   454,    -1,    -1,    -1,
     458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,   467,
     468,   469,   470,    -1,   472,   473,   474,    -1,    -1,    -1,
      -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,   487,
      -1,    -1,   490,   491,   492,    -1,    -1,   495,   496,    -1,
     498,   499,   500,   501,   502,    -1,    -1,    -1,   506,   507,
      -1,   509,   510,    -1,   512,   513,    -1,    -1,   516,   517,
     518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,   527,
      -1,   529,    -1,    -1,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,    -1,
      -1,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,   557,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,
     568,    -1,    -1,   571,   572,   573,   574,    -1,    -1,    -1,
      -1,   579,    -1,   581,   582,    -1,    -1,     6,   586,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    18,
      -1,    -1,    21,    -1,    23,   603,    25,    26,    27,    28,
      29,    30,   610,    32,    -1,    34,    -1,    -1,    37,    -1,
      -1,    -1,    41,    -1,    -1,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    -1,    71,    72,    73,    74,    75,    76,    -1,    -1,
      79,    -1,    -1,    82,    -1,    84,    -1,    -1,    -1,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    98,
      99,   100,    -1,    -1,   103,    -1,    -1,    -1,    -1,   108,
      -1,   110,    -1,    -1,    -1,    -1,    -1,   116,    -1,   118,
      -1,    -1,    -1,    -1,    -1,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,    -1,   147,   148,
     149,   150,   151,    -1,    -1,   154,    -1,   156,   157,   158,
     159,   160,    -1,    -1,   163,    -1,   165,   166,    -1,    -1,
     169,    -1,    -1,   172,   173,   174,    -1,    -1,   177,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,    -1,   188,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,
     199,   200,    -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,
     209,   210,    -1,   212,    -1,    -1,   215,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,    -1,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,    -1,   235,   236,    -1,    -1,
      -1,   240,    -1,    -1,   243,   244,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,   253,    -1,    -1,    -1,   257,    -1,
      -1,   260,   261,    -1,    -1,    -1,    -1,    -1,    -1,   268,
     269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,   290,   291,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,   311,    -1,    -1,    -1,   315,   316,   317,   318,
     319,    -1,    -1,   322,   323,    -1,    -1,   326,    -1,   328,
      -1,   330,    -1,    -1,   333,   334,   335,   336,   337,   338,
     339,    -1,    -1,   342,   343,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,    -1,    -1,   358,
     359,   360,    -1,   362,   363,   364,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   375,   376,   377,   378,
     379,   380,   381,    -1,   383,   384,   385,    -1,   387,    -1,
     389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,
     399,    -1,   401,   402,   403,    -1,    -1,    -1,   407,    -1,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,    -1,   422,   423,    -1,   425,   426,   427,    -1,
      -1,   430,    -1,   432,   433,   434,    -1,   436,   437,    -1,
      -1,    -1,   441,   442,    -1,   444,   445,    -1,   447,   448,
     449,   450,   451,    -1,   453,   454,    -1,    -1,    -1,   458,
     459,   460,    -1,    -1,   463,    -1,    -1,    -1,   467,   468,
     469,   470,    -1,   472,   473,   474,    -1,    -1,    -1,    -1,
      -1,    -1,   481,   482,    -1,   484,    -1,    -1,   487,    -1,
      -1,   490,   491,   492,    -1,    -1,   495,   496,    -1,   498,
     499,   500,   501,   502,    -1,    -1,    -1,   506,   507,    -1,
     509,   510,    -1,   512,   513,    -1,    -1,   516,   517,   518,
     519,   520,    -1,    -1,    -1,   524,    -1,    -1,   527,    -1,
     529,    -1,    -1,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,    -1,    -1,   543,   544,    -1,    -1,    -1,    -1,
     549,    -1,    -1,   552,    -1,    -1,    -1,   556,   557,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,   568,
      -1,    -1,   571,   572,   573,   574,    -1,    -1,    -1,    -1,
     579,    -1,   581,   582,    -1,    -1,    -1,   586,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    18,
     609,   610,    21,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    34,    -1,    -1,    37,    -1,
      -1,    -1,    41,    -1,    -1,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    -1,    71,    72,    73,    74,    75,    76,    -1,    -1,
      79,    -1,    -1,    82,    -1,    84,    -1,    -1,    -1,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    98,
      99,   100,    -1,    -1,   103,    -1,    -1,    -1,    -1,   108,
      -1,   110,    -1,    -1,    -1,    -1,    -1,   116,    -1,   118,
      -1,    -1,    -1,    -1,    -1,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,    -1,   147,   148,
     149,   150,   151,    -1,    -1,   154,    -1,   156,   157,   158,
     159,   160,    -1,    -1,   163,    -1,   165,   166,    -1,    -1,
     169,    -1,    -1,   172,   173,   174,    -1,    -1,   177,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,    -1,   188,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,
     199,   200,    -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,
     209,   210,    -1,   212,    -1,    -1,   215,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,    -1,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,    -1,   235,   236,    -1,    -1,
      -1,   240,    -1,    -1,   243,   244,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,   253,    -1,    -1,    -1,   257,    -1,
      -1,   260,   261,    -1,    -1,    -1,    -1,    -1,    -1,   268,
     269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,   290,   291,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,   311,    -1,    -1,    -1,   315,   316,   317,   318,
     319,    -1,    -1,   322,   323,    -1,    -1,   326,    -1,   328,
      -1,   330,    -1,    -1,   333,   334,   335,   336,   337,   338,
     339,    -1,    -1,   342,   343,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,    -1,    -1,   358,
     359,   360,    -1,   362,   363,   364,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   375,   376,   377,   378,
     379,   380,   381,    -1,   383,   384,   385,    -1,   387,    -1,
     389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,
     399,    -1,   401,   402,   403,    -1,    -1,    -1,   407,    -1,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,    -1,   422,   423,    -1,   425,   426,   427,    -1,
      -1,   430,    -1,   432,   433,   434,    -1,   436,   437,    -1,
      -1,    -1,   441,   442,    -1,   444,   445,    -1,   447,   448,
     449,   450,   451,    -1,   453,   454,    -1,    -1,    -1,   458,
     459,   460,    -1,    -1,   463,    -1,    -1,    -1,   467,   468,
     469,   470,    -1,   472,   473,   474,    -1,    -1,    -1,    -1,
      -1,    -1,   481,   482,    -1,   484,    -1,    -1,   487,    -1,
      -1,   490,   491,   492,    -1,    -1,   495,   496,    -1,   498,
     499,   500,   501,   502,    -1,    -1,    -1,   506,   507,    -1,
     509,   510,    -1,   512,   513,    -1,    -1,   516,   517,   518,
     519,   520,    -1,    -1,    -1,   524,    -1,    -1,   527,    -1,
     529,    -1,    -1,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,    -1,    -1,   543,   544,    -1,    -1,    -1,    -1,
     549,    -1,    -1,   552,    -1,    -1,    -1,   556,   557,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,   568,
      -1,    -1,   571,   572,   573,   574,    -1,    -1,    -1,    -1,
     579,    -1,   581,   582,    -1,    -1,     6,   586,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    -1,    -1,    18,    -1,
      -1,    21,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,   610,    32,    -1,    34,    -1,    -1,    37,    -1,    -1,
      -1,    41,    -1,    -1,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      -1,    71,    72,    73,    74,    75,    76,    -1,    -1,    79,
      -1,    -1,    82,    -1,    84,    -1,    -1,    -1,    -1,    -1,
      -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    98,    99,
     100,    -1,    -1,   103,    -1,    -1,    -1,    -1,   108,    -1,
     110,    -1,    -1,    -1,    -1,    -1,   116,    -1,   118,    -1,
      -1,    -1,    -1,    -1,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,    -1,   147,   148,   149,
     150,   151,    -1,    -1,   154,    -1,   156,   157,   158,   159,
     160,    -1,    -1,   163,    -1,   165,   166,    -1,    -1,   169,
      -1,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,    -1,   188,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,   199,
     200,    -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,   209,
     210,    -1,   212,    -1,    -1,   215,    -1,    -1,    -1,   219,
     220,   221,   222,    -1,    -1,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,    -1,   235,   236,    -1,    -1,    -1,
     240,    -1,    -1,   243,   244,    -1,    -1,    -1,    -1,    -1,
      -1,   251,    -1,   253,    -1,    -1,    -1,   257,    -1,    -1,
     260,   261,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,    -1,    -1,   274,    -1,   276,   277,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,
     290,   291,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,    -1,   304,   305,   306,   307,    -1,   309,
     310,   311,    -1,    -1,    -1,   315,   316,   317,   318,   319,
      -1,    -1,   322,   323,    -1,    -1,   326,    -1,   328,    -1,
     330,    -1,    -1,   333,   334,   335,   336,   337,   338,   339,
      -1,    -1,   342,   343,    -1,   345,   346,   347,   348,    -1,
      -1,    -1,   352,   353,    -1,    -1,    -1,    -1,   358,   359,
     360,    -1,   362,   363,   364,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   375,   376,   377,   378,   379,
     380,   381,    -1,   383,   384,   385,    -1,   387,    -1,   389,
      -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,   399,
      -1,   401,   402,   403,    -1,    -1,    -1,   407,    -1,    -1,
      -1,   411,   412,   413,   414,   415,    -1,    -1,   418,   419,
     420,    -1,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,   432,   433,   434,    -1,   436,   437,    -1,    -1,
      -1,   441,   442,    -1,   444,   445,    -1,   447,   448,   449,
     450,   451,    -1,   453,   454,    -1,    -1,    -1,   458,   459,
     460,    -1,    -1,   463,    -1,    -1,    -1,   467,   468,   469,
     470,    -1,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,   481,   482,    -1,   484,    -1,    -1,   487,    -1,    -1,
     490,   491,   492,    -1,    -1,   495,   496,    -1,   498,   499,
     500,   501,   502,    -1,    -1,    -1,   506,   507,    -1,   509,
     510,    -1,   512,   513,    -1,    -1,   516,   517,   518,   519,
     520,    -1,    -1,    -1,   524,    -1,    -1,   527,    -1,   529,
      -1,    -1,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,    -1,    -1,   549,
      -1,    -1,   552,    -1,    -1,    -1,   556,   557,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,   568,    -1,
      -1,   571,   572,   573,   574,    -1,    -1,    -1,    -1,   579,
      -1,   581,   582,    -1,    -1,     6,   586,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,
      21,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
     610,    32,    -1,    34,    -1,    -1,    37,    -1,    -1,    -1,
      41,    -1,    -1,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    -1,
      71,    72,    73,    74,    75,    76,    -1,    -1,    79,    -1,
      -1,    82,    -1,    84,    -1,    -1,    -1,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    -1,    -1,    -1,    98,    99,   100,
      -1,    -1,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,
      -1,    -1,    -1,    -1,    -1,   116,    -1,   118,    -1,    -1,
      -1,    -1,    -1,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,    -1,   147,   148,   149,   150,
     151,    -1,    -1,   154,    -1,   156,   157,   158,   159,   160,
      -1,    -1,   163,    -1,   165,   166,    -1,    -1,   169,    -1,
      -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,    -1,   188,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,    -1,   199,   200,
      -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,   209,   210,
      -1,   212,    -1,    -1,   215,    -1,    -1,    -1,   219,   220,
     221,   222,    -1,    -1,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,    -1,   235,   236,    -1,    -1,    -1,   240,
      -1,    -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,   253,    -1,    -1,    -1,   257,    -1,    -1,   260,
     261,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,
     271,    -1,    -1,   274,    -1,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,   290,
     291,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
     311,    -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,
      -1,   322,   323,    -1,    -1,   326,    -1,   328,    -1,   330,
      -1,    -1,   333,   334,   335,   336,   337,   338,   339,    -1,
      -1,   342,   343,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,   352,   353,    -1,    -1,    -1,    -1,   358,   359,   360,
      -1,   362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   375,   376,   377,   378,   379,   380,
     381,    -1,   383,   384,   385,    -1,   387,    -1,   389,    -1,
      -1,   392,   393,   394,    -1,   396,    -1,   398,   399,    -1,
     401,   402,   403,    -1,    -1,    -1,   407,    -1,    -1,    -1,
     411,   412,   413,   414,   415,    -1,    -1,   418,   419,   420,
      -1,   422,   423,    -1,   425,   426,   427,    -1,    -1,   430,
      -1,   432,   433,   434,    -1,   436,   437,    -1,    -1,    -1,
     441,   442,    -1,   444,   445,    -1,   447,   448,   449,   450,
     451,    -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,
      -1,    -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,
      -1,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,
     481,   482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,
     491,   492,    -1,    -1,   495,   496,    -1,   498,   499,   500,
     501,   502,    -1,    -1,    -1,   506,   507,    -1,   509,   510,
      -1,   512,   513,    -1,    -1,   516,   517,   518,   519,   520,
      -1,    -1,    -1,   524,    -1,    -1,   527,    -1,   529,    -1,
      -1,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
      -1,    -1,   543,   544,    -1,    -1,    -1,    -1,   549,    -1,
      -1,   552,    -1,    -1,    -1,   556,   557,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   565,    -1,    -1,   568,    -1,    -1,
     571,   572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,
     581,   582,    -1,    -1,     6,   586,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,   610,
      32,    -1,    34,    -1,    -1,    37,    -1,    -1,    -1,    41,
      -1,    -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    -1,    -1,    79,    -1,    -1,
      82,    -1,    84,    -1,    -1,    -1,    -1,    -1,    -1,    91,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    99,   100,    -1,
      -1,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,    -1,
      -1,    -1,    -1,    -1,   116,    -1,   118,    -1,    -1,    -1,
      -1,    -1,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,    -1,   147,   148,   149,   150,   151,
      -1,    -1,   154,    -1,   156,   157,   158,   159,   160,    -1,
      -1,   163,    -1,   165,   166,    -1,    -1,   169,    -1,    -1,
     172,   173,   174,    -1,    -1,   177,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,    -1,   188,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,    -1,   199,   200,    -1,
      -1,   203,    -1,    -1,    -1,    -1,    -1,   209,   210,    -1,
     212,    -1,    -1,   215,    -1,    -1,    -1,   219,   220,   221,
     222,    -1,    -1,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,   240,    -1,
      -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,
      -1,   253,    -1,    -1,    -1,   257,    -1,    -1,   260,   261,
     262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
      -1,    -1,   274,    -1,   276,   277,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,   288,   289,   290,   291,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,
     322,   323,    -1,    -1,   326,    -1,   328,    -1,   330,    -1,
      -1,   333,   334,   335,   336,   337,   338,   339,    -1,    -1,
     342,   343,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
     352,   353,    -1,    -1,    -1,    -1,   358,   359,   360,    -1,
     362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,   377,   378,   379,   380,   381,
      -1,   383,   384,   385,    -1,   387,    -1,   389,    -1,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,    -1,   401,
     402,   403,    -1,    -1,    -1,   407,    -1,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,    -1,
     422,   423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,
     432,   433,   434,    -1,   436,   437,    -1,    -1,    -1,   441,
     442,    -1,   444,   445,    -1,   447,   448,   449,   450,   451,
      -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,
     492,    -1,    -1,   495,   496,    -1,   498,   499,   500,   501,
     502,    -1,    -1,    -1,   506,   507,    -1,   509,   510,    -1,
     512,   513,    -1,   515,   516,   517,   518,   519,   520,    -1,
      -1,    -1,   524,    -1,    -1,   527,    -1,   529,    -1,    -1,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,   543,   544,    -1,    -1,    -1,    -1,   549,    -1,    -1,
     552,    -1,    -1,    -1,   556,   557,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   565,    -1,    -1,   568,    -1,    -1,   571,
     572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,
     582,    -1,    -1,    -1,   586,    -1,    -1,    -1,    -1,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,   609,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    34,    -1,    -1,
      37,    -1,    -1,    -1,    41,    -1,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      -1,    -1,    79,    -1,    -1,    82,    -1,    84,    -1,    -1,
      -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    99,   100,    -1,    -1,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,    -1,    -1,    -1,    -1,    -1,   116,
      -1,   118,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,    -1,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,    -1,    -1,   163,    -1,   165,   166,
      -1,    -1,   169,    -1,    -1,   172,   173,   174,    -1,    -1,
     177,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
      -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,    -1,   199,   200,    -1,    -1,   203,    -1,    -1,    -1,
      -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,    -1,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,    -1,   235,   236,
      -1,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,    -1,
     257,    -1,    -1,   260,   261,   262,    -1,    -1,    -1,    -1,
      -1,   268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,   290,   291,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,    -1,    -1,   326,
      -1,   328,    -1,   330,    -1,    -1,   333,   334,   335,   336,
     337,   338,   339,    -1,    -1,   342,   343,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,   385,    -1,
     387,    -1,   389,    -1,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,    -1,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,    -1,    -1,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,    -1,   441,   442,    -1,   444,   445,    -1,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,    -1,    -1,   495,   496,
      -1,   498,   499,   500,   501,   502,    -1,    -1,    -1,   506,
     507,    -1,   509,   510,    -1,   512,   513,    -1,   515,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,    -1,    -1,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,
      -1,    -1,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,
      -1,   568,    -1,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,    -1,    -1,   586,
      -1,    -1,    -1,    -1,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,   609,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    34,    -1,    -1,    37,    -1,    -1,    -1,    41,
      -1,    -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    -1,    -1,    79,    -1,    -1,
      82,    -1,    84,    -1,    -1,    -1,    -1,    -1,    -1,    91,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    99,   100,    -1,
      -1,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,    -1,
      -1,    -1,    -1,    -1,   116,    -1,   118,    -1,    -1,    -1,
      -1,    -1,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,    -1,   147,   148,   149,   150,   151,
      -1,    -1,   154,    -1,   156,   157,   158,   159,   160,    -1,
      -1,   163,    -1,   165,   166,    -1,    -1,   169,    -1,    -1,
     172,   173,   174,    -1,    -1,   177,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,    -1,   188,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,    -1,   199,   200,    -1,
      -1,   203,    -1,    -1,    -1,    -1,    -1,   209,   210,    -1,
     212,    -1,    -1,   215,    -1,    -1,    -1,   219,   220,   221,
     222,    -1,    -1,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,   240,    -1,
      -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,
      -1,   253,    -1,    -1,    -1,   257,    -1,    -1,   260,   261,
     262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
      -1,    -1,   274,    -1,   276,   277,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,   288,   289,   290,   291,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,
     322,   323,    -1,    -1,   326,    -1,   328,    -1,   330,    -1,
      -1,   333,   334,   335,   336,   337,   338,   339,    -1,    -1,
     342,   343,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
     352,   353,    -1,    -1,    -1,    -1,   358,   359,   360,    -1,
     362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,   377,   378,   379,   380,   381,
      -1,   383,   384,   385,    -1,   387,    -1,   389,    -1,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,    -1,   401,
     402,   403,    -1,    -1,    -1,   407,    -1,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,    -1,
     422,   423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,
     432,   433,   434,    -1,   436,   437,    -1,    -1,    -1,   441,
     442,    -1,   444,   445,    -1,   447,   448,   449,   450,   451,
      -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,
     492,    -1,    -1,   495,   496,    -1,   498,   499,   500,   501,
     502,    -1,    -1,    -1,   506,   507,    -1,   509,   510,    -1,
     512,   513,    -1,   515,   516,   517,   518,   519,   520,    -1,
      -1,    -1,   524,    -1,    -1,   527,    -1,   529,    -1,    -1,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,   543,   544,    -1,    -1,    -1,    -1,   549,    -1,    -1,
     552,    -1,    -1,    -1,   556,   557,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   565,    -1,    -1,   568,    -1,    -1,   571,
     572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,
     582,    -1,    -1,     6,   586,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,
      23,    -1,    -1,    26,    27,    28,    29,   609,    -1,    32,
      -1,    34,    -1,    -1,    37,    -1,    -1,    -1,    41,    -1,
      -1,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    -1,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    -1,    -1,    72,
      -1,    74,    75,    76,    -1,    -1,    79,    -1,    -1,    82,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    -1,    -1,    -1,    98,    99,   100,    -1,    -1,
     103,    -1,    -1,    -1,    -1,   108,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,   118,    -1,    -1,    -1,    -1,
      -1,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
      -1,    -1,    -1,    -1,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,    -1,    -1,   148,   149,   150,   151,    -1,
      -1,   154,    -1,   156,   157,   158,   159,    -1,    -1,    -1,
     163,    -1,   165,   166,    -1,    -1,   169,   170,    -1,   172,
     173,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,    -1,   188,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,    -1,   199,   200,   201,    -1,
     203,    -1,    -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,
      -1,    -1,   215,    -1,    -1,    -1,   219,   220,   221,   222,
     223,    -1,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,    -1,   240,    -1,    -1,
     243,   244,   245,    -1,    -1,    -1,    -1,   250,    -1,    -1,
     253,    -1,    -1,    -1,   257,   258,    -1,   260,   261,    -1,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,    -1,    -1,    -1,    -1,
     283,    -1,    -1,    -1,   287,   288,   289,   290,   291,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,   311,    -1,
      -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,   322,
     323,    -1,    -1,   326,    -1,   328,    -1,   330,    -1,    -1,
     333,   334,   335,   336,   337,   338,   339,    -1,    -1,   342,
     343,    -1,   345,   346,   347,   348,    -1,    -1,    -1,    -1,
     353,    -1,    -1,    -1,    -1,   358,   359,   360,    -1,   362,
     363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   375,    -1,   377,    -1,   379,   380,   381,    -1,
     383,   384,   385,    -1,   387,    -1,   389,    -1,    -1,    -1,
     393,   394,    -1,   396,    -1,   398,   399,    -1,   401,   402,
     403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,    -1,   422,
      -1,    -1,   425,    -1,   427,   428,    -1,   430,    -1,    -1,
     433,    -1,    -1,   436,   437,   438,    -1,    -1,    -1,   442,
      -1,   444,   445,    -1,   447,   448,   449,    -1,   451,    -1,
     453,    -1,    -1,    -1,    -1,   458,   459,   460,    -1,    -1,
     463,    -1,    -1,    -1,   467,    -1,   469,    -1,    -1,   472,
      -1,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,
      -1,   484,    -1,    -1,   487,    -1,    -1,    -1,   491,   492,
      -1,    -1,    -1,   496,    -1,   498,   499,   500,   501,   502,
      -1,    -1,    -1,   506,   507,    -1,   509,   510,    -1,   512,
     513,    -1,    -1,   516,   517,   518,   519,   520,    -1,    -1,
      -1,   524,    -1,    -1,   527,    -1,   529,    -1,    -1,    -1,
     533,   534,   535,    -1,   537,   538,   539,   540,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   549,    -1,    -1,   552,
      -1,    -1,    -1,   556,   557,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   565,    -1,    -1,   568,    -1,    -1,   571,   572,
     573,   574,    -1,    -1,   577,    -1,   579,    -1,   581,    -1,
      -1,    -1,    -1,   586,    -1,    -1,    -1,    -1,   591,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    18,   605,    -1,    21,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    34,    -1,    -1,
      37,    -1,    -1,    -1,    41,    -1,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      -1,    -1,    79,    -1,    -1,    82,    -1,    84,    -1,    -1,
      -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    99,   100,    -1,    -1,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,    -1,    -1,    -1,    -1,    -1,   116,
      -1,   118,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,    -1,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,    -1,    -1,   163,    -1,   165,   166,
      -1,    -1,   169,    -1,    -1,   172,   173,   174,    -1,    -1,
     177,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
      -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,    -1,   199,   200,    -1,    -1,   203,    -1,    -1,    -1,
      -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,    -1,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,    -1,   235,   236,
      -1,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,    -1,
     257,    -1,    -1,   260,   261,    -1,    -1,    -1,    -1,    -1,
      -1,   268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,   290,   291,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,    -1,    -1,   326,
      -1,   328,    -1,   330,    -1,    -1,   333,   334,   335,   336,
     337,   338,   339,    -1,    -1,   342,   343,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,   385,    -1,
     387,    -1,   389,    -1,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,    -1,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,    -1,    -1,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,    -1,   441,   442,    -1,   444,   445,    -1,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,    -1,    -1,   495,   496,
      -1,   498,   499,   500,   501,   502,    -1,    -1,    -1,   506,
     507,    -1,   509,   510,    -1,   512,   513,    -1,    -1,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,    -1,    -1,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,
      -1,    -1,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,
      -1,   568,    -1,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,    -1,    -1,   586,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,
     597,    -1,    18,    -1,    -1,    21,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    34,    -1,
      -1,    37,    -1,    -1,    -1,    41,    -1,    -1,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    -1,    71,    72,    73,    74,    75,
      76,    -1,    -1,    79,    -1,    -1,    82,    -1,    84,    -1,
      -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,
      -1,    -1,    98,    99,   100,    -1,    -1,   103,    -1,    -1,
      -1,    -1,   108,    -1,   110,    -1,    -1,    -1,    -1,    -1,
     116,    -1,   118,    -1,    -1,    -1,    -1,    -1,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
      -1,   147,   148,   149,   150,   151,    -1,    -1,   154,    -1,
     156,   157,   158,   159,   160,    -1,    -1,   163,    -1,   165,
     166,    -1,    -1,   169,    -1,    -1,   172,   173,   174,    -1,
      -1,   177,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,    -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,    -1,   199,   200,    -1,    -1,   203,    -1,    -1,
      -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,
      -1,    -1,    -1,   219,   220,   221,   222,    -1,    -1,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,    -1,   235,
     236,    -1,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,
      -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,
      -1,   257,    -1,    -1,   260,   261,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,    -1,   274,    -1,
     276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,   288,   289,   290,   291,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,   311,    -1,    -1,    -1,   315,
     316,   317,   318,   319,    -1,    -1,   322,   323,    -1,    -1,
     326,    -1,   328,    -1,   330,    -1,    -1,   333,   334,   335,
     336,   337,   338,   339,    -1,    -1,   342,   343,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,
      -1,    -1,   358,   359,   360,    -1,   362,   363,   364,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,
     376,   377,   378,   379,   380,   381,    -1,   383,   384,   385,
      -1,   387,    -1,   389,    -1,    -1,   392,   393,   394,    -1,
     396,    -1,   398,   399,    -1,   401,   402,   403,    -1,    -1,
      -1,   407,    -1,    -1,    -1,   411,   412,   413,   414,   415,
      -1,    -1,   418,   419,   420,    -1,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,   432,   433,   434,    -1,
     436,   437,    -1,    -1,    -1,   441,   442,    -1,   444,   445,
      -1,   447,   448,   449,   450,   451,    -1,   453,   454,    -1,
      -1,    -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,
      -1,   467,   468,   469,   470,    -1,   472,   473,   474,    -1,
      -1,    -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,
      -1,   487,    -1,    -1,   490,   491,   492,    -1,    -1,   495,
     496,    -1,   498,   499,   500,   501,   502,    -1,    -1,    -1,
     506,   507,    -1,   509,   510,    -1,   512,   513,    -1,    -1,
     516,   517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,
      -1,   527,    -1,   529,    -1,    -1,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,   543,   544,    -1,
      -1,    -1,    -1,   549,    -1,    -1,   552,    -1,    -1,    -1,
     556,   557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,
      -1,    -1,   568,    -1,    -1,   571,   572,   573,   574,    -1,
      -1,    -1,    -1,   579,    -1,   581,   582,    -1,    -1,    -1,
     586,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      -1,   597,    -1,    18,    -1,    -1,    21,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    34,
      -1,    -1,    37,    -1,    -1,    -1,    41,    -1,    -1,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    -1,    71,    72,    73,    74,
      75,    76,    -1,    -1,    79,    -1,    -1,    82,    -1,    84,
      -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    98,    99,   100,    -1,    -1,   103,    -1,
      -1,    -1,    -1,   108,    -1,   110,    -1,    -1,    -1,    -1,
      -1,   116,    -1,   118,    -1,    -1,    -1,    -1,    -1,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,    -1,   134,
      -1,    -1,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,    -1,   147,   148,   149,   150,   151,    -1,    -1,   154,
      -1,   156,   157,   158,   159,   160,    -1,    -1,   163,    -1,
     165,   166,    -1,    -1,   169,    -1,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,    -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,    -1,   199,   200,    -1,    -1,   203,    -1,
      -1,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,
     215,    -1,    -1,    -1,   219,   220,   221,   222,    -1,    -1,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,    -1,
     235,   236,    -1,    -1,    -1,   240,    -1,    -1,   243,   244,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,
      -1,    -1,   257,    -1,    -1,   260,   261,    -1,    -1,    -1,
      -1,    -1,    -1,   268,   269,    -1,   271,    -1,    -1,   274,
      -1,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,   290,   291,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,   311,    -1,    -1,    -1,
     315,   316,   317,   318,   319,    -1,    -1,   322,   323,    -1,
      -1,   326,    -1,   328,    -1,   330,    -1,    -1,   333,   334,
     335,   336,   337,   338,   339,    -1,    -1,   342,   343,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,    -1,   358,   359,   360,    -1,   362,   363,   364,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     375,   376,   377,   378,   379,   380,   381,    -1,   383,   384,
     385,    -1,   387,    -1,   389,    -1,    -1,   392,   393,   394,
      -1,   396,    -1,   398,   399,    -1,   401,   402,   403,    -1,
      -1,    -1,   407,    -1,    -1,    -1,   411,   412,   413,   414,
     415,    -1,    -1,   418,   419,   420,    -1,   422,   423,    -1,
     425,   426,   427,    -1,    -1,   430,    -1,   432,   433,   434,
      -1,   436,   437,    -1,    -1,    -1,   441,   442,    -1,   444,
     445,    -1,   447,   448,   449,   450,   451,    -1,   453,   454,
      -1,    -1,    -1,   458,   459,   460,    -1,    -1,   463,    -1,
      -1,    -1,   467,   468,   469,   470,    -1,   472,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,   484,
      -1,    -1,   487,    -1,    -1,   490,   491,   492,    -1,    -1,
     495,   496,    -1,   498,   499,   500,   501,   502,    -1,    -1,
      -1,   506,   507,    -1,   509,   510,    -1,   512,   513,    -1,
      -1,   516,   517,   518,   519,   520,    -1,    -1,    -1,   524,
      -1,    -1,   527,    -1,   529,    -1,    -1,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,    -1,    -1,   543,   544,
      -1,    -1,    -1,    -1,   549,    -1,    -1,   552,    -1,    -1,
      -1,   556,   557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     565,    -1,    -1,   568,    -1,    -1,   571,   572,   573,   574,
      -1,    -1,    -1,    -1,   579,    -1,   581,   582,    -1,    -1,
      -1,   586,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    -1,   597,    -1,    18,    -1,    -1,    21,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      34,    -1,    -1,    37,    -1,    -1,    -1,    41,    -1,    -1,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    -1,    71,    72,    73,
      74,    75,    76,    -1,    -1,    79,    -1,    -1,    82,    -1,
      84,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    98,    99,   100,    -1,    -1,   103,
      -1,    -1,    -1,    -1,   108,    -1,   110,    -1,    -1,    -1,
      -1,    -1,   116,    -1,   118,    -1,    -1,    -1,    -1,    -1,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,    -1,   147,   148,   149,   150,   151,    -1,    -1,
     154,    -1,   156,   157,   158,   159,   160,    -1,    -1,   163,
      -1,   165,   166,    -1,    -1,   169,    -1,    -1,   172,   173,
     174,    -1,    -1,   177,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,    -1,   188,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,    -1,   199,   200,    -1,    -1,   203,
      -1,    -1,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,
      -1,   215,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
      -1,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
      -1,   235,   236,    -1,    -1,    -1,   240,    -1,    -1,   243,
     244,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,
      -1,    -1,    -1,   257,    -1,    -1,   260,   261,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,    -1,
     274,    -1,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,   288,   289,   290,   291,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,   307,    -1,   309,   310,   311,    -1,    -1,
      -1,   315,   316,   317,   318,   319,    -1,    -1,   322,   323,
      -1,    -1,   326,    -1,   328,    -1,   330,    -1,    -1,   333,
     334,   335,   336,   337,   338,   339,    -1,    -1,   342,   343,
      -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,   353,
      -1,    -1,    -1,    -1,   358,   359,   360,    -1,   362,   363,
     364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   375,   376,   377,   378,   379,   380,   381,    -1,   383,
     384,   385,    -1,   387,    -1,   389,    -1,    -1,   392,   393,
     394,    -1,   396,    -1,   398,   399,    -1,   401,   402,   403,
      -1,    -1,    -1,   407,    -1,    -1,    -1,   411,   412,   413,
     414,   415,    -1,    -1,   418,   419,   420,    -1,   422,   423,
      -1,   425,   426,   427,    -1,    -1,   430,    -1,   432,   433,
     434,    -1,   436,   437,    -1,    -1,    -1,   441,   442,    -1,
     444,   445,    -1,   447,   448,   449,   450,   451,    -1,   453,
     454,    -1,    -1,    -1,   458,   459,   460,    -1,    -1,   463,
      -1,    -1,    -1,   467,   468,   469,   470,    -1,   472,   473,
     474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,
     484,    -1,    -1,   487,    -1,    -1,   490,   491,   492,    -1,
      -1,   495,   496,    -1,   498,   499,   500,   501,   502,    -1,
      -1,    -1,   506,   507,    -1,   509,   510,    -1,   512,   513,
      -1,    -1,   516,   517,   518,   519,   520,    -1,    -1,    -1,
     524,    -1,    -1,   527,    -1,   529,    -1,    -1,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,    -1,    -1,   543,
     544,    -1,    -1,    -1,    -1,   549,    -1,    -1,   552,    -1,
      -1,    -1,   556,   557,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   565,    -1,    -1,   568,    -1,    -1,   571,   572,   573,
     574,    -1,    -1,    -1,    -1,   579,    -1,   581,   582,    -1,
      -1,    -1,   586,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    -1,   597,    -1,    18,    -1,    -1,    -1,    -1,
      23,    -1,    -1,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    34,    -1,    -1,    37,    -1,    -1,    -1,    41,    -1,
      -1,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    -1,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    -1,    -1,    72,
      -1,    74,    75,    76,    -1,    -1,    79,    -1,    -1,    82,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    -1,    -1,    -1,    98,    99,   100,    -1,    -1,
     103,    -1,    -1,    -1,    -1,   108,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,   118,    -1,    -1,    -1,    -1,
      -1,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
      -1,    -1,    -1,    -1,   137,   138,   139,    -1,   141,    -1,
     143,    -1,    -1,    -1,   147,   148,   149,   150,   151,    -1,
      -1,   154,    -1,   156,   157,   158,   159,    -1,    -1,    -1,
     163,    -1,   165,   166,    -1,    -1,   169,   170,    -1,   172,
     173,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,    -1,   188,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,    -1,   199,   200,   201,    -1,
     203,    -1,    -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,
      -1,    -1,   215,    -1,    -1,    -1,   219,   220,   221,   222,
     223,    -1,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,    -1,   240,    -1,    -1,
     243,   244,   245,    -1,    -1,    -1,    -1,   250,    -1,    -1,
     253,    -1,    -1,    -1,   257,   258,    -1,   260,   261,    -1,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,    -1,    -1,    -1,    -1,
     283,    -1,    -1,    -1,   287,   288,   289,   290,   291,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,   311,    -1,
      -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,   322,
     323,    -1,    -1,   326,    -1,   328,    -1,   330,    -1,    -1,
     333,   334,   335,   336,   337,   338,   339,    -1,    -1,   342,
     343,    -1,   345,   346,   347,   348,    -1,    -1,    -1,    -1,
     353,    -1,    -1,    -1,    -1,   358,   359,   360,    -1,   362,
     363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   375,    -1,   377,    -1,   379,   380,   381,    -1,
     383,   384,   385,    -1,   387,    -1,   389,    -1,    -1,    -1,
     393,   394,    -1,   396,    -1,   398,   399,    -1,   401,   402,
     403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,    -1,   422,
      -1,    -1,   425,    -1,   427,   428,    -1,   430,    -1,    -1,
     433,    -1,    -1,   436,   437,   438,    -1,    -1,    -1,   442,
      -1,   444,   445,    -1,   447,   448,   449,    -1,   451,    -1,
     453,    -1,    -1,    -1,    -1,   458,   459,   460,    -1,    -1,
     463,    -1,    -1,    -1,   467,    -1,   469,    -1,    -1,   472,
      -1,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,
      -1,   484,    -1,    -1,   487,    -1,    -1,    -1,   491,   492,
      -1,    -1,    -1,   496,    -1,   498,   499,   500,   501,   502,
      -1,    -1,    -1,   506,   507,    -1,   509,   510,    -1,   512,
     513,    -1,    -1,   516,   517,   518,   519,   520,    -1,    -1,
      -1,   524,    -1,    -1,   527,    -1,   529,    -1,    -1,    -1,
     533,   534,   535,    -1,   537,   538,   539,   540,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   549,    -1,    -1,   552,
      -1,    -1,    -1,   556,   557,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   565,    -1,    -1,   568,    -1,    -1,   571,   572,
     573,   574,    -1,    -1,   577,    -1,   579,    -1,   581,    -1,
      -1,    -1,    -1,   586,    -1,    -1,   589,     6,   591,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    18,
      -1,    -1,    -1,    -1,    23,    -1,    -1,    26,    27,    28,
      29,    -1,    -1,    32,    -1,    34,    -1,    -1,    37,    -1,
      -1,    -1,    41,    -1,    -1,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    -1,    55,    -1,    57,    -1,
      -1,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    -1,    -1,    72,    -1,    74,    75,    76,    -1,    -1,
      79,    -1,    -1,    82,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    98,
      99,   100,    -1,    -1,   103,    -1,    -1,    -1,    -1,   108,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,   118,
      -1,    -1,    -1,    -1,    -1,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,    -1,    -1,    -1,    -1,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,    -1,   147,   148,
     149,   150,   151,    -1,    -1,   154,    -1,   156,   157,   158,
     159,    -1,    -1,    -1,   163,    -1,   165,   166,    -1,    -1,
     169,   170,    -1,   172,   173,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,    -1,   188,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,
     199,   200,   201,    -1,   203,    -1,    -1,    -1,    -1,    -1,
      -1,   210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,
     219,   220,   221,   222,   223,    -1,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,
      -1,   240,    -1,    -1,   243,   244,   245,    -1,    -1,    -1,
      -1,   250,    -1,    -1,   253,    -1,    -1,    -1,   257,   258,
      -1,   260,   261,    -1,    -1,    -1,    -1,    -1,    -1,   268,
     269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,    -1,
      -1,    -1,    -1,    -1,   283,    -1,    -1,    -1,   287,   288,
     289,   290,   291,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,   311,    -1,    -1,    -1,   315,   316,   317,   318,
     319,    -1,    -1,   322,   323,    -1,    -1,   326,    -1,   328,
      -1,   330,    -1,    -1,   333,   334,   335,   336,   337,   338,
     339,    -1,    -1,   342,   343,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,    -1,   358,
     359,   360,    -1,   362,   363,   364,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   375,    -1,   377,    -1,
     379,   380,   381,    -1,   383,   384,   385,    -1,   387,    -1,
     389,    -1,    -1,    -1,   393,   394,    -1,   396,    -1,   398,
     399,    -1,   401,   402,   403,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,    -1,   422,    -1,    -1,   425,    -1,   427,   428,
      -1,   430,    -1,    -1,   433,    -1,    -1,   436,   437,   438,
      -1,    -1,    -1,   442,    -1,   444,   445,    -1,   447,   448,
     449,    -1,   451,    -1,   453,    -1,    -1,    -1,    -1,   458,
     459,   460,    -1,    -1,   463,    -1,    -1,    -1,   467,    -1,
     469,    -1,    -1,   472,    -1,   474,    -1,    -1,    -1,    -1,
      -1,    -1,   481,   482,    -1,   484,    -1,    -1,   487,    -1,
      -1,    -1,   491,   492,    -1,    -1,    -1,   496,    -1,   498,
     499,   500,   501,   502,    -1,    -1,    -1,   506,   507,    -1,
     509,   510,    -1,   512,   513,    -1,    -1,   516,   517,   518,
     519,   520,    -1,    -1,    -1,   524,    -1,    -1,   527,    -1,
     529,    -1,    -1,    -1,   533,   534,   535,    -1,   537,   538,
     539,   540,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     549,    -1,    -1,   552,    -1,    -1,    -1,   556,   557,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,   568,
      -1,    -1,   571,   572,   573,   574,   575,    -1,   577,    -1,
     579,    -1,   581,    -1,    -1,    -1,    -1,   586,    -1,    -1,
     589,     6,   591,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,    23,    -1,
      -1,    26,    27,    28,    29,    -1,    -1,    32,    -1,    34,
      -1,    -1,    37,    -1,    -1,    -1,    41,    -1,    -1,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    -1,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    -1,    -1,    72,    -1,    74,
      75,    76,    -1,    -1,    79,    -1,    -1,    82,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    98,    99,   100,    -1,    -1,   103,    -1,
      -1,    -1,    -1,   108,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,   118,    -1,    -1,    -1,    -1,    -1,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,    -1,    -1,
      -1,    -1,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,    -1,   147,   148,   149,   150,   151,    -1,    -1,   154,
      -1,   156,   157,   158,   159,    -1,    -1,    -1,   163,    -1,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,    -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,    -1,   199,   200,   201,    -1,   203,    -1,
      -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,    -1,    -1,
     215,    -1,    -1,    -1,   219,   220,   221,   222,   223,    -1,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,    -1,   240,    -1,    -1,   243,   244,
     245,    -1,    -1,    -1,    -1,   250,    -1,    -1,   253,    -1,
      -1,    -1,   257,   258,    -1,   260,   261,    -1,    -1,    -1,
      -1,    -1,    -1,   268,   269,    -1,   271,    -1,    -1,   274,
      -1,   276,   277,    -1,    -1,    -1,    -1,    -1,   283,    -1,
      -1,    -1,   287,   288,   289,   290,   291,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,   311,    -1,    -1,    -1,
     315,   316,   317,   318,   319,    -1,    -1,   322,   323,    -1,
      -1,   326,    -1,   328,    -1,   330,    -1,    -1,   333,   334,
     335,   336,   337,   338,   339,    -1,    -1,   342,   343,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,    -1,   353,    -1,
      -1,    -1,    -1,   358,   359,   360,    -1,   362,   363,   364,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     375,    -1,   377,    -1,   379,   380,   381,    -1,   383,   384,
     385,    -1,   387,    -1,   389,    -1,    -1,    -1,   393,   394,
      -1,   396,    -1,   398,   399,    -1,   401,   402,   403,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   411,   412,   413,   414,
     415,    -1,    -1,   418,   419,   420,    -1,   422,    -1,    -1,
     425,    -1,   427,   428,    -1,   430,    -1,    -1,   433,    -1,
      -1,   436,   437,   438,    -1,    -1,    -1,   442,    -1,   444,
     445,    -1,   447,   448,   449,    -1,   451,    -1,   453,    -1,
      -1,    -1,    -1,   458,   459,   460,    -1,    -1,   463,    -1,
      -1,    -1,   467,    -1,   469,    -1,    -1,   472,    -1,   474,
      -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,   484,
      -1,    -1,   487,    -1,    -1,    -1,   491,   492,    -1,    -1,
      -1,   496,    -1,   498,   499,   500,   501,   502,    -1,    -1,
      -1,   506,   507,    -1,   509,   510,    -1,   512,   513,    -1,
      -1,   516,   517,   518,   519,   520,    -1,    -1,    -1,   524,
      -1,    -1,   527,    -1,   529,    -1,    -1,    -1,   533,   534,
     535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   549,    -1,    -1,   552,    -1,    -1,
      -1,   556,   557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     565,    -1,    -1,   568,    -1,    -1,   571,   572,   573,   574,
      -1,    -1,   577,    -1,   579,    -1,   581,    -1,    -1,    -1,
      -1,   586,    -1,    -1,    -1,     6,   591,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,
      -1,    -1,    23,    -1,    -1,    26,    27,    28,    29,    -1,
      -1,    32,    -1,    34,    -1,    -1,    37,    -1,    -1,    -1,
      41,    -1,    -1,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    -1,    55,    -1,    57,    -1,    -1,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    -1,
      -1,    72,    -1,    74,    75,    76,    -1,    -1,    79,    -1,
      -1,    82,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    -1,    -1,    -1,    98,    99,   100,
      -1,    -1,   103,    -1,    -1,    -1,    -1,   108,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,   118,    -1,    -1,
      -1,    -1,    -1,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,    -1,    -1,    -1,    -1,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,    -1,   147,   148,   149,   150,
     151,    -1,    -1,   154,    -1,   156,   157,   158,   159,    -1,
      -1,    -1,   163,    -1,   165,   166,    -1,    -1,   169,   170,
      -1,   172,   173,   174,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,    -1,   188,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,    -1,   199,   200,
     201,    -1,   203,    -1,    -1,    -1,    -1,    -1,    -1,   210,
      -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,   219,   220,
     221,   222,   223,    -1,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,    -1,   235,    -1,    -1,    -1,    -1,   240,
      -1,    -1,   243,   244,   245,    -1,    -1,    -1,    -1,   250,
      -1,    -1,   253,    -1,    -1,    -1,   257,   258,    -1,   260,
     261,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,
     271,    -1,    -1,   274,    -1,   276,   277,    -1,    -1,    -1,
      -1,    -1,   283,    -1,    -1,    -1,   287,   288,   289,   290,
     291,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
     311,    -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,
      -1,   322,   323,    -1,    -1,   326,    -1,   328,    -1,   330,
      -1,    -1,   333,   334,   335,   336,   337,   338,   339,    -1,
      -1,   342,   343,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,    -1,   353,    -1,    -1,    -1,    -1,   358,   359,   360,
      -1,   362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   375,    -1,   377,    -1,   379,   380,
     381,    -1,   383,   384,   385,    -1,   387,    -1,   389,    -1,
      -1,    -1,   393,   394,    -1,   396,    -1,   398,   399,    -1,
     401,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     411,   412,   413,   414,   415,    -1,    -1,   418,   419,   420,
      -1,   422,    -1,    -1,   425,    -1,   427,   428,    -1,   430,
      -1,    -1,   433,    -1,    -1,   436,   437,   438,    -1,    -1,
      -1,   442,    -1,   444,   445,    -1,   447,   448,   449,    -1,
     451,    -1,   453,    -1,    -1,    -1,    -1,   458,   459,   460,
      -1,    -1,   463,    -1,    -1,    -1,   467,    -1,   469,    -1,
      -1,   472,    -1,   474,    -1,    -1,    -1,    -1,    -1,    -1,
     481,   482,    -1,   484,    -1,    -1,   487,    -1,    -1,    -1,
     491,   492,    -1,    -1,    -1,   496,    -1,   498,   499,   500,
     501,   502,    -1,    -1,    -1,   506,   507,    -1,   509,   510,
      -1,   512,   513,    -1,    -1,   516,   517,   518,   519,   520,
      -1,    -1,    -1,   524,    -1,    -1,   527,    -1,   529,    -1,
      -1,    -1,   533,   534,   535,    -1,   537,   538,   539,   540,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   549,    -1,
      -1,   552,    -1,    -1,    -1,   556,   557,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   565,    -1,    -1,   568,    -1,    -1,
     571,   572,   573,   574,    -1,    -1,   577,    -1,   579,    -1,
     581,    -1,    -1,    -1,    -1,   586,    -1,    -1,    -1,     6,
     591,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    -1,    -1,    23,    -1,    -1,    26,
      27,    28,    29,    -1,    -1,    32,    -1,    34,    -1,    -1,
      37,    -1,    -1,    -1,    41,    -1,    -1,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    -1,    55,    -1,
      57,    -1,    -1,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    -1,    72,    -1,    74,    75,    76,
      -1,    -1,    79,    -1,    -1,    82,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    99,   100,    -1,    -1,   103,    -1,    -1,    -1,
      -1,   108,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,   118,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,    -1,    -1,    -1,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,    -1,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,    -1,    -1,    -1,   163,    -1,   165,   166,
      -1,    -1,   169,   170,    -1,   172,   173,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
      -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,    -1,   199,   200,   201,    -1,   203,    -1,    -1,    -1,
      -1,    -1,    -1,   210,    -1,    -1,    -1,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,   223,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,    -1,   240,    -1,    -1,   243,   244,   245,    -1,
      -1,    -1,    -1,   250,    -1,    -1,   253,    -1,    -1,    -1,
     257,   258,    -1,   260,   261,    -1,    -1,    -1,    -1,    -1,
      -1,   268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,
     277,    -1,    -1,    -1,    -1,    -1,   283,    -1,    -1,    -1,
     287,   288,   289,   290,   291,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,    -1,    -1,   326,
      -1,   328,    -1,   330,    -1,    -1,   333,   334,   335,   336,
     337,   338,   339,    -1,    -1,   342,   343,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,    -1,
     377,    -1,   379,   380,   381,    -1,   383,   384,   385,    -1,
     387,    -1,   389,    -1,    -1,    -1,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,    -1,    -1,   425,    -1,
     427,   428,    -1,   430,    -1,    -1,   433,    -1,    -1,   436,
     437,   438,    -1,    -1,    -1,   442,    -1,   444,   445,    -1,
     447,   448,   449,    -1,   451,    -1,   453,    -1,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,    -1,   469,    -1,    -1,   472,    -1,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,    -1,   491,   492,    -1,    -1,    -1,   496,
      -1,   498,   499,   500,   501,   502,    -1,    -1,    -1,   506,
     507,    -1,   509,   510,    -1,   512,   513,    -1,    -1,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,    -1,    -1,    -1,   533,   534,   535,    -1,
     537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,
      -1,   568,    -1,    -1,   571,   572,   573,   574,    -1,    -1,
     577,    -1,   579,    -1,   581,    -1,    -1,    -1,    -1,   586,
      -1,    -1,    -1,     6,   591,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,
      23,    -1,    -1,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    34,    -1,    -1,    37,    -1,    -1,    -1,    41,    -1,
      -1,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    -1,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    -1,    -1,    72,
      -1,    74,    75,    76,    -1,    -1,    79,    -1,    -1,    82,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    -1,    -1,    -1,    98,    99,   100,    -1,    -1,
     103,    -1,    -1,    -1,    -1,   108,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,   118,    -1,    -1,    -1,    -1,
      -1,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
      -1,    -1,    -1,    -1,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,    -1,   147,   148,   149,   150,   151,    -1,
      -1,   154,    -1,   156,   157,   158,   159,    -1,    -1,    -1,
     163,    -1,   165,   166,    -1,    -1,   169,   170,    -1,   172,
     173,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,    -1,   188,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,    -1,   199,   200,   201,    -1,
     203,    -1,    -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,
      -1,    -1,   215,    -1,    -1,    -1,   219,   220,   221,   222,
     223,    -1,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,    -1,   240,    -1,    -1,
     243,   244,   245,    -1,    -1,    -1,    -1,   250,    -1,    -1,
     253,    -1,    -1,    -1,   257,   258,    -1,   260,   261,    -1,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,    -1,    -1,    -1,    -1,
     283,    -1,    -1,    -1,   287,   288,   289,   290,   291,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,   311,    -1,
      -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,   322,
     323,    -1,    -1,   326,    -1,   328,    -1,   330,    -1,    -1,
     333,   334,   335,   336,   337,   338,   339,    -1,    -1,   342,
     343,    -1,   345,   346,   347,   348,    -1,    -1,    -1,    -1,
     353,    -1,    -1,    -1,    -1,   358,   359,   360,    -1,   362,
     363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   375,    -1,   377,    -1,   379,   380,   381,    -1,
     383,   384,   385,    -1,   387,    -1,   389,    -1,    -1,    -1,
     393,   394,    -1,   396,    -1,   398,   399,    -1,   401,   402,
     403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,    -1,   422,
      -1,    -1,   425,    -1,   427,   428,    -1,   430,    -1,    -1,
     433,    -1,    -1,   436,   437,   438,    -1,    -1,    -1,   442,
      -1,   444,   445,    -1,   447,   448,   449,    -1,   451,    -1,
     453,    -1,    -1,    -1,    -1,   458,   459,   460,    -1,    -1,
     463,    -1,    -1,    -1,   467,    -1,   469,    -1,    -1,   472,
      -1,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,
      -1,   484,    -1,    -1,   487,    -1,    -1,    -1,   491,   492,
      -1,    -1,    -1,   496,    -1,   498,   499,   500,   501,   502,
      -1,    -1,    -1,   506,   507,    -1,   509,   510,    -1,   512,
     513,    -1,    -1,   516,   517,   518,   519,   520,    -1,    -1,
      -1,   524,    -1,    -1,   527,    -1,   529,    -1,    -1,    -1,
     533,   534,   535,    -1,   537,   538,   539,   540,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   549,    -1,    -1,   552,
      -1,    -1,    -1,   556,   557,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   565,    -1,    -1,   568,    -1,    -1,   571,   572,
     573,   574,    -1,    -1,   577,    -1,   579,    -1,   581,    -1,
      -1,    -1,    -1,   586,    -1,    -1,    -1,     6,   591,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    18,
      -1,    -1,    -1,    -1,    23,    -1,    -1,    26,    27,    28,
      29,    -1,    -1,    32,    -1,    34,    -1,    -1,    37,    -1,
      -1,    -1,    41,    -1,    -1,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    -1,    55,    -1,    57,    -1,
      -1,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    -1,    -1,    72,    -1,    74,    75,    76,    -1,    -1,
      79,    -1,    -1,    82,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    98,
      99,   100,    -1,    -1,   103,    -1,    -1,    -1,    -1,   108,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,   118,
      -1,    -1,    -1,    -1,    -1,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,    -1,    -1,    -1,    -1,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,    -1,   147,   148,
     149,   150,   151,    -1,    -1,   154,    -1,   156,   157,   158,
     159,    -1,    -1,    -1,   163,    -1,   165,   166,    -1,    -1,
     169,   170,    -1,   172,   173,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,    -1,   188,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,
     199,   200,   201,    -1,   203,    -1,    -1,    -1,    -1,    -1,
      -1,   210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,
     219,   220,   221,   222,   223,    -1,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,
      -1,   240,    -1,    -1,   243,   244,   245,    -1,    -1,    -1,
      -1,   250,    -1,    -1,   253,    -1,    -1,    -1,   257,   258,
      -1,   260,   261,    -1,    -1,    -1,    -1,    -1,    -1,   268,
     269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,    -1,
      -1,    -1,    -1,    -1,   283,    -1,    -1,    -1,   287,   288,
     289,   290,   291,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,   311,    -1,    -1,    -1,   315,   316,   317,   318,
     319,    -1,    -1,   322,   323,    -1,    -1,   326,    -1,   328,
      -1,   330,    -1,    -1,   333,   334,   335,   336,   337,   338,
     339,    -1,    -1,   342,   343,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,    -1,   358,
     359,   360,    -1,   362,   363,   364,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   375,    -1,   377,    -1,
     379,   380,   381,    -1,   383,   384,   385,    -1,   387,    -1,
     389,    -1,    -1,    -1,   393,   394,    -1,   396,    -1,   398,
     399,    -1,   401,   402,   403,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,    -1,   422,    -1,    -1,   425,    -1,   427,   428,
      -1,   430,    -1,    -1,   433,    -1,    -1,   436,   437,   438,
      -1,    -1,    -1,   442,    -1,   444,   445,    -1,   447,   448,
     449,    -1,   451,    -1,   453,    -1,    -1,    -1,    -1,   458,
     459,   460,    -1,    -1,   463,    -1,    -1,    -1,   467,    -1,
     469,    -1,    -1,   472,    -1,   474,    -1,    -1,    -1,    -1,
      -1,    -1,   481,   482,    -1,   484,    -1,    -1,   487,    -1,
      -1,    -1,   491,   492,    -1,    -1,    -1,   496,    -1,   498,
     499,   500,   501,   502,    -1,    -1,    -1,   506,   507,    -1,
     509,   510,    -1,   512,   513,    -1,    -1,   516,   517,   518,
     519,   520,    -1,    -1,    -1,   524,    -1,    -1,   527,    -1,
     529,    -1,    -1,    -1,   533,   534,   535,    -1,   537,   538,
     539,   540,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     549,    -1,    -1,   552,    -1,    -1,    -1,   556,   557,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,   568,
      -1,    -1,   571,   572,   573,   574,    -1,    -1,   577,    -1,
     579,    -1,   581,    -1,    -1,    -1,    -1,   586,    -1,    -1,
      -1,     6,   591,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,    23,    -1,
      -1,    26,    27,    28,    29,    -1,    -1,    32,    -1,    34,
      -1,    -1,    37,    -1,    -1,    -1,    41,    -1,    -1,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    -1,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    -1,    -1,    72,    -1,    74,
      75,    76,    -1,    -1,    79,    -1,    -1,    82,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    98,    99,   100,    -1,    -1,   103,    -1,
      -1,    -1,    -1,   108,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,   118,    -1,    -1,    -1,    -1,    -1,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,    -1,    -1,
      -1,    -1,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,    -1,    -1,   148,   149,   150,   151,    -1,    -1,   154,
      -1,   156,   157,   158,   159,    -1,    -1,    -1,   163,    -1,
     165,   166,    -1,    -1,   169,   170,    -1,   172,   173,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,    -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,    -1,   199,   200,   201,    -1,   203,    -1,
      -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,    -1,    -1,
     215,    -1,    -1,    -1,   219,   220,   221,   222,   223,    -1,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,    -1,   240,    -1,    -1,   243,   244,
     245,    -1,    -1,    -1,    -1,   250,    -1,    -1,   253,    -1,
      -1,    -1,   257,   258,    -1,   260,   261,    -1,    -1,    -1,
      -1,    -1,    -1,   268,   269,    -1,   271,    -1,    -1,   274,
      -1,   276,   277,    -1,    -1,    -1,    -1,    -1,   283,    -1,
      -1,    -1,   287,   288,   289,   290,   291,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,   311,    -1,    -1,    -1,
     315,   316,   317,   318,   319,    -1,    -1,   322,   323,    -1,
      -1,   326,    -1,   328,    -1,   330,    -1,    -1,   333,   334,
     335,   336,   337,   338,   339,    -1,    -1,   342,   343,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,    -1,   353,    -1,
      -1,    -1,    -1,   358,   359,   360,    -1,   362,   363,   364,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     375,    -1,   377,    -1,   379,   380,   381,    -1,   383,   384,
     385,    -1,   387,    -1,   389,    -1,    -1,    -1,   393,   394,
      -1,   396,    -1,   398,   399,    -1,   401,   402,   403,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   411,   412,   413,   414,
     415,    -1,    -1,   418,   419,   420,    -1,   422,    -1,    -1,
     425,    -1,   427,   428,    -1,   430,    -1,    -1,   433,    -1,
      -1,   436,   437,   438,    -1,    -1,    -1,   442,    -1,   444,
     445,    -1,   447,   448,   449,    -1,   451,    -1,   453,    -1,
      -1,    -1,    -1,   458,   459,   460,    -1,    -1,   463,    -1,
      -1,    -1,   467,    -1,   469,    -1,    -1,   472,    -1,   474,
      -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,   484,
      -1,    -1,   487,    -1,    -1,    -1,   491,   492,    -1,    -1,
      -1,   496,    -1,   498,   499,   500,   501,   502,    -1,    -1,
      -1,   506,   507,    -1,   509,   510,    -1,   512,   513,    -1,
      -1,   516,   517,   518,   519,   520,    -1,    -1,    -1,   524,
      -1,    -1,   527,    -1,   529,    -1,    -1,    -1,   533,   534,
     535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   549,    -1,    -1,   552,    -1,    -1,
      -1,   556,   557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     565,    -1,    -1,   568,    -1,    -1,   571,   572,   573,   574,
      -1,    -1,   577,    -1,   579,    -1,   581,    -1,    -1,    -1,
      -1,   586,    -1,    -1,    -1,     6,   591,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,
      -1,    -1,    23,    -1,    -1,    26,    27,    28,    29,    -1,
      -1,    32,    -1,    34,    -1,    -1,    37,    -1,    -1,    -1,
      41,    -1,    -1,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    -1,    55,    -1,    57,    -1,    -1,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    -1,
      -1,    72,    -1,    74,    75,    76,    -1,    -1,    79,    -1,
      -1,    82,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    -1,    -1,    -1,    98,    99,   100,
      -1,    -1,   103,    -1,    -1,    -1,    -1,   108,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,   118,    -1,    -1,
      -1,    -1,    -1,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,    -1,    -1,    -1,    -1,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,    -1,    -1,   148,   149,   150,
     151,    -1,    -1,   154,    -1,   156,   157,   158,   159,    -1,
      -1,    -1,   163,    -1,   165,   166,    -1,    -1,   169,   170,
      -1,   172,   173,   174,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,    -1,   188,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,    -1,   199,   200,
     201,    -1,   203,    -1,    -1,    -1,    -1,    -1,    -1,   210,
      -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,   219,   220,
     221,   222,   223,    -1,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,    -1,   235,    -1,    -1,    -1,    -1,   240,
      -1,    -1,   243,   244,   245,    -1,    -1,    -1,    -1,   250,
      -1,    -1,   253,    -1,    -1,    -1,   257,   258,    -1,   260,
     261,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,
     271,    -1,    -1,   274,    -1,   276,   277,    -1,    -1,    -1,
      -1,    -1,   283,    -1,    -1,    -1,   287,   288,   289,   290,
     291,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
     311,    -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,
      -1,   322,   323,    -1,    -1,   326,    -1,   328,    -1,   330,
      -1,    -1,   333,   334,   335,   336,   337,   338,   339,    -1,
      -1,   342,   343,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,    -1,   353,    -1,    -1,    -1,    -1,   358,   359,   360,
      -1,   362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   375,    -1,   377,    -1,   379,   380,
     381,    -1,   383,   384,   385,    -1,   387,    -1,   389,    -1,
      -1,    -1,   393,   394,    -1,   396,    -1,   398,   399,    -1,
     401,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     411,   412,   413,   414,   415,    -1,    -1,   418,   419,   420,
      -1,   422,    -1,    -1,   425,    -1,   427,   428,    -1,   430,
      -1,    -1,   433,    -1,    -1,   436,   437,   438,    -1,    -1,
      -1,   442,    -1,   444,   445,    -1,   447,   448,   449,    -1,
     451,    -1,   453,    -1,    -1,    -1,    -1,   458,   459,   460,
      -1,    -1,   463,    -1,    -1,    -1,   467,    -1,   469,    -1,
      -1,   472,    -1,   474,    -1,    -1,    -1,    -1,    -1,    -1,
     481,   482,    -1,   484,    -1,    -1,   487,    -1,    -1,    -1,
     491,   492,    -1,    -1,    -1,   496,    -1,   498,   499,   500,
     501,   502,    -1,    -1,    -1,   506,   507,    -1,   509,   510,
      -1,   512,   513,    -1,    -1,   516,   517,   518,   519,   520,
      -1,    -1,    -1,   524,    -1,    -1,   527,    -1,   529,    -1,
      -1,    -1,   533,   534,   535,    -1,   537,   538,   539,   540,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   549,    -1,
      -1,   552,    -1,    -1,    -1,   556,   557,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   565,    -1,    -1,   568,    -1,    -1,
     571,   572,   573,   574,    -1,    -1,   577,    -1,   579,    -1,
     581,    -1,    -1,    -1,    -1,   586,    -1,    -1,    -1,     6,
     591,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    34,    -1,    -1,
      37,    -1,    -1,    -1,    41,    -1,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      -1,    -1,    79,    -1,    -1,    82,    -1,    84,    -1,    -1,
      -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    99,   100,    -1,    -1,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,   111,    -1,    -1,    -1,    -1,   116,
      -1,   118,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,    -1,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,    -1,    -1,   163,    -1,   165,   166,
      -1,    -1,   169,    -1,    -1,   172,   173,   174,   175,    -1,
     177,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
      -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,    -1,   199,   200,    -1,    -1,   203,    -1,    -1,    -1,
      -1,    -1,   209,   210,    -1,   212,   213,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,    -1,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,    -1,   235,   236,
      -1,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,    -1,
     257,    -1,    -1,   260,   261,    -1,    -1,    -1,    -1,    -1,
      -1,   268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,
     277,    -1,    -1,    -1,   281,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,   290,   291,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,    -1,    -1,   326,
      -1,   328,    -1,   330,    -1,    -1,   333,   334,   335,   336,
     337,   338,   339,    -1,    -1,   342,   343,    -1,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,    -1,    -1,   356,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,   385,    -1,
     387,    -1,   389,    -1,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,    -1,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,    -1,    -1,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,    -1,   441,   442,    -1,   444,   445,    -1,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
     477,   478,   479,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,    -1,    -1,   495,   496,
      -1,   498,   499,   500,   501,   502,    -1,    -1,    -1,   506,
     507,    -1,   509,   510,    -1,   512,   513,    -1,    -1,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,    -1,    -1,   532,   533,   534,   535,   536,
     537,   538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,
      -1,    -1,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,
      -1,   568,    -1,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,    -1,     6,   586,
       8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,
      18,    -1,    -1,    21,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    34,    -1,    36,    37,
      -1,    -1,    -1,    41,    -1,    -1,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    -1,    71,    72,    73,    74,    75,    76,    -1,
      -1,    79,    -1,    -1,    82,    -1,    84,    -1,    -1,    -1,
      -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,
      98,    99,   100,    -1,    -1,   103,    -1,    -1,    -1,    -1,
     108,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
     118,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,    -1,   147,
     148,   149,   150,   151,   152,    -1,   154,    -1,   156,   157,
     158,   159,   160,    -1,    -1,   163,    -1,   165,   166,    -1,
      -1,   169,    -1,    -1,   172,   173,   174,    -1,    -1,   177,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,    -1,
     188,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
      -1,   199,   200,    -1,    -1,   203,    -1,    -1,    -1,    -1,
      -1,   209,   210,    -1,   212,    -1,    -1,   215,    -1,    -1,
      -1,   219,   220,   221,   222,    -1,    -1,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,    -1,   235,   236,    -1,
      -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,    -1,
      -1,    -1,    -1,   251,    -1,   253,    -1,    -1,    -1,   257,
      -1,    -1,   260,   261,   262,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
     288,   289,   290,   291,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,   311,    -1,    -1,    -1,   315,   316,   317,
     318,   319,    -1,    -1,   322,   323,    -1,    -1,   326,    -1,
     328,    -1,   330,    -1,    -1,   333,   334,   335,   336,   337,
     338,   339,    -1,    -1,   342,   343,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,    -1,
     358,   359,   360,    -1,   362,   363,   364,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,   385,    -1,   387,
      -1,   389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,
     398,   399,    -1,   401,   402,   403,    -1,    -1,    -1,   407,
      -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,
     418,   419,   420,    -1,   422,   423,    -1,   425,   426,   427,
      -1,    -1,   430,    -1,   432,   433,   434,    -1,   436,   437,
      -1,    -1,    -1,   441,   442,    -1,   444,   445,    -1,   447,
     448,   449,   450,   451,    -1,   453,   454,    -1,    -1,    -1,
     458,   459,   460,    -1,   462,   463,    -1,    -1,    -1,   467,
     468,   469,   470,    -1,   472,   473,   474,    -1,    -1,    -1,
      -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,   487,
      -1,    -1,   490,   491,   492,    -1,    -1,   495,   496,    -1,
     498,   499,   500,   501,   502,    -1,    -1,    -1,   506,   507,
      -1,   509,   510,    -1,   512,   513,    -1,   515,   516,   517,
     518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,   527,
      -1,   529,    -1,    -1,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,    -1,
      -1,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,   557,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,
     568,    -1,    -1,   571,   572,   573,   574,    -1,    -1,    -1,
      -1,   579,    -1,   581,   582,    -1,    -1,     6,   586,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    18,
      -1,    -1,    21,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    34,    -1,    36,    37,    -1,
      -1,    -1,    41,    -1,    -1,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    -1,    71,    72,    73,    74,    75,    76,    -1,    -1,
      79,    -1,    -1,    82,    -1,    84,    -1,    -1,    -1,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    98,
      99,   100,    -1,    -1,   103,    -1,    -1,    -1,    -1,   108,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,   118,
      -1,    -1,    -1,    -1,    -1,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,    -1,   147,   148,
     149,   150,   151,    -1,    -1,   154,    -1,   156,   157,   158,
     159,   160,    -1,    -1,   163,    -1,   165,   166,    -1,    -1,
     169,    -1,    -1,   172,   173,   174,    -1,    -1,   177,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,    -1,   188,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,
     199,   200,    -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,
     209,   210,    -1,   212,    -1,    -1,   215,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,    -1,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,    -1,   235,   236,    -1,    -1,
      -1,   240,    -1,    -1,   243,   244,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,   253,    -1,    -1,    -1,   257,    -1,
      -1,   260,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,
     269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,   290,   291,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,   311,    -1,    -1,    -1,   315,   316,   317,   318,
     319,    -1,    -1,   322,   323,    -1,    -1,   326,    -1,   328,
      -1,   330,    -1,    -1,   333,   334,   335,   336,   337,   338,
     339,    -1,    -1,   342,   343,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,    -1,    -1,   358,
     359,   360,    -1,   362,   363,   364,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   375,   376,   377,   378,
     379,   380,   381,    -1,   383,   384,   385,    -1,   387,    -1,
     389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,
     399,    -1,   401,   402,   403,    -1,    -1,    -1,   407,    -1,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,    -1,   422,   423,    -1,   425,   426,   427,    -1,
      -1,   430,    -1,   432,   433,   434,    -1,   436,   437,    -1,
      -1,    -1,   441,   442,    -1,   444,   445,    -1,   447,   448,
     449,   450,   451,    -1,   453,   454,    -1,    -1,    -1,   458,
     459,   460,    -1,    -1,   463,    -1,    -1,    -1,   467,   468,
     469,   470,    -1,   472,   473,   474,    -1,    -1,    -1,    -1,
      -1,    -1,   481,   482,    -1,   484,    -1,    -1,   487,    -1,
      -1,   490,   491,   492,    -1,    -1,   495,   496,    -1,   498,
     499,   500,   501,   502,    -1,    -1,    -1,   506,   507,    -1,
     509,   510,    -1,   512,   513,    -1,   515,   516,   517,   518,
     519,   520,    -1,    -1,    -1,   524,    -1,    -1,   527,    -1,
     529,    -1,    -1,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,    -1,    -1,   543,   544,    -1,    -1,    -1,    -1,
     549,    -1,    -1,   552,    -1,    -1,    -1,   556,   557,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,   568,
      -1,    -1,   571,   572,   573,   574,    -1,    -1,    -1,    -1,
     579,    -1,   581,   582,    -1,    -1,     6,   586,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    -1,    -1,    18,    -1,
      -1,    21,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    34,    -1,    36,    37,    -1,    -1,
      -1,    41,    -1,    -1,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      -1,    71,    72,    73,    74,    75,    76,    -1,    -1,    79,
      -1,    -1,    82,    -1,    84,    -1,    -1,    -1,    -1,    -1,
      -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    98,    99,
     100,    -1,    -1,   103,    -1,    -1,    -1,    -1,   108,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,   118,    -1,
      -1,    -1,    -1,    -1,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,    -1,   147,   148,   149,
     150,   151,    -1,    -1,   154,    -1,   156,   157,   158,   159,
     160,    -1,    -1,   163,    -1,   165,   166,    -1,    -1,   169,
      -1,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,    -1,   182,   183,    -1,    -1,   186,    -1,   188,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,   199,
     200,    -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,   209,
     210,    -1,   212,    -1,    -1,   215,    -1,    -1,    -1,   219,
     220,   221,   222,    -1,    -1,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,    -1,   235,   236,    -1,    -1,    -1,
     240,    -1,    -1,   243,   244,    -1,    -1,    -1,    -1,    -1,
      -1,   251,    -1,   253,    -1,    -1,    -1,   257,    -1,    -1,
     260,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,    -1,    -1,   274,    -1,   276,   277,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,
     290,   291,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,    -1,   304,   305,   306,   307,    -1,   309,
     310,   311,    -1,    -1,    -1,   315,   316,   317,   318,   319,
      -1,    -1,   322,   323,    -1,    -1,   326,    -1,   328,    -1,
     330,    -1,    -1,   333,   334,   335,   336,   337,   338,   339,
      -1,    -1,   342,   343,    -1,   345,   346,   347,   348,    -1,
      -1,    -1,   352,   353,    -1,    -1,    -1,    -1,   358,   359,
     360,    -1,   362,   363,   364,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   375,   376,   377,   378,   379,
     380,   381,    -1,   383,   384,   385,    -1,   387,    -1,   389,
      -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,   399,
      -1,   401,   402,   403,    -1,    -1,    -1,   407,    -1,    -1,
      -1,   411,   412,   413,   414,   415,    -1,    -1,   418,   419,
     420,    -1,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,   432,   433,   434,    -1,   436,   437,    -1,    -1,
      -1,   441,   442,    -1,   444,   445,    -1,   447,   448,   449,
     450,   451,    -1,   453,   454,    -1,    -1,    -1,   458,   459,
     460,    -1,    -1,   463,    -1,    -1,    -1,   467,   468,   469,
     470,    -1,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,   481,   482,    -1,   484,    -1,    -1,   487,    -1,    -1,
     490,   491,   492,    -1,    -1,   495,   496,    -1,   498,   499,
     500,   501,   502,    -1,    -1,    -1,   506,   507,    -1,   509,
     510,    -1,   512,   513,    -1,   515,   516,   517,   518,   519,
     520,    -1,    -1,    -1,   524,    -1,    -1,   527,    -1,   529,
      -1,    -1,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,    -1,    -1,   549,
      -1,    -1,   552,    -1,    -1,    -1,   556,   557,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,   568,    -1,
      -1,   571,   572,   573,   574,    -1,    -1,    -1,    -1,   579,
      -1,   581,   582,    -1,    -1,     6,   586,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,
      21,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    34,    -1,    -1,    37,    -1,    -1,    -1,
      41,    -1,    -1,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    -1,
      71,    72,    73,    74,    75,    76,    -1,    -1,    79,    -1,
      -1,    82,    -1,    84,    -1,    -1,    -1,    -1,    -1,    -1,
      91,    -1,    93,    -1,    -1,    -1,    -1,    98,    99,   100,
      -1,    -1,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,
      -1,    -1,    -1,    -1,    -1,   116,    -1,   118,    -1,    -1,
      -1,    -1,    -1,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,    -1,   147,   148,   149,   150,
     151,    -1,    -1,   154,    -1,   156,   157,   158,   159,   160,
      -1,    -1,   163,    -1,   165,   166,    -1,    -1,   169,    -1,
      -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,    -1,   188,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,    -1,   199,   200,
      -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,   209,   210,
      -1,   212,    -1,    -1,   215,    -1,    -1,    -1,   219,   220,
     221,   222,    -1,    -1,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,    -1,   235,   236,    -1,    -1,    -1,   240,
      -1,    -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,   253,    -1,    -1,    -1,   257,    -1,    -1,   260,
     261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,
     271,    -1,    -1,   274,    -1,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,   290,
     291,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
     311,    -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,
      -1,   322,   323,    -1,    -1,   326,    -1,   328,    -1,   330,
      -1,    -1,   333,   334,   335,   336,   337,   338,   339,    -1,
      -1,   342,   343,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,   352,   353,    -1,    -1,    -1,    -1,   358,   359,   360,
      -1,   362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   375,   376,   377,   378,   379,   380,
     381,    -1,   383,   384,   385,    -1,   387,    -1,   389,    -1,
      -1,   392,   393,   394,    -1,   396,    -1,   398,   399,    -1,
     401,   402,   403,    -1,    -1,    -1,   407,    -1,    -1,    -1,
     411,   412,   413,   414,   415,    -1,    -1,   418,   419,   420,
      -1,   422,   423,    -1,   425,   426,   427,    -1,    -1,   430,
      -1,   432,   433,   434,    -1,   436,   437,    -1,    -1,    -1,
     441,   442,    -1,   444,   445,    -1,   447,   448,   449,   450,
     451,    -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,
      -1,    -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,
      -1,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,
     481,   482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,
     491,   492,    -1,    -1,   495,   496,    -1,   498,   499,   500,
     501,   502,    -1,    -1,    -1,   506,   507,    -1,   509,   510,
      -1,   512,   513,    -1,   515,   516,   517,   518,   519,   520,
      -1,    -1,    -1,   524,    -1,    -1,   527,    -1,   529,    -1,
      -1,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
      -1,    -1,   543,   544,    -1,    -1,    -1,    -1,   549,    -1,
      -1,   552,    -1,    -1,    -1,   556,   557,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   565,    -1,    -1,   568,    -1,    -1,
     571,   572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,
     581,   582,    -1,    -1,     6,   586,     8,     9,    10,    11,
      12,    13,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    34,    -1,    -1,    37,    -1,    -1,    -1,    41,
      -1,    -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    -1,    -1,    79,    -1,    -1,
      82,    -1,    84,    -1,    -1,    -1,    -1,    -1,    -1,    91,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    99,   100,    -1,
      -1,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,    -1,
      -1,    -1,    -1,    -1,   116,    -1,   118,    -1,    -1,    -1,
      -1,    -1,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,    -1,   147,   148,   149,   150,   151,
      -1,    -1,   154,    -1,   156,   157,   158,   159,   160,    -1,
      -1,   163,    -1,   165,   166,    -1,    -1,   169,    -1,    -1,
     172,   173,   174,    -1,    -1,   177,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,    -1,   188,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,    -1,   199,   200,    -1,
      -1,   203,    -1,    -1,    -1,    -1,    -1,   209,   210,    -1,
     212,    -1,    -1,   215,    -1,    -1,    -1,   219,   220,   221,
     222,    -1,    -1,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,   240,    -1,
      -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,
      -1,   253,    -1,    -1,    -1,   257,    -1,    -1,   260,   261,
     262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
      -1,    -1,   274,    -1,   276,   277,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,   288,   289,   290,   291,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,
     322,   323,    -1,    -1,   326,    -1,   328,    -1,   330,    -1,
      -1,   333,   334,   335,   336,   337,   338,   339,    -1,    -1,
     342,   343,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
     352,   353,    -1,    -1,    -1,    -1,   358,   359,   360,    -1,
     362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,   377,   378,   379,   380,   381,
      -1,   383,   384,   385,    -1,   387,    -1,   389,    -1,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,    -1,   401,
     402,   403,    -1,    -1,    -1,   407,    -1,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,    -1,
     422,   423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,
     432,   433,   434,    -1,   436,   437,    -1,    -1,    -1,   441,
     442,    -1,   444,   445,    -1,   447,   448,   449,   450,   451,
      -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,
     492,    -1,    -1,   495,   496,    -1,   498,   499,   500,   501,
     502,    -1,    -1,    -1,   506,   507,    -1,   509,   510,    -1,
     512,   513,    -1,   515,   516,   517,   518,   519,   520,    -1,
      -1,    -1,   524,    -1,    -1,   527,    -1,   529,    -1,    -1,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,   543,   544,    -1,    -1,    -1,    -1,   549,    -1,    -1,
     552,    -1,    -1,    -1,   556,   557,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   565,    -1,    -1,   568,    -1,    -1,   571,
     572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,
     582,    -1,    -1,     6,   586,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    34,    -1,    -1,    37,    38,    -1,    -1,    41,    -1,
      -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    -1,    71,    72,
      73,    74,    75,    76,    -1,    -1,    79,    -1,    -1,    82,
      -1,    84,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    -1,    -1,    -1,    98,    99,   100,    -1,    -1,
     103,    -1,    -1,    -1,    -1,   108,    -1,   110,    -1,    -1,
      -1,    -1,    -1,   116,    -1,   118,    -1,    -1,    -1,    -1,
      -1,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
      -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,    -1,   147,   148,   149,   150,   151,    -1,
      -1,   154,    -1,   156,   157,   158,   159,   160,    -1,    -1,
     163,    -1,   165,   166,    -1,    -1,   169,    -1,    -1,   172,
     173,   174,    -1,    -1,   177,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,    -1,   188,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,    -1,   199,   200,    -1,    -1,
     203,    -1,    -1,    -1,    -1,    -1,   209,   210,    -1,   212,
     213,    -1,   215,    -1,    -1,    -1,   219,   220,   221,   222,
      -1,    -1,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,    -1,   235,   236,    -1,    -1,    -1,   240,    -1,    -1,
     243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
     253,    -1,    -1,    -1,   257,    -1,    -1,   260,   261,    -1,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,   290,   291,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,   311,    -1,
      -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,   322,
     323,    -1,    -1,   326,    -1,   328,    -1,   330,    -1,    -1,
     333,   334,   335,   336,   337,   338,   339,    -1,    -1,   342,
     343,    -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,
     353,    -1,    -1,    -1,    -1,   358,   359,   360,    -1,   362,
     363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,   385,    -1,   387,    -1,   389,    -1,    -1,   392,
     393,   394,    -1,   396,    -1,   398,   399,    -1,   401,   402,
     403,    -1,    -1,    -1,   407,    -1,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,    -1,   422,
     423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,   432,
     433,   434,    -1,   436,   437,    -1,    -1,    -1,   441,   442,
      -1,   444,   445,    -1,   447,   448,   449,   450,   451,    -1,
     453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,    -1,
     463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,   472,
     473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,
      -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,   492,
      -1,    -1,   495,   496,    -1,   498,   499,   500,   501,   502,
      -1,    -1,    -1,   506,   507,    -1,   509,   510,    -1,   512,
     513,    -1,   515,   516,   517,   518,   519,   520,    -1,    -1,
      -1,   524,    -1,    -1,   527,    -1,   529,    -1,    -1,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,    -1,    -1,
     543,   544,    -1,    -1,    -1,    -1,   549,    -1,    -1,   552,
      -1,    -1,    -1,   556,   557,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   565,    -1,    -1,   568,    -1,    -1,   571,   572,
     573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,   582,
      -1,    -1,     6,   586,     8,     9,    10,    11,    12,    -1,
      -1,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      34,    -1,    -1,    37,    -1,    -1,    -1,    41,    -1,    -1,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    -1,    71,    72,    73,
      74,    75,    76,    -1,    -1,    79,    -1,    -1,    82,    -1,
      84,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    93,
      -1,    -1,    -1,    -1,    98,    99,   100,    -1,    -1,   103,
      -1,    -1,    -1,    -1,   108,    -1,   110,    -1,    -1,    -1,
      -1,    -1,   116,    -1,   118,    -1,    -1,    -1,    -1,    -1,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,    -1,   147,   148,   149,   150,   151,    -1,    -1,
     154,    -1,   156,   157,   158,   159,   160,    -1,    -1,   163,
      -1,   165,   166,    -1,    -1,   169,    -1,    -1,   172,   173,
     174,    -1,    -1,   177,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,    -1,   188,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,    -1,   199,   200,    -1,    -1,   203,
      -1,    -1,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,
      -1,   215,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
      -1,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
      -1,   235,   236,    -1,    -1,    -1,   240,    -1,    -1,   243,
     244,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,
      -1,    -1,    -1,   257,    -1,    -1,   260,   261,   262,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,    -1,
     274,    -1,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,   288,   289,   290,   291,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,   307,    -1,   309,   310,   311,    -1,    -1,
      -1,   315,   316,   317,   318,   319,    -1,    -1,   322,   323,
      -1,    -1,   326,    -1,   328,    -1,   330,    -1,    -1,   333,
     334,   335,   336,   337,   338,   339,    -1,    -1,   342,   343,
      -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,   353,
      -1,    -1,    -1,    -1,   358,   359,   360,    -1,   362,   363,
     364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   375,   376,   377,   378,   379,   380,   381,    -1,   383,
     384,   385,    -1,   387,    -1,   389,    -1,    -1,   392,   393,
     394,    -1,   396,    -1,   398,   399,    -1,   401,   402,   403,
      -1,    -1,    -1,   407,    -1,    -1,    -1,   411,   412,   413,
     414,   415,    -1,    -1,   418,   419,   420,    -1,   422,   423,
      -1,   425,   426,   427,    -1,    -1,   430,    -1,   432,   433,
     434,    -1,   436,   437,    -1,    -1,    -1,   441,   442,    -1,
     444,   445,    -1,   447,   448,   449,   450,   451,    -1,   453,
     454,    -1,    -1,    -1,   458,   459,   460,    -1,    -1,   463,
      -1,    -1,    -1,   467,   468,   469,   470,    -1,   472,   473,
     474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,
     484,    -1,    -1,   487,    -1,    -1,   490,   491,   492,    -1,
      -1,   495,   496,    -1,   498,   499,   500,   501,   502,    -1,
      -1,    -1,   506,   507,    -1,   509,   510,    -1,   512,   513,
      -1,   515,   516,   517,   518,   519,   520,    -1,    -1,    -1,
     524,    -1,    -1,   527,    -1,   529,    -1,    -1,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,    -1,    -1,   543,
     544,    -1,    -1,    -1,    -1,   549,    -1,    -1,   552,    -1,
      -1,    -1,   556,   557,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   565,    -1,    -1,   568,    -1,    -1,   571,   572,   573,
     574,    -1,    -1,    -1,    -1,   579,    -1,   581,   582,    -1,
      -1,     6,   586,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    34,
      -1,    -1,    37,    -1,    -1,    -1,    41,    -1,    -1,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    -1,    71,    72,    73,    74,
      75,    76,    -1,    -1,    79,    -1,    -1,    82,    -1,    84,
      -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    98,    99,   100,    -1,    -1,   103,    -1,
      -1,    -1,    -1,   108,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,   118,    -1,    -1,    -1,    -1,    -1,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,    -1,   134,
      -1,    -1,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,    -1,   147,   148,   149,   150,   151,    -1,    -1,   154,
      -1,   156,   157,   158,   159,   160,    -1,    -1,   163,    -1,
     165,   166,    -1,    -1,   169,    -1,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,    -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,    -1,   199,   200,    -1,    -1,   203,    -1,
      -1,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,
     215,    -1,    -1,    -1,   219,   220,   221,   222,    -1,    -1,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,    -1,
     235,   236,    -1,    -1,    -1,   240,    -1,    -1,   243,   244,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,
      -1,    -1,   257,    -1,    -1,   260,   261,   262,    -1,    -1,
      -1,    -1,    -1,   268,   269,    -1,   271,    -1,    -1,   274,
      -1,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,   290,   291,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,   311,    -1,    -1,    -1,
     315,   316,   317,   318,   319,    -1,    -1,   322,   323,    -1,
      -1,   326,    -1,   328,    -1,   330,    -1,    -1,   333,   334,
     335,   336,   337,   338,   339,    -1,    -1,   342,   343,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,    -1,   358,   359,   360,    -1,   362,   363,   364,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     375,   376,   377,   378,   379,   380,   381,    -1,   383,   384,
     385,    -1,   387,    -1,   389,    -1,    -1,   392,   393,   394,
      -1,   396,    -1,   398,   399,    -1,   401,   402,   403,    -1,
      -1,    -1,   407,    -1,    -1,    -1,   411,   412,   413,   414,
     415,    -1,    -1,   418,   419,   420,    -1,   422,   423,    -1,
     425,   426,   427,    -1,    -1,   430,    -1,   432,   433,   434,
      -1,   436,   437,    -1,    -1,    -1,   441,   442,    -1,   444,
     445,    -1,   447,   448,   449,   450,   451,    -1,   453,   454,
      -1,    -1,    -1,   458,   459,   460,    -1,    -1,   463,    -1,
      -1,    -1,   467,   468,   469,   470,    -1,   472,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,   484,
      -1,    -1,   487,    -1,    -1,   490,   491,   492,    -1,    -1,
     495,   496,    -1,   498,   499,   500,   501,   502,    -1,    -1,
      -1,   506,   507,    -1,   509,   510,    -1,   512,   513,    -1,
     515,   516,   517,   518,   519,   520,    -1,    -1,    -1,   524,
      -1,    -1,   527,    -1,   529,    -1,    -1,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,    -1,    -1,   543,   544,
      -1,    -1,    -1,    -1,   549,    -1,    -1,   552,    -1,    -1,
      -1,   556,   557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     565,    -1,    -1,   568,    -1,    -1,   571,   572,   573,   574,
      -1,    -1,    -1,    -1,   579,    -1,   581,   582,    -1,    -1,
       6,   586,     8,     9,    10,    11,    12,    -1,    -1,    -1,
      -1,    -1,    18,    -1,    -1,    21,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    34,    -1,
      36,    37,    -1,    -1,    -1,    41,    -1,    -1,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    -1,    71,    72,    73,    74,    75,
      76,    -1,    -1,    79,    -1,    -1,    82,    -1,    84,    -1,
      -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,
      -1,    -1,    98,    99,   100,    -1,    -1,   103,    -1,    -1,
      -1,    -1,   108,    -1,   110,    -1,    -1,    -1,    -1,    -1,
     116,    -1,   118,    -1,    -1,    -1,    -1,    -1,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
      -1,   147,   148,   149,   150,   151,    -1,    -1,   154,    -1,
     156,   157,   158,   159,   160,    -1,    -1,   163,    -1,   165,
     166,    -1,    -1,   169,    -1,    -1,   172,   173,   174,    -1,
      -1,   177,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,    -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,    -1,   199,   200,    -1,    -1,   203,    -1,    -1,
      -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,
      -1,    -1,    -1,   219,   220,   221,   222,    -1,    -1,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,    -1,   235,
     236,    -1,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,
      -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,
      -1,   257,    -1,    -1,   260,   261,   262,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,    -1,   274,    -1,
     276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,   288,   289,   290,   291,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,   311,    -1,    -1,    -1,   315,
     316,   317,   318,   319,    -1,    -1,   322,   323,    -1,    -1,
     326,    -1,   328,    -1,   330,    -1,    -1,   333,   334,   335,
     336,   337,   338,   339,    -1,    -1,   342,   343,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,
      -1,    -1,   358,   359,   360,    -1,   362,   363,   364,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,
     376,   377,   378,   379,   380,   381,    -1,   383,   384,   385,
      -1,   387,    -1,   389,    -1,    -1,   392,   393,   394,    -1,
     396,    -1,   398,   399,    -1,   401,   402,   403,    -1,    -1,
      -1,   407,    -1,    -1,    -1,   411,   412,   413,   414,   415,
      -1,    -1,   418,   419,   420,    -1,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,   432,   433,   434,    -1,
     436,   437,    -1,    -1,    -1,   441,   442,    -1,   444,   445,
      -1,   447,   448,   449,   450,   451,    -1,   453,   454,    -1,
      -1,    -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,
      -1,   467,   468,   469,   470,    -1,   472,   473,   474,    -1,
      -1,    -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,
      -1,   487,    -1,    -1,   490,   491,   492,    -1,    -1,   495,
     496,    -1,   498,   499,   500,   501,   502,    -1,    -1,    -1,
     506,   507,    -1,   509,   510,    -1,   512,   513,    -1,   515,
     516,   517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,
      -1,   527,    -1,   529,    -1,    -1,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,   543,   544,    -1,
      -1,    -1,    -1,   549,    -1,    -1,   552,    -1,    -1,    -1,
     556,   557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,
      -1,    -1,   568,    -1,    -1,   571,   572,   573,   574,    -1,
      -1,    -1,    -1,   579,    -1,   581,   582,    -1,    -1,     6,
     586,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    34,    -1,    -1,
      37,    -1,    -1,    -1,    41,    -1,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      -1,    -1,    79,    -1,    -1,    82,    -1,    84,    -1,    -1,
      -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    99,   100,    -1,    -1,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,    -1,    -1,    -1,    -1,    -1,   116,
      -1,   118,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,    -1,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,    -1,    -1,   163,    -1,   165,   166,
      -1,    -1,   169,    -1,    -1,   172,   173,   174,    -1,    -1,
     177,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
      -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,    -1,   199,   200,    -1,    -1,   203,    -1,    -1,    -1,
      -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,    -1,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,    -1,   235,   236,
      -1,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,    -1,
     257,    -1,    -1,   260,   261,   262,    -1,    -1,    -1,    -1,
      -1,   268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,   290,   291,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,    -1,    -1,   326,
      -1,   328,    -1,   330,    -1,    -1,   333,   334,   335,   336,
     337,   338,   339,    -1,    -1,   342,   343,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,   385,    -1,
     387,    -1,   389,    -1,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,    -1,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,    -1,    -1,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,    -1,   441,   442,    -1,   444,   445,    -1,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,    -1,    -1,   495,   496,
      -1,   498,   499,   500,   501,   502,    -1,    -1,    -1,   506,
     507,    -1,   509,   510,    -1,   512,   513,    -1,   515,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,    -1,    -1,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,
      -1,    -1,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,
      -1,   568,    -1,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,    -1,     6,   586,
       8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,
      18,    19,    -1,    21,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    34,    -1,    -1,    37,
      -1,    -1,    -1,    41,    -1,    -1,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    -1,    71,    72,    73,    74,    75,    76,    -1,
      -1,    79,    -1,    -1,    82,    -1,    84,    -1,    -1,    -1,
      -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,
      98,    99,   100,    -1,    -1,   103,    -1,    -1,    -1,    -1,
     108,    -1,   110,    -1,    -1,    -1,    -1,    -1,   116,    -1,
     118,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,    -1,   147,
     148,   149,   150,   151,    -1,    -1,   154,    -1,   156,   157,
     158,   159,   160,    -1,    -1,   163,    -1,   165,   166,    -1,
      -1,   169,    -1,    -1,   172,   173,   174,    -1,    -1,   177,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,    -1,
     188,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
      -1,   199,   200,    -1,    -1,   203,    -1,    -1,    -1,    -1,
      -1,   209,   210,    -1,   212,    -1,    -1,   215,    -1,    -1,
      -1,   219,   220,   221,   222,    -1,    -1,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,    -1,   235,   236,    -1,
      -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,    -1,
      -1,    -1,    -1,   251,    -1,   253,    -1,    -1,    -1,   257,
      -1,    -1,   260,   261,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
     288,   289,   290,   291,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,   311,    -1,    -1,    -1,   315,   316,   317,
     318,   319,    -1,    -1,   322,   323,    -1,    -1,   326,    -1,
     328,    -1,   330,    -1,    -1,   333,   334,   335,   336,   337,
     338,   339,    -1,    -1,   342,   343,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,    -1,
     358,   359,   360,    -1,   362,   363,   364,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,   385,    -1,   387,
      -1,   389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,
     398,   399,    -1,   401,   402,   403,    -1,    -1,    -1,   407,
      -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,
     418,   419,   420,    -1,   422,   423,    -1,   425,   426,   427,
      -1,    -1,   430,    -1,   432,   433,   434,    -1,   436,   437,
      -1,    -1,    -1,   441,   442,    -1,   444,   445,    -1,   447,
     448,   449,   450,   451,    -1,   453,   454,    -1,    -1,    -1,
     458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,   467,
     468,   469,   470,    -1,   472,   473,   474,    -1,    -1,    -1,
      -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,   487,
      -1,    -1,   490,   491,   492,    -1,    -1,   495,   496,    -1,
     498,   499,   500,   501,   502,    -1,    -1,    -1,   506,   507,
      -1,   509,   510,    -1,   512,   513,    -1,   515,   516,   517,
     518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,   527,
      -1,   529,    -1,    -1,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,    -1,
      -1,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,   557,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,
     568,    -1,    -1,   571,   572,   573,   574,    -1,    -1,    -1,
      -1,   579,    -1,   581,   582,    -1,    -1,     6,   586,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    18,
      -1,    -1,    21,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    34,    -1,    -1,    37,    -1,
      -1,    -1,    41,    -1,    -1,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    -1,    71,    72,    73,    74,    75,    76,    -1,    -1,
      79,    -1,    -1,    82,    -1,    84,    85,    -1,    -1,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    98,
      99,   100,    -1,    -1,   103,    -1,    -1,    -1,    -1,   108,
      -1,   110,    -1,    -1,    -1,    -1,    -1,   116,    -1,   118,
      -1,    -1,    -1,    -1,    -1,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,    -1,   134,    -1,    -1,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,    -1,   147,   148,
     149,   150,   151,    -1,    -1,   154,    -1,   156,   157,   158,
     159,   160,    -1,   162,   163,    -1,   165,   166,    -1,    -1,
     169,    -1,    -1,   172,   173,   174,    -1,    -1,   177,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,    -1,   188,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,
     199,   200,    -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,
     209,   210,    -1,   212,    -1,    -1,   215,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,    -1,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,    -1,   235,   236,    -1,    -1,
      -1,   240,    -1,    -1,   243,   244,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,   253,    -1,    -1,    -1,   257,    -1,
      -1,   260,   261,    -1,    -1,    -1,    -1,    -1,    -1,   268,
     269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,   290,   291,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,   311,    -1,    -1,    -1,   315,   316,   317,   318,
     319,    -1,    -1,   322,   323,    -1,    -1,   326,    -1,   328,
      -1,   330,    -1,    -1,   333,   334,   335,   336,   337,   338,
     339,    -1,    -1,   342,   343,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,    -1,    -1,   358,
     359,   360,    -1,   362,   363,   364,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   375,   376,   377,   378,
     379,   380,   381,    -1,   383,   384,   385,    -1,   387,    -1,
     389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,
     399,    -1,   401,   402,   403,    -1,    -1,    -1,   407,    -1,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,    -1,   422,   423,    -1,   425,   426,   427,    -1,
      -1,   430,    -1,   432,   433,   434,    -1,   436,   437,    -1,
      -1,    -1,   441,   442,    -1,   444,   445,    -1,   447,   448,
     449,   450,   451,    -1,   453,   454,    -1,    -1,    -1,   458,
     459,   460,    -1,    -1,   463,    -1,    -1,    -1,   467,   468,
     469,   470,    -1,   472,   473,   474,    -1,    -1,    -1,    -1,
      -1,    -1,   481,   482,    -1,   484,    -1,    -1,   487,    -1,
      -1,   490,   491,   492,    -1,    -1,   495,   496,    -1,   498,
     499,   500,   501,   502,    -1,    -1,    -1,   506,   507,    -1,
     509,   510,    -1,   512,   513,    -1,    -1,   516,   517,   518,
     519,   520,    -1,    -1,    -1,   524,    -1,    -1,   527,    -1,
     529,    -1,    -1,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,    -1,    -1,   543,   544,    -1,    -1,    -1,    -1,
     549,    -1,    -1,   552,    -1,    -1,    -1,   556,   557,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,   568,
      -1,    -1,   571,   572,   573,   574,    -1,    -1,    -1,    -1,
     579,    -1,   581,   582,    -1,    -1,     6,   586,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    -1,    -1,    18,    -1,
      -1,    21,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    34,    -1,    -1,    37,    -1,    -1,
      -1,    41,    -1,    -1,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      -1,    71,    72,    73,    74,    75,    76,    -1,    -1,    79,
      -1,    -1,    82,    -1,    84,    -1,    -1,    -1,    -1,    -1,
      -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    98,    99,
     100,    -1,    -1,   103,    -1,    -1,    -1,    -1,   108,    -1,
     110,    -1,    -1,    -1,    -1,    -1,   116,    -1,   118,    -1,
      -1,    -1,    -1,    -1,   124,    -1,   126,   127,   128,   129,
     130,    -1,    -1,    -1,   134,    -1,    -1,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,    -1,   147,   148,   149,
     150,   151,    -1,    -1,   154,    -1,   156,   157,   158,   159,
     160,    -1,    -1,   163,    -1,   165,   166,    -1,    -1,   169,
      -1,    -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,
      -1,    -1,   182,   183,   184,    -1,   186,    -1,   188,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,   199,
     200,    -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,   209,
     210,    -1,   212,    -1,    -1,   215,    -1,    -1,    -1,   219,
     220,   221,   222,    -1,    -1,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,    -1,   235,   236,    -1,    -1,    -1,
     240,    -1,    -1,   243,   244,    -1,    -1,    -1,    -1,    -1,
      -1,   251,    -1,   253,    -1,    -1,    -1,   257,    -1,    -1,
     260,   261,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,    -1,    -1,   274,    -1,   276,   277,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,
     290,   291,   292,    -1,   294,   295,   296,   297,   298,   299,
     300,   301,   302,    -1,   304,   305,   306,   307,    -1,   309,
     310,   311,    -1,    -1,    -1,   315,   316,   317,   318,   319,
      -1,    -1,   322,   323,    -1,    -1,   326,    -1,   328,    -1,
     330,    -1,    -1,   333,   334,   335,   336,   337,   338,   339,
      -1,    -1,   342,   343,    -1,   345,   346,   347,   348,    -1,
      -1,    -1,   352,   353,    -1,    -1,    -1,    -1,   358,   359,
     360,    -1,   362,   363,   364,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   375,   376,   377,   378,   379,
     380,   381,    -1,   383,   384,   385,    -1,   387,    -1,   389,
      -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,   399,
      -1,   401,   402,   403,    -1,    -1,    -1,   407,    -1,    -1,
      -1,   411,   412,   413,   414,   415,    -1,    -1,   418,   419,
     420,    -1,   422,   423,    -1,   425,   426,   427,    -1,    -1,
     430,    -1,   432,   433,   434,    -1,   436,   437,    -1,    -1,
      -1,   441,   442,    -1,   444,   445,    -1,   447,   448,   449,
     450,   451,    -1,   453,   454,    -1,    -1,    -1,   458,   459,
     460,    -1,    -1,   463,    -1,    -1,    -1,   467,   468,   469,
     470,    -1,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,   481,   482,    -1,   484,    -1,    -1,   487,    -1,    -1,
     490,   491,   492,    -1,    -1,   495,   496,    -1,   498,   499,
     500,   501,   502,    -1,    -1,    -1,   506,   507,    -1,   509,
     510,    -1,   512,   513,    -1,    -1,   516,   517,   518,   519,
     520,    -1,    -1,    -1,   524,    -1,    -1,   527,    -1,   529,
      -1,    -1,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,    -1,    -1,   543,   544,    -1,    -1,    -1,    -1,   549,
      -1,    -1,   552,    -1,    -1,    -1,   556,   557,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,   568,    -1,
      -1,   571,   572,   573,   574,    -1,    -1,    -1,    -1,   579,
      -1,   581,   582,    -1,    -1,     6,   586,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,
      21,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    34,    -1,    -1,    37,    -1,    -1,    -1,
      41,    -1,    -1,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    -1,
      71,    72,    73,    74,    75,    76,    -1,    -1,    79,    -1,
      -1,    82,    -1,    84,    -1,    -1,    -1,    -1,    -1,    -1,
      91,    -1,    -1,    -1,    -1,    -1,    -1,    98,    99,   100,
      -1,    -1,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,   118,    -1,    -1,
      -1,    -1,    -1,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,    -1,   147,   148,   149,   150,
     151,    -1,    -1,   154,    -1,   156,   157,   158,   159,   160,
      -1,    -1,   163,    -1,   165,   166,    -1,    -1,   169,    -1,
      -1,   172,   173,   174,    -1,    -1,   177,    -1,    -1,    -1,
      -1,   182,   183,    -1,    -1,   186,    -1,   188,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,    -1,   199,   200,
      -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,   209,   210,
      -1,   212,    -1,    -1,   215,    -1,    -1,    -1,   219,   220,
     221,   222,    -1,    -1,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,    -1,   235,   236,    -1,    -1,    -1,   240,
      -1,    -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,
     251,    -1,   253,    -1,    -1,    -1,   257,    -1,    -1,   260,
     261,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,
     271,    -1,    -1,   274,    -1,   276,   277,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,   288,   289,   290,
     291,   292,    -1,   294,   295,   296,   297,   298,   299,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
     311,    -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,
      -1,   322,   323,    -1,    -1,   326,    -1,   328,    -1,   330,
      -1,    -1,   333,   334,   335,   336,   337,   338,   339,    -1,
      -1,   342,   343,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,   352,   353,    -1,    -1,    -1,    -1,   358,   359,   360,
      -1,   362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   375,   376,   377,   378,   379,   380,
     381,    -1,   383,   384,   385,    -1,   387,    -1,   389,    -1,
      -1,   392,   393,   394,    -1,   396,    -1,   398,   399,    -1,
     401,   402,   403,    -1,    -1,    -1,   407,    -1,    -1,    -1,
     411,   412,   413,   414,   415,    -1,    -1,   418,   419,   420,
      -1,   422,   423,    -1,   425,   426,   427,    -1,    -1,   430,
      -1,   432,   433,   434,    -1,   436,   437,    -1,    -1,    -1,
     441,   442,    -1,   444,   445,    -1,   447,   448,   449,   450,
     451,    -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,
      -1,    -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,
      -1,   472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,
     481,   482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,
     491,   492,    -1,    -1,   495,   496,    -1,   498,   499,   500,
     501,   502,    -1,    -1,    -1,   506,   507,    -1,   509,   510,
      -1,   512,   513,    -1,    -1,   516,   517,   518,   519,   520,
      -1,    -1,    -1,   524,    -1,    -1,   527,    -1,   529,    -1,
      -1,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
      -1,    -1,   543,   544,    -1,    -1,    -1,    -1,   549,    -1,
      -1,   552,    -1,    -1,    -1,   556,   557,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   565,    -1,    -1,   568,    -1,    -1,
     571,   572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,
     581,   582,    -1,    -1,     6,   586,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    34,    -1,    -1,    37,    -1,    -1,    -1,    41,
      -1,    -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    -1,    71,
      72,    73,    74,    75,    76,    -1,    -1,    79,    -1,    -1,
      82,    -1,    84,    -1,    -1,    -1,    -1,    -1,    -1,    91,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    99,   100,    -1,
      -1,   103,    -1,    -1,    -1,    -1,   108,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,   118,    -1,    -1,    -1,
      -1,    -1,   124,    -1,   126,   127,   128,   129,   130,    -1,
      -1,    -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,    -1,   147,   148,   149,   150,   151,
      -1,    -1,   154,    -1,   156,   157,   158,   159,   160,    -1,
      -1,   163,    -1,   165,   166,    -1,    -1,   169,    -1,    -1,
     172,   173,   174,    -1,    -1,   177,    -1,    -1,    -1,    -1,
     182,   183,    -1,    -1,   186,    -1,   188,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,    -1,   199,   200,    -1,
      -1,   203,    -1,    -1,    -1,    -1,    -1,   209,   210,    -1,
     212,    -1,    -1,   215,    -1,    -1,    -1,   219,   220,   221,
     222,    -1,    -1,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,    -1,   235,   236,    -1,    -1,    -1,   240,    -1,
      -1,   243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,
      -1,   253,    -1,    -1,    -1,   257,    -1,    -1,   260,   261,
      -1,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
      -1,    -1,   274,    -1,   276,   277,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,   288,   289,   290,   291,
     292,    -1,   294,   295,   296,   297,   298,   299,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,
     322,   323,    -1,    -1,   326,    -1,   328,    -1,   330,    -1,
      -1,   333,   334,   335,   336,   337,   338,   339,    -1,    -1,
     342,   343,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
     352,   353,    -1,    -1,    -1,    -1,   358,   359,   360,    -1,
     362,   363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   375,   376,   377,   378,   379,   380,   381,
      -1,   383,   384,   385,    -1,   387,    -1,   389,    -1,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,    -1,   401,
     402,   403,    -1,    -1,    -1,   407,    -1,    -1,    -1,   411,
     412,   413,   414,   415,    -1,    -1,   418,   419,   420,    -1,
     422,   423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,
     432,   433,   434,    -1,   436,   437,    -1,    -1,    -1,   441,
     442,    -1,   444,   445,    -1,   447,   448,   449,   450,   451,
      -1,   453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,
     472,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,
     482,    -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,
     492,    -1,    -1,   495,   496,    -1,   498,   499,   500,   501,
     502,    -1,    -1,    -1,   506,   507,    -1,   509,   510,    -1,
     512,   513,    -1,    -1,   516,   517,   518,   519,   520,    -1,
      -1,    -1,   524,    -1,    -1,   527,    -1,   529,    -1,    -1,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,   543,   544,    -1,    -1,    -1,    -1,   549,    -1,    -1,
     552,    -1,    -1,    -1,   556,   557,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   565,    -1,    -1,   568,    -1,    -1,   571,
     572,   573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,
     582,    -1,    -1,     6,   586,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    34,    -1,    -1,    37,    -1,    -1,    -1,    41,    -1,
      -1,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    -1,    71,    72,
      73,    74,    75,    76,    -1,    -1,    79,    -1,    -1,    82,
      -1,    84,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    -1,    -1,    -1,    98,    99,   100,    -1,    -1,
     103,    -1,    -1,    -1,    -1,   108,    -1,   110,    -1,    -1,
      -1,    -1,    -1,   116,    -1,   118,    -1,    -1,    -1,    -1,
      -1,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
      -1,   134,    -1,    -1,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,    -1,   147,   148,   149,   150,   151,    -1,
      -1,   154,    -1,   156,   157,   158,   159,   160,    -1,    -1,
     163,    -1,   165,   166,    -1,    -1,   169,    -1,    -1,   172,
     173,   174,    -1,    -1,   177,    -1,    -1,    -1,    -1,   182,
     183,    -1,    -1,   186,    -1,   188,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,    -1,   199,   200,    -1,    -1,
     203,    -1,    -1,    -1,    -1,    -1,   209,   210,    -1,   212,
      -1,    -1,   215,    -1,    -1,    -1,   219,   220,   221,   222,
      -1,    -1,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,    -1,   235,   236,    -1,    -1,    -1,   240,    -1,    -1,
     243,   244,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
     253,    -1,    -1,    -1,   257,    -1,    -1,   260,   261,    -1,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
      -1,   274,    -1,   276,   277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,   288,   289,   290,   291,   292,
      -1,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,   311,    -1,
      -1,    -1,   315,   316,   317,   318,   319,    -1,    -1,   322,
     323,    -1,    -1,   326,    -1,   328,    -1,   330,    -1,    -1,
     333,   334,   335,   336,   337,   338,   339,    -1,    -1,   342,
     343,    -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,
     353,    -1,    -1,    -1,    -1,   358,   359,   360,    -1,   362,
     363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   375,   376,   377,   378,   379,   380,   381,    -1,
     383,   384,   385,    -1,   387,    -1,   389,    -1,    -1,   392,
     393,   394,   395,   396,    -1,   398,   399,    -1,   401,   402,
     403,    -1,    -1,    -1,   407,    -1,    -1,    -1,   411,   412,
     413,   414,   415,    -1,    -1,   418,   419,   420,    -1,   422,
     423,    -1,   425,   426,   427,    -1,    -1,   430,    -1,   432,
     433,   434,    -1,   436,   437,    -1,    -1,    -1,   441,   442,
      -1,   444,   445,    -1,   447,   448,   449,   450,   451,    -1,
     453,   454,    -1,    -1,    -1,   458,   459,   460,    -1,    -1,
     463,    -1,    -1,    -1,   467,   468,   469,   470,    -1,   472,
     473,   474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,
      -1,   484,    -1,    -1,   487,    -1,    -1,   490,   491,   492,
      -1,    -1,   495,   496,    -1,   498,   499,   500,   501,   502,
      -1,    -1,    -1,   506,   507,    -1,   509,   510,    -1,   512,
     513,    -1,    -1,   516,   517,   518,   519,   520,    -1,    -1,
      -1,   524,    -1,    -1,   527,    -1,   529,    -1,    -1,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,    -1,    -1,
     543,   544,    -1,    -1,    -1,    -1,   549,    -1,    -1,   552,
      -1,    -1,    -1,   556,   557,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   565,    -1,    -1,   568,    -1,    -1,   571,   572,
     573,   574,    -1,    -1,    -1,    -1,   579,    -1,   581,   582,
      -1,    -1,     6,   586,     8,     9,    10,    11,    12,    13,
      -1,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      34,    -1,    -1,    37,    -1,    -1,    -1,    41,    -1,    -1,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    -1,    71,    72,    73,
      74,    75,    76,    -1,    -1,    79,    -1,    -1,    82,    -1,
      84,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    98,    99,   100,    -1,    -1,   103,
      -1,    -1,    -1,    -1,   108,    -1,   110,    -1,    -1,    -1,
      -1,    -1,   116,    -1,   118,    -1,    -1,    -1,    -1,    -1,
     124,    -1,   126,   127,   128,   129,   130,    -1,    -1,    -1,
     134,    -1,    -1,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,    -1,   147,   148,   149,   150,   151,    -1,    -1,
     154,    -1,   156,   157,   158,   159,   160,    -1,    -1,   163,
      -1,   165,   166,    -1,    -1,   169,    -1,    -1,   172,   173,
     174,    -1,    -1,   177,    -1,    -1,    -1,    -1,   182,   183,
      -1,    -1,   186,    -1,   188,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,    -1,   199,   200,    -1,    -1,   203,
      -1,    -1,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,
      -1,   215,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
      -1,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
      -1,   235,   236,    -1,    -1,    -1,   240,    -1,    -1,   243,
     244,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,
      -1,    -1,    -1,   257,    -1,    -1,   260,   261,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,    -1,
     274,    -1,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   287,   288,   289,   290,   291,   292,    -1,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,   307,    -1,   309,   310,   311,    -1,    -1,
      -1,   315,   316,   317,   318,   319,    -1,    -1,   322,   323,
      -1,    -1,   326,    -1,   328,    -1,   330,    -1,    -1,   333,
     334,   335,   336,   337,   338,   339,    -1,    -1,   342,   343,
      -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,   353,
      -1,    -1,    -1,    -1,   358,   359,   360,    -1,   362,   363,
     364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   375,   376,   377,   378,   379,   380,   381,    -1,   383,
     384,   385,    -1,   387,    -1,   389,    -1,    -1,   392,   393,
     394,    -1,   396,    -1,   398,   399,    -1,   401,   402,   403,
      -1,    -1,    -1,   407,    -1,    -1,    -1,   411,   412,   413,
     414,   415,    -1,    -1,   418,   419,   420,    -1,   422,   423,
      -1,   425,   426,   427,    -1,    -1,   430,    -1,   432,   433,
     434,    -1,   436,   437,    -1,    -1,    -1,   441,   442,    -1,
     444,   445,    -1,   447,   448,   449,   450,   451,    -1,   453,
     454,    -1,    -1,    -1,   458,   459,   460,    -1,    -1,   463,
      -1,    -1,    -1,   467,   468,   469,   470,    -1,   472,   473,
     474,    -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,
     484,    -1,    -1,   487,    -1,    -1,   490,   491,   492,    -1,
      -1,   495,   496,    -1,   498,   499,   500,   501,   502,    -1,
      -1,    -1,   506,   507,    -1,   509,   510,    -1,   512,   513,
      -1,    -1,   516,   517,   518,   519,   520,    -1,    -1,    -1,
     524,    -1,    -1,   527,    -1,   529,    -1,    -1,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,    -1,    -1,   543,
     544,    -1,    -1,    -1,    -1,   549,    -1,    -1,   552,    -1,
      -1,    -1,   556,   557,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   565,    -1,    -1,   568,    -1,    -1,   571,   572,   573,
     574,    -1,    -1,    -1,    -1,   579,    -1,   581,   582,    -1,
      -1,     6,   586,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    34,
      -1,    -1,    37,    -1,    -1,    -1,    41,    -1,    -1,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    -1,    71,    72,    73,    74,
      75,    76,    -1,    -1,    79,    -1,    -1,    82,    -1,    84,
      -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      -1,    -1,    -1,    98,    99,   100,    -1,    -1,   103,    -1,
      -1,    -1,    -1,   108,    -1,   110,    -1,    -1,    -1,    -1,
      -1,   116,    -1,   118,    -1,    -1,    -1,    -1,    -1,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,    -1,   134,
      -1,    -1,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,    -1,   147,   148,   149,   150,   151,    -1,    -1,   154,
      -1,   156,   157,   158,   159,   160,    -1,    -1,   163,    -1,
     165,   166,    -1,    -1,   169,    -1,    -1,   172,   173,   174,
      -1,    -1,   177,    -1,    -1,    -1,    -1,   182,   183,    -1,
      -1,   186,    -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,    -1,   199,   200,    -1,    -1,   203,    -1,
      -1,    -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,
     215,    -1,    -1,    -1,   219,   220,   221,   222,    -1,    -1,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,    -1,
     235,   236,    -1,    -1,    -1,   240,    -1,    -1,   243,   244,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,
      -1,    -1,   257,    -1,    -1,   260,   261,    -1,    -1,    -1,
      -1,    -1,    -1,   268,   269,    -1,   271,    -1,    -1,   274,
      -1,   276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   288,   289,   290,   291,   292,    -1,   294,
     295,   296,   297,   298,   299,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,   311,    -1,    -1,    -1,
     315,   316,   317,   318,   319,    -1,    -1,   322,   323,    -1,
      -1,   326,    -1,   328,    -1,   330,    -1,    -1,   333,   334,
     335,   336,   337,   338,   339,    -1,    -1,   342,   343,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,    -1,   358,   359,   360,    -1,   362,   363,   364,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     375,   376,   377,   378,   379,   380,   381,    -1,   383,   384,
     385,    -1,   387,    -1,   389,    -1,    -1,   392,   393,   394,
      -1,   396,    -1,   398,   399,    -1,   401,   402,   403,    -1,
      -1,    -1,   407,    -1,    -1,    -1,   411,   412,   413,   414,
     415,    -1,    -1,   418,   419,   420,    -1,   422,   423,    -1,
     425,   426,   427,    -1,    -1,   430,    -1,   432,   433,   434,
      -1,   436,   437,    -1,    -1,    -1,   441,   442,    -1,   444,
     445,    -1,   447,   448,   449,   450,   451,    -1,   453,   454,
      -1,    -1,    -1,   458,   459,   460,    -1,    -1,   463,    -1,
      -1,    -1,   467,   468,   469,   470,    -1,   472,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,   481,   482,    -1,   484,
      -1,    -1,   487,    -1,    -1,   490,   491,   492,    -1,    -1,
     495,   496,    -1,   498,   499,   500,   501,   502,    -1,    -1,
      -1,   506,   507,    -1,   509,   510,    -1,   512,   513,    -1,
     515,   516,   517,   518,   519,   520,    -1,    -1,    -1,   524,
      -1,    -1,   527,    -1,   529,    -1,    -1,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,    -1,    -1,   543,   544,
      -1,    -1,    -1,    -1,   549,    -1,    -1,   552,    -1,    -1,
      -1,   556,   557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     565,    -1,    -1,   568,    -1,    -1,   571,   572,   573,   574,
      -1,    -1,    -1,    -1,   579,    -1,   581,   582,    -1,    -1,
       6,   586,     8,     9,    10,    11,    12,    -1,    -1,    -1,
      -1,    -1,    18,    -1,    -1,    21,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    34,    -1,
      -1,    37,    -1,    -1,    -1,    41,    -1,    -1,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    -1,    71,    72,    73,    74,    75,
      76,    -1,    -1,    79,    -1,    -1,    82,    -1,    84,    -1,
      -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,
      -1,    -1,    98,    99,   100,    -1,    -1,   103,    -1,    -1,
      -1,    -1,   108,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,   118,    -1,    -1,    -1,    -1,    -1,   124,    -1,
     126,   127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,
      -1,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
      -1,   147,   148,   149,   150,   151,    -1,    -1,   154,    -1,
     156,   157,   158,   159,   160,    -1,    -1,   163,    -1,   165,
     166,    -1,    -1,   169,    -1,    -1,   172,   173,   174,    -1,
      -1,   177,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,
     186,    -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,    -1,   199,   200,    -1,    -1,   203,    -1,    -1,
      -1,    -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,
      -1,    -1,    -1,   219,   220,   221,   222,    -1,    -1,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,    -1,   235,
     236,    -1,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,
      -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,
      -1,   257,    -1,    -1,   260,   261,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,    -1,   274,    -1,
     276,   277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,   288,   289,   290,   291,   292,    -1,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,   311,    -1,    -1,    -1,   315,
     316,   317,   318,   319,    -1,    -1,   322,   323,    -1,    -1,
     326,    -1,   328,    -1,   330,    -1,    -1,   333,   334,   335,
     336,   337,   338,   339,    -1,    -1,   342,   343,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,
      -1,    -1,   358,   359,   360,    -1,   362,   363,   364,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,
     376,   377,   378,   379,   380,   381,    -1,   383,   384,   385,
      -1,   387,    -1,   389,    -1,    -1,   392,   393,   394,    -1,
     396,    -1,   398,   399,    -1,   401,   402,   403,    -1,    -1,
      -1,   407,    -1,    -1,    -1,   411,   412,   413,   414,   415,
      -1,    -1,   418,   419,   420,    -1,   422,   423,    -1,   425,
     426,   427,    -1,    -1,   430,    -1,   432,   433,   434,    -1,
     436,   437,    -1,    -1,    -1,   441,   442,    -1,   444,   445,
      -1,   447,   448,   449,   450,   451,    -1,   453,   454,    -1,
      -1,    -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,
      -1,   467,   468,   469,   470,    -1,   472,   473,   474,    -1,
      -1,    -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,
      -1,   487,    -1,    -1,   490,   491,   492,    -1,    -1,   495,
     496,    -1,   498,   499,   500,   501,   502,    -1,    -1,    -1,
     506,   507,    -1,   509,   510,    -1,   512,   513,    -1,    -1,
     516,   517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,
      -1,   527,    -1,   529,    -1,    -1,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,   543,   544,    -1,
      -1,    -1,    -1,   549,    -1,    -1,   552,    -1,    -1,    -1,
     556,   557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,
      -1,    -1,   568,    -1,    -1,   571,   572,   573,   574,    -1,
      -1,    -1,    -1,   579,    -1,   581,   582,    -1,    -1,     6,
     586,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    34,    -1,    -1,
      37,    -1,    -1,    -1,    41,    -1,    -1,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    -1,    71,    72,    73,    74,    75,    76,
      -1,    -1,    79,    -1,    -1,    82,    -1,    84,    -1,    -1,
      -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    99,   100,    -1,    -1,   103,    -1,    -1,    -1,
      -1,   108,    -1,   110,    -1,    -1,    -1,    -1,    -1,   116,
      -1,   118,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,    -1,
     147,   148,   149,   150,   151,    -1,    -1,   154,    -1,   156,
     157,   158,   159,   160,    -1,    -1,   163,    -1,   165,   166,
      -1,    -1,   169,    -1,    -1,   172,   173,   174,    -1,    -1,
     177,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,
      -1,   188,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,    -1,   199,   200,    -1,    -1,   203,    -1,    -1,    -1,
      -1,    -1,   209,   210,    -1,   212,    -1,    -1,   215,    -1,
      -1,    -1,   219,   220,   221,   222,    -1,    -1,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,    -1,   235,   236,
      -1,    -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,    -1,
     257,    -1,    -1,   260,   261,    -1,    -1,    -1,    -1,    -1,
      -1,   268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,
     277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     287,   288,   289,   290,   291,   292,    -1,   294,   295,   296,
     297,   298,   299,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,   311,    -1,    -1,    -1,   315,   316,
     317,   318,   319,    -1,    -1,   322,   323,    -1,    -1,   326,
      -1,   328,    -1,   330,    -1,    -1,   333,   334,   335,   336,
     337,   338,   339,    -1,    -1,   342,   343,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
      -1,   358,   359,   360,    -1,   362,   363,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
     377,   378,   379,   380,   381,    -1,   383,   384,   385,    -1,
     387,    -1,   389,    -1,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,    -1,   401,   402,   403,    -1,    -1,    -1,
     407,    -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,
      -1,   418,   419,   420,    -1,   422,   423,    -1,   425,   426,
     427,    -1,    -1,   430,    -1,   432,   433,   434,    -1,   436,
     437,    -1,    -1,    -1,   441,   442,    -1,   444,   445,    -1,
     447,   448,   449,   450,   451,    -1,   453,   454,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,
     467,   468,   469,   470,    -1,   472,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,
     487,    -1,    -1,   490,   491,   492,    -1,    -1,   495,   496,
      -1,   498,   499,   500,   501,   502,    -1,    -1,    -1,   506,
     507,    -1,   509,   510,    -1,   512,   513,    -1,    -1,   516,
     517,   518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,
     527,    -1,   529,    -1,    -1,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,
      -1,    -1,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,
     557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,
      -1,   568,    -1,    -1,   571,   572,   573,   574,    -1,    -1,
      -1,    -1,   579,    -1,   581,   582,    -1,    -1,     6,   586,
       8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,
      18,    -1,    -1,    21,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    34,    -1,    -1,    37,
      -1,    -1,    -1,    41,    -1,    -1,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    -1,    71,    72,    73,    74,    75,    76,    -1,
      -1,    79,    -1,    -1,    82,    -1,    84,    -1,    -1,    -1,
      -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,
      98,    99,   100,    -1,    -1,   103,    -1,    -1,    -1,    -1,
     108,    -1,   110,    -1,    -1,    -1,    -1,    -1,   116,    -1,
     118,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126,   127,
     128,   129,   130,    -1,    -1,    -1,   134,    -1,    -1,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,    -1,   147,
     148,   149,   150,   151,    -1,    -1,   154,    -1,   156,   157,
     158,   159,   160,    -1,    -1,   163,    -1,   165,   166,    -1,
      -1,   169,    -1,    -1,   172,   173,   174,    -1,    -1,   177,
      -1,    -1,    -1,    -1,   182,   183,    -1,    -1,   186,    -1,
     188,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
      -1,   199,   200,    -1,    -1,   203,    -1,    -1,    -1,    -1,
      -1,   209,   210,    -1,   212,    -1,    -1,   215,    -1,    -1,
      -1,   219,   220,   221,   222,    -1,    -1,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,    -1,   235,   236,    -1,
      -1,    -1,   240,    -1,    -1,   243,   244,    -1,    -1,    -1,
      -1,    -1,    -1,   251,    -1,   253,    -1,    -1,    -1,   257,
      -1,    -1,   260,   261,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
     288,   289,   290,   291,   292,    -1,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,   311,    -1,    -1,    -1,   315,   316,   317,
     318,   319,    -1,    -1,   322,   323,    -1,    -1,   326,    -1,
     328,    -1,   330,    -1,    -1,   333,   334,   335,   336,   337,
     338,   339,    -1,    -1,   342,   343,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,    -1,
     358,   359,   360,    -1,   362,   363,   364,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,   377,
     378,   379,   380,   381,    -1,   383,   384,   385,    -1,   387,
      -1,   389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,
     398,   399,    -1,   401,   402,   403,    -1,    -1,    -1,   407,
      -1,    -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,
     418,   419,   420,    -1,   422,   423,    -1,   425,   426,   427,
      -1,    -1,   430,    -1,   432,   433,   434,    -1,   436,   437,
      -1,    -1,    -1,   441,   442,    -1,   444,   445,    -1,   447,
     448,   449,   450,   451,    -1,   453,   454,    -1,    -1,    -1,
     458,   459,   460,    -1,    -1,   463,    -1,    -1,    -1,   467,
     468,   469,   470,    -1,   472,   473,   474,    -1,    -1,    -1,
      -1,    -1,    -1,   481,   482,    -1,   484,    -1,    -1,   487,
      -1,    -1,   490,   491,   492,    -1,    -1,   495,   496,    -1,
     498,   499,   500,   501,   502,    -1,    -1,    -1,   506,   507,
      -1,   509,   510,    -1,   512,   513,    -1,    -1,   516,   517,
     518,   519,   520,    -1,    -1,    -1,   524,    -1,    -1,   527,
      -1,   529,    -1,    -1,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,   543,   544,    -1,    -1,    -1,
      -1,   549,    -1,    -1,   552,    -1,    -1,    -1,   556,   557,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,
     568,    -1,    -1,   571,   572,   573,   574,    -1,    -1,    -1,
      -1,   579,    -1,   581,   582,    -1,    -1,     6,   586,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    18,
      -1,    -1,    -1,    -1,    23,    -1,    -1,    26,    27,    28,
      29,    -1,    -1,    -1,    -1,    34,    -1,    -1,    37,    -1,
      -1,    -1,    41,    -1,    -1,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    -1,    55,    -1,    57,    -1,
      -1,    -1,    -1,    62,    63,    -1,    65,    66,    -1,    68,
      69,    -1,    -1,    72,    -1,    74,    75,    76,    -1,    -1,
      79,    -1,    -1,    82,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    98,
      99,   100,    -1,    -1,   103,    -1,    -1,    -1,    -1,   108,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,   118,
      -1,    -1,    -1,    -1,    -1,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,    -1,    -1,    -1,    -1,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,    -1,    -1,   148,
     149,   150,   151,    -1,    -1,   154,    -1,   156,   157,   158,
     159,    -1,    -1,    -1,   163,    -1,   165,   166,    -1,    -1,
     169,    -1,    -1,   172,   173,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   182,   183,    -1,    -1,   186,    -1,   188,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,    -1,
     199,   200,    -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,
      -1,   210,    -1,    -1,    -1,    -1,   215,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,    -1,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,
      -1,   240,    -1,    -1,   243,   244,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   253,    -1,    -1,    -1,   257,    -1,
      -1,   260,   261,    -1,    -1,    -1,    -1,    -1,    -1,   268,
     269,    -1,   271,    -1,    -1,   274,    -1,   276,   277,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   288,
     289,   290,   291,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,   311,    -1,    -1,    -1,   315,   316,   317,   318,
     319,    -1,    -1,   322,   323,    -1,    -1,   326,    -1,   328,
      -1,   330,    -1,    -1,   333,   334,   335,   336,   337,   338,
     339,    -1,    -1,   342,   343,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,    -1,   358,
     359,   360,    -1,   362,   363,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   375,    -1,   377,    -1,
     379,   380,   381,    -1,   383,   384,   385,    -1,   387,    -1,
     389,    -1,    -1,    -1,   393,   394,    -1,   396,    -1,   398,
     399,    -1,   401,   402,   403,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   411,   412,   413,   414,   415,    -1,    -1,   418,
     419,   420,    -1,   422,    -1,    -1,   425,    -1,   427,    -1,
      -1,   430,    -1,    -1,   433,    -1,    -1,   436,   437,    -1,
      -1,    -1,    -1,   442,    -1,   444,   445,    -1,   447,   448,
     449,    -1,   451,    -1,   453,    -1,    -1,    -1,    -1,   458,
     459,   460,    -1,    -1,   463,    -1,    -1,    -1,   467,    -1,
     469,    -1,    -1,   472,    -1,   474,    -1,    -1,    -1,    -1,
      -1,    -1,   481,   482,    -1,   484,    -1,    -1,   487,    -1,
      -1,    -1,   491,   492,    -1,    -1,    -1,   496,    -1,   498,
     499,   500,   501,   502,    -1,    -1,    -1,   506,   507,    -1,
     509,   510,    -1,   512,   513,    -1,    -1,   516,   517,   518,
     519,   520,    -1,    -1,    -1,   524,    -1,    -1,   527,    -1,
     529,    -1,    -1,    -1,   533,   534,   535,    -1,   537,   538,
     539,   540,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     549,    -1,    -1,   552,    -1,    -1,    -1,   556,   557,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,   568,
      -1,    -1,   571,   572,   573,   574,    -1,    -1,    -1,    -1,
     579,    -1,   581,    -1,    -1,    -1,    -1,   586
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const unsigned short int yystos[] =
{
       0,     3,    14,    15,    30,    32,    37,    50,    51,    56,
      60,    61,    73,    89,   110,   119,   120,   121,   134,   135,
     160,   177,   202,   209,   212,   234,   236,   249,   270,   275,
     365,   378,   392,   400,   421,   424,   426,   429,   432,   434,
     439,   441,   450,   455,   461,   466,   470,   490,   495,   532,
     544,   550,   553,   558,   582,   603,   614,   615,   616,   617,
     618,   619,   621,   626,   628,   633,   663,   792,   926,   964,
     967,   975,   977,   979,   982,   987,   989,   990,   995,   998,
    1005,  1009,  1017,  1018,  1166,  1168,  1174,  1177,  1202,  1210,
    1221,  1223,  1238,  1241,  1244,  1250,  1254,  1258,  1261,  1262,
    1307,  1324,  1330,  1332,  1339,  1341,  1366,  1372,  1373,  1374,
    1375,  1414,  1422,  1423,    12,    96,   157,   188,   224,   276,
     397,   510,   960,  1397,  1398,   271,   354,   997,   509,   511,
    1326,  1367,   515,  1298,   227,     6,     8,     9,    10,    11,
      12,    18,    21,    23,    25,    26,    27,    28,    29,    30,
      32,    34,    37,    41,    44,    45,    47,    49,    50,    53,
      55,    57,    58,    60,    62,    63,    64,    65,    66,    68,
      69,    71,    72,    73,    74,    75,    76,    79,    82,    84,
      91,    98,    99,   100,   103,   108,   110,   116,   118,   124,
     126,   127,   128,   129,   130,   134,   137,   138,   139,   143,
     147,   148,   149,   150,   151,   154,   156,   157,   158,   159,
     160,   163,   165,   166,   169,   172,   173,   174,   177,   182,
     183,   186,   188,   195,   196,   199,   200,   203,   209,   210,
     212,   215,   219,   220,   221,   222,   225,   226,   229,   231,
     235,   236,   240,   243,   244,   251,   253,   257,   260,   261,
     268,   269,   271,   274,   276,   277,   287,   288,   289,   290,
     291,   292,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   304,   305,   306,   307,   309,   310,   311,   315,   316,
     317,   318,   319,   322,   323,   326,   328,   330,   333,   334,
     335,   336,   337,   338,   339,   342,   343,   345,   346,   347,
     348,   352,   353,   358,   359,   360,   362,   363,   364,   375,
     376,   377,   378,   379,   380,   381,   383,   384,   385,   387,
     389,   392,   393,   394,   396,   398,   399,   401,   402,   403,
     407,   411,   412,   413,   414,   415,   418,   419,   420,   422,
     423,   425,   426,   427,   430,   432,   433,   434,   436,   437,
     441,   442,   444,   445,   447,   448,   449,   450,   451,   453,
     454,   458,   459,   460,   463,   467,   468,   469,   470,   472,
     473,   474,   481,   482,   484,   487,   490,   491,   492,   495,
     496,   498,   499,   500,   501,   502,   506,   507,   509,   510,
     512,   513,   516,   517,   518,   519,   520,   524,   527,   529,
     532,   533,   534,   535,   537,   538,   539,   540,   543,   544,
     549,   552,   556,   557,   565,   568,   571,   572,   573,   574,
     579,   581,   582,   586,   651,  1297,  1301,  1305,  1306,   301,
    1326,  1326,   579,  1368,    96,   157,   187,   276,   475,   510,
     512,   546,   556,   638,   844,   845,   846,   918,  1211,  1167,
      96,   157,   188,   227,   276,   397,   510,   512,   528,   556,
     571,  1173,  1301,   997,   650,   610,  1295,  1296,  1301,   627,
    1175,   384,  1259,    99,   227,   511,  1326,   997,   793,  1301,
    1255,   450,    96,   556,  1326,   997,  1178,  1251,  1326,   650,
    1368,  1301,   109,  1020,  1022,  1023,   366,  1309,   130,  1224,
     490,   495,   470,   527,   470,   511,  1222,   384,  1331,  1203,
    1301,    32,    73,   147,   392,   412,   441,   490,  1416,   455,
     603,  1019,     0,     3,   392,   165,   380,   455,  1242,  1295,
    1301,   152,   936,  1301,   651,   651,   205,   651,   734,   735,
     738,   765,  1301,   511,   116,  1394,  1326,   978,  1368,  1006,
    1007,  1295,   664,   610,   525,   980,   991,    17,  1369,   223,
     847,   847,   205,   736,   765,   650,   371,  1392,  1394,  1395,
    1396,  1397,   511,   845,   227,   224,   284,   403,  1219,  1220,
    1086,  1087,   223,  1172,  1172,  1172,  1301,   205,  1172,   765,
     651,   650,  1172,  1326,   622,  1245,    13,    14,    89,   119,
     135,   157,   160,   172,   202,   227,   234,   275,   398,   416,
     422,   430,   455,   466,   467,   506,   528,   553,   555,  1342,
    1344,  1346,  1347,  1301,   364,    64,   408,   610,   262,  1298,
    1301,  1303,   117,   214,   284,  1180,  1301,    81,   402,  1260,
    1263,   238,  1295,  1325,  1326,    48,   794,   184,    36,   301,
    1230,  1256,  1301,  1000,   650,   999,  1326,   117,   284,  1181,
    1209,   301,   402,   470,  1252,  1253,   976,    13,  1340,  1344,
     525,  1369,    88,   131,  1026,  1021,    13,   131,   214,   480,
     481,   482,   483,   484,   485,   497,  1031,  1032,  1033,  1308,
      25,    34,    37,    58,    59,    68,    70,    88,    89,    97,
     130,   150,   154,   186,   188,   200,   203,   226,   227,   231,
     247,   271,   277,   301,   336,   345,   364,   384,   385,   396,
     397,   460,   470,   496,   511,   573,   892,   917,  1225,  1230,
    1231,  1233,  1315,   969,   970,   969,   969,   578,   968,   969,
    1171,  1295,  1301,  1326,  1209,    38,   213,   515,  1283,  1299,
    1415,  1415,  1415,  1415,  1415,  1022,  1019,   604,  1301,   109,
    1240,  1239,   317,   513,   538,   928,   932,   930,   740,   766,
    1301,   929,     7,    56,   135,   350,   407,   409,   767,  1295,
     152,   486,  1399,   988,  1170,  1171,   241,   605,  1013,  1014,
     603,  1301,   629,  1170,  1170,    55,   352,   352,   421,  1370,
     349,   350,  1060,  1301,   651,   739,   766,     7,    93,  1303,
    1304,  1357,  1358,   429,    11,   397,   528,   858,  1393,  1399,
    1400,  1406,  1408,  1394,  1397,   847,  1301,   184,  1212,  1216,
    1217,  1301,  1219,     8,    21,    24,    29,    33,    36,    38,
      39,    40,    42,    54,    58,    59,    65,    68,    77,    78,
      84,    86,    87,    88,    92,    93,    95,    96,   101,   102,
     103,   108,   111,   114,   115,   122,   123,   142,   145,   146,
     161,   164,   167,   168,   171,   175,   180,   185,   189,   190,
     191,   192,   194,   195,   197,   198,   199,   204,   206,   207,
     213,   219,   223,   234,   237,   252,   256,   259,   266,   268,
     272,   278,   281,   286,   293,   303,   308,   318,   322,   324,
     325,   329,   330,   331,   332,   333,   334,   335,   341,   349,
     350,   351,   355,   356,   360,   381,   382,   386,   387,   388,
     389,   390,   401,   404,   428,   429,   440,   443,   446,   448,
     453,   493,   494,   499,   503,   504,   505,   508,   517,   518,
     519,   520,   530,   531,   532,   536,   541,   547,   548,   556,
     560,   561,   562,   563,   564,   569,   574,   584,   586,   591,
     595,   596,   601,   603,   606,   607,   609,   610,  1042,  1045,
    1048,  1049,  1050,  1051,  1052,  1053,  1054,  1055,  1056,  1057,
    1061,  1064,  1065,  1067,  1076,  1088,  1282,  1284,  1286,  1287,
    1291,  1293,  1297,  1299,  1301,  1384,  1390,   161,  1301,   651,
     651,   361,   766,   651,   776,  1231,  1304,  1356,  1170,  1172,
     559,   623,   124,   215,   277,   301,   396,   402,   433,   470,
     492,   509,  1246,  1247,  1326,   396,  1345,   444,   444,   512,
     556,   571,   366,  1349,   509,  1351,    63,   470,  1348,    97,
     571,  1350,   361,   605,    19,   152,  1131,  1132,  1333,  1301,
     960,   473,  1042,    79,   184,   284,  1264,  1269,    50,   184,
    1295,  1327,  1328,   996,   265,   269,   405,   797,   801,   609,
     620,  1298,   277,  1004,  1301,  1001,  1304,  1002,  1003,  1295,
     983,   238,  1171,  1182,  1183,    50,   605,  1170,  1345,   361,
     450,  1371,  1370,   603,   597,  1028,  1036,  1037,   545,  1376,
    1377,   597,  1035,  1036,  1033,  1310,  1311,  1312,   277,   158,
     461,   263,   576,  1237,   533,   603,    96,   157,   188,   397,
     511,   571,  1237,    13,   854,  1303,   264,  1147,  1149,    66,
     492,   181,   492,   492,   492,   301,   509,    66,   492,   215,
     492,   492,   533,  1147,  1237,   184,   241,  1234,   277,   149,
      69,   158,   399,   509,   529,   492,   568,   966,   420,   487,
     971,   972,   965,    82,   960,   605,   363,  1418,   507,  1419,
     246,   436,  1417,   604,  1377,  1379,  1380,  1381,  1026,  1017,
    1243,  1283,  1301,   115,   841,   842,   843,   852,   853,   900,
     361,   645,   933,   658,     7,   741,   658,    98,   762,   762,
     762,     5,   927,    93,  1303,   454,   571,  1170,   525,   605,
     115,  1008,  1301,  1007,   227,   248,   915,   916,  1015,   665,
     666,  1042,   287,   288,   289,   290,   291,   292,   295,   296,
     297,   298,   299,   300,   302,   418,   419,   630,   631,   632,
     165,   403,   981,    57,   165,   169,   181,   315,   403,   992,
     993,   994,    55,   421,   161,   636,   637,   741,   762,   603,
    1041,   609,   221,   605,  1037,  1037,  1037,   571,  1400,  1295,
     534,   559,   919,  1216,  1295,  1301,   605,  1214,   610,  1218,
     603,   603,   603,   603,   603,  1065,   603,   603,   603,   603,
     603,   603,   603,   603,   603,   603,   603,   603,   603,   603,
    1041,  1041,   603,  1041,   603,   603,   603,   541,   603,  1282,
     603,   603,   603,   603,   603,   603,   603,   603,   603,  1386,
    1390,   603,   603,   603,   603,   603,   603,   603,   603,   603,
     603,   603,   603,   603,   603,   603,   603,   603,   603,   603,
     603,  1042,   603,   603,   603,   603,   603,   603,   603,   603,
     603,   603,  1089,  1090,  1091,   603,   603,   603,   603,   603,
     603,   603,   603,   603,   603,   603,   603,  1048,   603,  1041,
     603,   603,   603,   603,   603,   603,   603,   603,   603,   603,
     603,   603,   603,   603,   603,   603,   603,   603,   603,   603,
     603,   603,   603,  1041,   603,  1282,   603,   603,   603,  1282,
     603,   603,    38,   213,   515,   603,   603,   603,  1041,  1041,
    1041,   603,   603,   603,   603,   603,   603,  1042,  1093,  1065,
    1065,  1065,   455,  1042,  1301,   609,  1303,  1301,   583,  1043,
    1046,   152,   153,   193,   208,   242,   254,   285,   344,  1062,
     241,   263,   417,   474,   592,   593,  1060,   594,   464,   465,
     595,   596,   132,   329,   597,   598,   599,   600,  1065,   104,
     105,   106,   107,   108,   183,   216,   217,   218,   219,   318,
     320,   321,   322,   330,   401,   452,   453,   574,   585,   586,
    1128,  1129,    67,   370,   605,  1299,   603,   610,  1020,  1385,
    1295,   776,   353,   572,   777,   778,   150,   605,    52,   435,
     961,  1170,   609,   624,   625,    50,   578,   605,  1248,   509,
     603,  1359,  1359,  1359,  1359,   188,   397,   511,  1343,  1347,
    1301,   173,   346,  1301,  1334,  1335,  1182,  1298,   301,   271,
    1268,  1010,   301,  1132,   605,  1170,   800,   799,   380,   807,
     210,   248,  1303,    31,   525,  1257,   525,   605,   525,   605,
     525,  1170,  1183,  1179,  1253,   184,   605,   188,   397,  1343,
    1301,   597,   184,   605,  1027,  1039,  1042,  1289,  1301,    13,
     131,  1383,   605,  1024,   605,   200,   271,   362,   460,  1313,
    1314,  1317,  1318,   241,  1235,  1298,  1042,   597,   847,   651,
     651,   651,  1295,  1295,  1227,  1226,   281,   356,   536,  1150,
    1151,  1284,   651,  1237,  1304,   181,  1232,  1234,   651,  1237,
    1232,  1295,  1234,  1232,  1232,  1232,  1237,  1237,   552,   973,
     605,   973,   472,   455,   603,   607,  1098,  1100,  1101,  1102,
    1111,  1112,  1120,  1283,   383,  1420,   369,  1143,  1149,  1382,
    1028,   843,    67,   892,    75,   451,   424,   934,    71,    84,
     251,   327,   352,   406,   486,   660,   662,   414,   540,   763,
     764,   758,   759,  1298,   750,   751,   742,   743,   750,     7,
      14,    15,    26,    28,    56,    60,    61,    65,    71,    81,
      86,    99,   118,   127,   128,   135,   143,   150,   178,   225,
     227,   235,   306,   323,   328,   365,   375,   378,   381,   411,
     423,   424,   425,   426,   447,   496,   510,   534,   545,   790,
     849,   851,   852,   853,   937,   942,   944,   947,   953,   954,
     955,  1143,  1041,   609,   116,   240,  1295,   992,  1298,  1171,
     603,   604,   605,   152,   152,   152,   152,   152,   152,   152,
     152,   152,   152,   152,   152,   152,   152,   152,   605,   554,
     993,   841,   361,   754,   755,   558,   737,   604,  1303,    48,
    1358,   651,   651,   188,  1295,   634,    47,   210,   449,   920,
     920,   361,  1215,  1213,   610,  1217,   184,   597,  1301,  1132,
    1042,  1042,  1042,    13,   131,  1083,  1133,   111,   175,   213,
     281,   356,   536,  1153,  1083,  1083,  1083,  1042,  1042,  1086,
    1086,  1042,  1086,  1042,  1042,  1042,  1042,   131,  1083,  1133,
    1042,   604,  1042,  1042,  1042,  1042,  1042,  1291,  1301,  1042,
    1042,  1042,  1042,  1042,  1020,  1387,  1042,  1128,  1042,  1042,
    1042,   604,  1042,  1042,  1042,  1042,  1086,  1042,  1042,   100,
     103,   517,   520,  1130,  1042,   131,  1080,  1282,  1042,  1042,
    1042,   604,  1042,  1042,  1042,  1042,  1086,  1042,  1042,  1042,
    1042,  1090,    10,  1092,  1291,   131,  1083,  1042,  1042,   131,
    1083,  1042,  1042,  1042,  1042,  1042,  1086,  1086,  1086,  1042,
    1042,  1042,  1042,  1042,  1042,  1086,  1052,  1042,   604,  1042,
    1042,  1042,  1042,  1042,   604,  1042,  1042,  1083,  1083,  1042,
    1042,  1042,   131,  1083,  1042,  1042,  1129,  1129,  1042,    46,
     255,   526,  1042,  1042,  1282,   604,  1042,   604,  1083,  1292,
    1293,  1301,  1083,  1042,  1042,  1042,   575,   604,   605,  1042,
     200,   271,   460,  1316,   462,   610,  1045,  1044,  1047,  1051,
     168,   355,   531,   549,  1060,    13,    18,  1051,  1063,   603,
    1388,  1390,  1065,  1052,   263,  1052,  1053,   241,   263,   417,
     592,  1054,  1055,  1055,  1056,  1064,  1056,  1064,  1057,  1057,
    1057,  1057,  1057,  1065,   596,  1303,  1065,  1042,  1066,  1301,
     604,  1391,  1169,   777,   152,   462,  1193,  1194,  1304,   961,
    1303,   605,   408,  1247,  1170,  1249,  1301,  1360,  1361,   597,
    1295,  1301,  1355,  1355,  1355,   152,   173,   193,   208,   253,
     254,   285,   346,   394,  1336,  1338,   576,  1134,  1176,   228,
    1011,  1012,  1295,   284,   408,   580,  1329,  1328,   992,   603,
     805,   805,  1153,   795,   798,   603,  1042,  1298,  1301,  1304,
    1304,  1003,  1295,   165,   403,   557,   984,   985,   986,   455,
     461,   564,   565,   603,   837,  1184,  1187,  1298,   202,  1355,
    1355,  1355,   604,  1100,  1036,  1038,   610,  1378,  1036,   184,
     238,  1025,  1030,  1142,  1143,  1164,  1311,   115,   527,  1301,
    1320,   337,   381,   609,   892,  1319,  1298,   184,  1236,   604,
    1301,   277,   336,   492,  1229,  1229,   359,   605,   470,  1237,
    1301,  1237,  1232,  1295,  1237,  1237,  1237,   632,   974,   972,
    1119,  1301,    90,   230,   246,   259,   340,   440,   497,  1110,
     461,   605,  1099,  1295,  1119,   605,   181,  1421,    48,  1147,
    1027,  1194,  1194,   350,   393,    23,   159,   639,   525,   127,
     143,   641,  1298,   486,   486,   486,   486,   486,   454,  1298,
    1298,   229,   760,   761,   768,   776,   778,    27,   307,   752,
     753,   768,   769,   770,   776,   778,   744,   745,   768,   769,
     770,    70,    83,   187,   378,   475,   863,   867,   868,   913,
     915,   959,   959,   378,  1194,  1194,   959,  1194,   378,   378,
    1194,  1194,   525,   126,  1194,   247,   510,   179,   378,   395,
     915,   959,   247,  1194,   510,   126,  1194,  1194,  1194,   959,
     378,  1194,   791,  1194,   378,   379,    19,   152,   525,   963,
     378,   378,  1194,   129,   316,  1301,  1194,  1194,   849,   605,
     789,   790,   942,   603,   610,   862,   869,  1294,  1301,  1303,
     931,   395,  1126,  1301,  1042,  1153,  1298,  1298,   111,   175,
     281,   356,   536,  1154,  1298,  1153,  1298,  1298,  1298,  1298,
    1298,  1153,  1298,  1298,  1153,   631,   451,    71,   347,   413,
     539,   756,   757,   768,   772,   773,   774,   775,   776,   778,
     276,   746,   747,   381,   515,  1410,     9,    31,   732,   651,
    1401,   263,   603,   780,   848,   850,   851,  1295,   559,  1134,
    1301,  1100,   610,  1218,   605,   604,   604,   605,  1083,   604,
    1084,   605,   604,   604,   604,    19,   604,   559,   604,   604,
     604,   604,   605,   605,   559,   605,   605,  1077,   604,   597,
     604,   605,   605,   604,   604,   605,   604,   610,   604,   605,
     604,   605,   605,   605,   604,   605,  1391,   605,   184,   605,
     605,   604,   605,   604,   605,   605,   604,   605,   604,   604,
     605,   604,   605,   605,   605,  1079,   605,   604,   605,   605,
     604,   605,   605,   604,   605,   604,   605,   604,   605,   605,
     605,   604,   603,   605,  1083,   604,   604,   604,  1083,   604,
     604,   605,   605,   604,   604,   605,   604,   605,   604,   604,
     604,   604,   604,   604,   604,   605,   605,   604,   605,   604,
     241,   604,   604,   605,   605,   605,   604,   605,   605,   604,
     604,   604,   605,   184,   605,   605,  1083,   604,   604,   604,
     605,   605,   605,   604,   184,  1042,   184,  1042,   184,  1042,
     184,   604,   605,   605,   604,   604,   604,   604,   604,   605,
     604,   605,   604,  1095,  1096,  1086,   608,   610,   610,   610,
    1303,  1042,  1301,   368,   371,  1058,    16,    17,  1059,   168,
     355,   531,   549,  1388,  1086,  1020,  1389,   156,  1138,  1052,
      17,   603,  1388,  1065,  1052,  1052,  1128,  1128,  1042,  1071,
    1072,  1073,   603,   610,   854,   625,   275,   604,   605,   610,
     610,   525,   525,   525,  1337,  1135,  1148,  1149,  1184,   515,
    1300,   605,  1013,   580,   271,  1037,   501,   808,   805,   802,
     803,   804,  1301,   525,   985,   838,  1185,   603,  1190,  1195,
    1190,   604,   837,  1186,  1288,  1289,  1292,  1301,  1188,   366,
     184,   184,   184,   576,  1029,    19,  1040,  1298,  1301,   597,
    1301,   455,  1018,   136,  1100,   137,   373,  1160,  1161,   181,
     275,  1034,  1164,  1148,  1030,   610,   243,   610,  1193,    36,
     115,   893,   894,  1193,  1303,   181,  1193,   609,  1303,    36,
     115,   895,   896,  1303,  1154,  1228,   154,   573,  1151,  1151,
     578,  1134,  1232,   605,  1114,  1119,  1098,   246,   246,   372,
    1121,   246,   259,   440,  1121,  1111,  1098,  1205,  1206,  1292,
    1098,  1132,  1116,  1117,  1153,   319,  1144,   115,   897,   899,
    1303,   894,   393,  1042,  1042,   361,   645,   651,    71,   646,
      99,    99,   116,   240,  1194,   605,   761,  1194,  1194,   605,
     753,   605,   745,   923,  1294,   916,   997,   916,    61,   179,
     395,   546,   866,   914,   865,   866,   923,  1294,   997,  1154,
    1153,  1294,  1153,    13,   943,   951,   952,  1301,   997,  1298,
    1298,   892,  1194,  1153,   248,   951,   248,  1294,  1294,   854,
    1194,   173,   253,   352,   856,  1154,  1154,  1294,   997,   115,
    1153,   794,  1298,   997,  1295,   997,   997,    74,    76,   115,
     139,   174,   415,   855,   854,   603,     7,   135,   955,   860,
     861,   862,   863,  1301,     9,   173,   962,   416,   865,   905,
     870,   610,   603,  1402,   604,   605,   639,  1194,  1194,  1194,
    1194,   605,   757,   205,   166,   748,   749,   768,   769,   770,
     771,   774,   775,   776,   778,   515,   603,   119,   234,   553,
     733,  1409,  1402,  1295,   263,   378,   782,   789,   860,   789,
     605,   850,   635,  1100,  1142,  1134,  1132,   237,  1042,  1042,
     604,  1042,  1042,    36,    59,   100,   103,   112,   342,   468,
     520,   551,  1085,   893,  1086,  1042,   893,  1085,  1042,  1086,
     604,  1064,  1064,  1299,  1301,  1042,  1042,  1086,  1299,  1042,
    1042,  1042,  1086,   356,  1042,  1042,  1042,  1042,  1042,  1042,
    1042,  1086,  1086,   356,  1042,  1042,  1086,  1042,  1042,  1042,
    1042,  1086,  1042,  1052,  1291,   604,   604,  1042,  1042,  1042,
    1042,  1042,  1042,  1042,  1042,  1042,  1042,  1042,  1042,  1086,
     237,  1042,  1042,  1042,  1042,   604,  1042,  1042,  1042,  1042,
     184,  1042,   184,  1042,   184,  1042,  1042,   356,  1042,  1042,
     589,  1094,  1042,  1097,   604,   610,   924,  1045,  1048,   604,
    1391,  1065,  1051,  1086,  1138,    17,   604,  1037,  1074,  1075,
    1071,  1301,  1361,   597,   597,  1357,  1357,  1357,   603,  1042,
     361,  1200,  1265,  1012,   224,  1016,   813,  1052,    48,   796,
     604,   605,  1304,  1031,  1191,  1192,  1292,  1196,   605,   603,
    1187,   604,   604,   605,   610,  1376,   184,  1357,  1357,  1357,
    1042,  1298,  1301,   610,  1134,  1134,  1300,  1300,   609,  1162,
    1163,  1303,   553,   241,  1301,   261,  1301,    13,    36,   115,
     361,  1042,  1323,    67,   898,  1042,  1304,   360,   381,   515,
    1322,  1316,  1193,  1147,   289,  1237,   632,  1379,  1115,   259,
     246,  1111,  1121,  1121,   246,   361,   361,   559,   605,  1204,
    1193,   178,   224,   558,  1122,  1031,  1042,  1145,  1290,  1128,
    1298,   134,   935,   220,   779,  1153,   761,   779,   779,   753,
     745,   945,  1042,   248,   248,   916,   923,   919,   135,   461,
     943,   956,   940,   605,  1153,   894,  1298,   923,   961,  1298,
     957,   943,   943,   948,   943,  1170,   604,   605,  1301,  1295,
      35,    36,    41,    43,    44,    45,    59,   100,   103,   112,
     133,   151,   174,   176,   195,   196,   239,   268,   279,   280,
     282,   312,   313,   314,   333,   334,   335,   339,   342,   357,
     358,   387,   389,   410,   459,   461,   471,   516,   517,   520,
     521,   522,   523,   566,   567,   586,   871,   874,   875,   876,
     877,   878,   879,   880,  1301,  1301,  1403,    19,  1301,   644,
     645,  1298,  1153,   779,   779,   757,  1301,  1194,   605,   749,
    1411,   361,   437,   603,   652,    19,  1295,   784,   604,   781,
     850,   603,  1134,   264,  1152,  1042,   604,   604,   604,   603,
     886,   886,   603,   881,   882,   886,   239,   239,   604,   604,
     604,   604,   604,   604,   605,  1078,  1128,  1128,   604,   604,
     604,   604,   604,   604,   605,   604,   604,   604,   604,   604,
     605,   604,   604,   604,   604,   604,  1082,  1143,   605,   605,
     605,   604,   604,   604,   604,   605,   604,   604,   604,   605,
     241,  1068,  1069,   604,   604,   604,   604,   604,   604,   604,
     604,   604,   605,   604,   604,   604,  1042,   604,   181,   604,
     604,   605,   605,   604,   605,   605,   604,  1042,   604,  1042,
     604,  1042,   604,   604,   605,   604,   604,  1042,   147,   590,
     575,  1301,   604,  1051,  1042,   605,   604,   431,  1362,  1362,
    1362,   115,  1042,  1198,  1199,   138,   224,   429,  1270,   257,
    1038,   801,   603,   815,   804,  1035,   605,  1193,  1197,  1198,
    1195,  1189,  1187,  1288,  1301,  1357,   597,  1148,   205,  1139,
    1165,  1303,   605,   463,   408,   427,   458,  1321,   899,  1193,
     603,   603,  1320,  1042,   152,   604,  1101,   372,  1098,  1111,
     246,   246,  1098,  1111,  1104,  1103,  1105,  1206,  1134,  1199,
     915,  1123,  1123,  1123,  1035,   605,    20,   120,  1146,   640,
     647,   648,   380,   603,   946,   923,   919,   603,   115,   115,
     939,   869,   992,   952,   898,   871,   938,   949,   951,   941,
     604,   861,   906,   603,   603,   886,   881,   391,   872,   881,
     881,    21,    36,    49,   543,   892,   901,    59,   566,   875,
     877,   901,   901,    59,   567,   567,   570,   881,   873,   886,
     886,   901,   603,   886,    26,    67,    71,   115,   355,   361,
     395,   459,   546,   888,   889,   890,   904,  1060,   570,   603,
     901,    36,   603,   902,   603,   603,   886,   603,   882,   887,
     610,   604,   605,   455,   603,  1404,   641,   779,   749,   232,
     241,   374,   671,   672,   673,   674,  1037,   112,   239,   410,
     498,   859,   653,  1404,   604,   837,   848,   786,  1270,   921,
     922,  1301,  1151,  1128,   356,   901,   356,  1042,   604,   604,
     604,  1042,  1042,   457,  1081,   356,  1042,  1042,  1042,  1042,
      44,   340,   604,   578,  1070,  1042,  1128,  1042,  1042,  1042,
    1042,  1042,   604,   604,   604,   356,  1042,  1042,  1038,  1075,
      62,   244,   348,   488,   500,   581,  1353,  1354,   578,  1363,
    1363,  1363,   604,   605,  1201,   238,   604,   210,   248,   378,
     816,   817,   839,  1192,  1199,   604,  1379,    48,   211,  1136,
      69,  1271,  1163,   326,    72,   537,   408,  1322,   515,   515,
    1193,  1298,  1132,   246,   361,  1107,  1111,  1111,   361,  1109,
    1042,  1042,   603,  1142,  1124,  1118,  1290,   491,   642,    64,
     170,   201,   223,   245,   250,   258,   364,   438,   591,   649,
     691,   693,   694,   695,   697,   699,   702,   703,   704,   705,
     706,   707,   708,   709,   711,   724,  1297,  1302,  1306,  1153,
     816,   603,   603,   921,   103,   517,   520,   595,   596,  1285,
    1286,   992,   962,   888,   997,   950,   984,   303,   361,   603,
     907,   909,   910,   911,   356,   356,   468,   551,   587,   883,
     884,   885,   603,   883,   883,   902,    21,   543,   892,   903,
     902,   893,   901,   570,   883,   603,   901,   356,   883,   897,
    1298,   351,   891,  1285,   553,   115,   248,   890,   248,   355,
     356,   356,   356,   356,   883,   356,   883,  1301,  1301,  1037,
    1037,   578,  1405,   646,   604,   605,   669,  1295,   473,   667,
     668,   670,  1301,  1405,   604,   789,    19,   840,   604,   605,
    1146,   603,   604,   604,   604,   605,   604,   604,   605,   604,
    1283,   604,   605,   604,   605,   604,   604,   326,   251,   402,
     604,   604,   604,   604,   604,   604,   604,   605,   590,  1040,
     515,   515,   515,    17,  1352,   202,   304,   305,   309,   310,
    1364,  1365,  1199,   248,  1266,   603,   806,   603,   818,   604,
     605,   857,  1030,  1148,  1140,  1290,  1137,  1142,   144,   155,
     367,   514,  1272,  1273,   267,  1274,   604,   604,  1323,    17,
    1098,  1106,   559,  1108,   559,  1127,  1301,  1152,   603,   857,
    1146,  1042,   148,   643,  1301,   184,   346,   712,   220,   692,
    1302,   220,  1302,  1301,   696,   575,   700,   616,    32,   283,
     428,   577,   727,   612,   604,   921,   921,   604,  1287,  1287,
     958,   992,   238,   186,   377,   469,   119,   553,   908,  1301,
     911,   604,   604,   885,   925,  1283,   893,   902,   925,   604,
    1041,   351,   565,   604,   604,   604,   604,  1020,  1019,    53,
      61,   271,   134,  1412,   673,  1301,   181,  1298,   604,   605,
     669,   785,   783,   603,   837,   578,   864,   922,   356,   356,
    1042,  1083,  1042,   326,   163,  1086,  1042,  1353,   366,  1153,
    1153,  1153,  1153,  1365,   553,   511,  1037,   809,   811,   812,
    1301,   822,  1303,   817,  1034,   578,   605,  1141,  1146,  1042,
    1148,    48,    48,   144,    48,  1273,   489,   514,  1275,  1276,
     290,   361,  1042,   603,  1042,   603,   604,   605,  1125,  1126,
    1042,   184,  1301,   714,   715,  1042,   698,  1042,   728,   676,
     690,   691,   693,   695,   697,   699,   702,   704,   705,   706,
     707,   708,   709,   711,   724,   676,   729,   725,   604,   604,
     864,   962,   603,    52,   352,   435,   461,   912,   912,   604,
     605,   604,   605,   604,  1041,   901,   902,   901,   902,   604,
      61,   366,    61,   647,   659,   871,  1037,   654,   670,   871,
    1379,   786,   837,   787,   376,  1146,   604,   604,   604,   605,
     604,   604,   604,  1207,  1208,  1292,  1295,   813,   502,   814,
     604,   605,   819,    91,   442,  1290,   397,  1155,  1283,  1283,
      48,  1283,    48,    48,  1276,   152,  1113,  1127,  1127,  1301,
     604,   238,   147,  1042,   719,   720,   575,   677,   147,   690,
     611,   552,  1042,   727,   905,   816,     6,   115,   355,   909,
    1301,   901,  1283,   901,  1379,   366,   366,   125,   660,   661,
    1060,  1413,   140,   437,   604,  1376,  1297,  1042,   605,  1193,
    1267,  1038,  1153,   810,   812,   564,   823,  1146,  1301,  1283,
    1283,  1283,  1154,  1042,   604,   604,   710,   223,   590,   147,
    1042,   701,   113,   675,   678,   283,   611,   731,   134,   726,
    1302,   604,   125,   690,   448,   655,   788,   604,  1208,  1199,
    1271,   604,   814,   241,   260,   820,  1156,    17,   608,   713,
    1301,   716,   591,   590,   719,    85,   162,   683,   688,  1301,
     147,   690,   611,  1042,   730,  1407,   871,  1379,  1274,   603,
     524,    71,    99,   227,   306,   323,   347,   510,   834,   835,
     836,  1231,   603,   294,   605,   676,   721,   147,   209,   605,
     679,    80,    94,   611,   147,   676,   690,   656,   224,  1277,
     826,   827,   828,  1052,   311,   603,   824,   825,  1194,   126,
     126,  1194,  1194,  1194,  1194,   821,   836,   150,  1037,  1157,
    1158,  1159,   152,  1301,   717,   676,   591,   181,  1301,   871,
     181,   181,   428,   147,   659,   356,   603,  1278,   604,   605,
     828,  1298,  1194,  1194,  1154,  1154,  1153,  1303,   603,   829,
    1194,  1042,   604,   605,  1153,   141,   589,   718,   722,   680,
     115,   689,   478,   685,  1153,   681,   682,   577,   657,   267,
     604,   609,  1279,  1280,  1292,   461,  1281,   827,   604,  1298,
    1298,   501,   830,   831,   854,  1159,   714,   676,   575,   589,
     723,   477,   479,   684,   685,   687,  1060,  1301,  1042,   565,
     686,   616,   690,  1303,   604,   605,  1207,   832,   604,   605,
     719,   676,   605,   690,   182,  1299,  1280,   833,  1303,   831,
     687,   834
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK;						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (0)


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (N)								\
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (0)
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
              (Loc).first_line, (Loc).first_column,	\
              (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (0)

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)		\
do {								\
  if (yydebug)							\
    {								\
      YYFPRINTF (stderr, "%s ", Title);				\
      yysymprint (stderr,					\
                  Type, Value);	\
      YYFPRINTF (stderr, "\n");					\
    }								\
} while (0)

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yy_stack_print (short int *bottom, short int *top)
#else
static void
yy_stack_print (bottom, top)
    short int *bottom;
    short int *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (/* Nothing. */; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yy_reduce_print (int yyrule)
#else
static void
yy_reduce_print (yyrule)
    int yyrule;
#endif
{
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu), ",
             yyrule - 1, yylno);
  /* Print the symbols being reduced, and their result.  */
  for (yyi = yyprhs[yyrule]; 0 <= yyrhs[yyi]; yyi++)
    YYFPRINTF (stderr, "%s ", yytname[yyrhs[yyi]]);
  YYFPRINTF (stderr, "-> %s\n", yytname[yyr1[yyrule]]);
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (Rule);		\
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined (__GLIBC__) && defined (_STRING_H)
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
#   if defined (__STDC__) || defined (__cplusplus)
yystrlen (const char *yystr)
#   else
yystrlen (yystr)
     const char *yystr;
#   endif
{
  const char *yys = yystr;

  while (*yys++ != '\0')
    continue;

  return yys - yystr - 1;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined (__GLIBC__) && defined (_STRING_H) && defined (_GNU_SOURCE)
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
#   if defined (__STDC__) || defined (__cplusplus)
yystpcpy (char *yydest, const char *yysrc)
#   else
yystpcpy (yydest, yysrc)
     char *yydest;
     const char *yysrc;
#   endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      size_t yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

#endif /* YYERROR_VERBOSE */



#if YYDEBUG
/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yysymprint (FILE *yyoutput, int yytype, YYSTYPE *yyvaluep)
#else
static void
yysymprint (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE *yyvaluep;
#endif
{
  /* Pacify ``unused variable'' warnings.  */
  (void) yyvaluep;

  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);


# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  switch (yytype)
    {
      default:
        break;
    }
  YYFPRINTF (yyoutput, ")");
}

#endif /* ! YYDEBUG */
/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

#if defined (__STDC__) || defined (__cplusplus)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
#else
static void
yydestruct (yymsg, yytype, yyvaluep)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
#endif
{
  /* Pacify ``unused variable'' warnings.  */
  (void) yyvaluep;

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
        break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
# if defined (__STDC__) || defined (__cplusplus)
int yyparse (void *YYPARSE_PARAM);
# else
int yyparse ();
# endif
#else /* ! YYPARSE_PARAM */
#if defined (__STDC__) || defined (__cplusplus)
int yyparse (void);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
# if defined (__STDC__) || defined (__cplusplus)
int yyparse (void *YYPARSE_PARAM)
# else
int yyparse (YYPARSE_PARAM)
  void *YYPARSE_PARAM;
# endif
#else /* ! YYPARSE_PARAM */
#if defined (__STDC__) || defined (__cplusplus)
int
yyparse (void)
#else
int
yyparse ()
    ;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  short int yyssa[YYINITDEPTH];
  short int *yyss = yyssa;
  short int *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;



#define YYPOPSTACK   (yyvsp--, yyssp--)

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;


  /* When reducing, the number of symbols on the RHS of the reduced
     rule.  */
  int yylen;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed. so pushing a state here evens the stacks.
     */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack. Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	short int *yyss1 = yyss;


	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),

		    &yystacksize);

	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	short int *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);

#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;


      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

/* Do appropriate processing given the current state.  */
/* Read a look-ahead token if we need one and don't already have one.  */
/* yyresume: */

  /* First try to decide what to do without reference to look-ahead token.  */

  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the token being shifted unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  *++yyvsp = yylval;


  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  yystate = yyn;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 925 "sql_yacc.yy"
    {
	   THD *thd= YYTHD;
	   if (!thd->bootstrap &&
	      (!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
	   {
	     my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
	     YYABORT;
	   }
	   else
	   {
	     thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
	   }
	}
    break;

  case 3:
#line 938 "sql_yacc.yy"
    {}
    break;

  case 57:
#line 1002 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          if (lex->stmt_prepare_mode)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
          }
          lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
          lex->prepared_stmt_name= (yyvsp[0].lex_str);
        }
    break;

  case 60:
#line 1022 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          if (lex->stmt_prepare_mode)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
          }
          lex->sql_command= SQLCOM_PREPARE;
          lex->prepared_stmt_name= (yyvsp[-2].lex_str);
        }
    break;

  case 61:
#line 1036 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          lex->prepared_stmt_code= (yyvsp[0].lex_str);
          lex->prepared_stmt_code_is_varref= FALSE;
        }
    break;

  case 62:
#line 1043 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          lex->prepared_stmt_code= (yyvsp[0].lex_str);
          lex->prepared_stmt_code_is_varref= TRUE;
        }
    break;

  case 63:
#line 1052 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          if (lex->stmt_prepare_mode)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
          }
          lex->sql_command= SQLCOM_EXECUTE;
          lex->prepared_stmt_name= (yyvsp[0].lex_str);
        }
    break;

  case 64:
#line 1064 "sql_yacc.yy"
    {}
    break;

  case 69:
#line 1078 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING));
          if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              YYABORT;
        }
    break;

  case 70:
#line 1090 "sql_yacc.yy"
    {
         if (Lex->sphead)
         {
           my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
           YYABORT;
         }
       }
    break;

  case 71:
#line 1098 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_HELP;
	  lex->help_arg= (yyvsp[0].lex_str).str;
       }
    break;

  case 72:
#line 1108 "sql_yacc.yy"
    {
	  LEX *lex = Lex;
	  lex->sql_command = SQLCOM_CHANGE_MASTER;
	  bzero((char*) &lex->mi, sizeof(lex->mi));
        }
    break;

  case 73:
#line 1114 "sql_yacc.yy"
    {}
    break;

  case 76:
#line 1123 "sql_yacc.yy"
    {
	 Lex->mi.host = (yyvsp[0].lex_str).str;
       }
    break;

  case 77:
#line 1128 "sql_yacc.yy"
    {
	 Lex->mi.user = (yyvsp[0].lex_str).str;
       }
    break;

  case 78:
#line 1133 "sql_yacc.yy"
    {
	 Lex->mi.password = (yyvsp[0].lex_str).str;
       }
    break;

  case 79:
#line 1138 "sql_yacc.yy"
    {
	 Lex->mi.port = (yyvsp[0].ulong_num);
       }
    break;

  case 80:
#line 1143 "sql_yacc.yy"
    {
	 Lex->mi.connect_retry = (yyvsp[0].ulong_num);
       }
    break;

  case 81:
#line 1147 "sql_yacc.yy"
    {
           Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
               LEX_MASTER_INFO::SSL_ENABLE : LEX_MASTER_INFO::SSL_DISABLE;
         }
    break;

  case 82:
#line 1152 "sql_yacc.yy"
    {
           Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
         }
    break;

  case 83:
#line 1156 "sql_yacc.yy"
    {
           Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
         }
    break;

  case 84:
#line 1160 "sql_yacc.yy"
    {
           Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
         }
    break;

  case 85:
#line 1164 "sql_yacc.yy"
    {
           Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
         }
    break;

  case 86:
#line 1168 "sql_yacc.yy"
    {
           Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
	 }
    break;

  case 88:
#line 1177 "sql_yacc.yy"
    {
	 Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
       }
    break;

  case 89:
#line 1181 "sql_yacc.yy"
    {
           Lex->mi.pos = (yyvsp[0].ulonglong_number);
           /* 
              If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
              instead of causing subsequent errors. 
              We need to do it in this file, because only there we know that 
              MASTER_LOG_POS has been explicitely specified. On the contrary
              in change_master() (sql_repl.cc) we cannot distinguish between 0
              (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
              whereas we want to distinguish (specified 0 means "read the binlog
              from 0" (4 in fact), unspecified means "don't change the position
              (keep the preceding value)").
           */
           Lex->mi.pos = max(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
         }
    break;

  case 90:
#line 1197 "sql_yacc.yy"
    {
           Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
         }
    break;

  case 91:
#line 1201 "sql_yacc.yy"
    {
           Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
           /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
           Lex->mi.relay_log_pos = max(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
         }
    break;

  case 92:
#line 1212 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_CREATE_TABLE;
	  if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
						 TL_OPTION_UPDATING,
						 (using_update_log ?
						  TL_READ_NO_INSERT:
						  TL_READ)))
	    YYABORT;
	  lex->create_list.empty();
	  lex->key_list.empty();
	  lex->col_list.empty();
	  lex->change=NullS;
	  bzero((char*) &lex->create_info,sizeof(lex->create_info));
	  lex->create_info.options=(yyvsp[-3].num) | (yyvsp[-1].num);
	  lex->create_info.db_type= lex->thd->variables.table_type;
	  lex->create_info.default_table_charset= NULL;
	  lex->name= 0;
         lex->like_name= 0;
	}
    break;

  case 93:
#line 1234 "sql_yacc.yy"
    { Lex->current_select= &Lex->select_lex; }
    break;

  case 94:
#line 1236 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_CREATE_INDEX;
	    if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[0].table), NULL,
							TL_OPTION_UPDATING))
	      YYABORT;
	    lex->create_list.empty();
	    lex->key_list.empty();
	    lex->col_list.empty();
	    lex->change=NullS;
	  }
    break;

  case 95:
#line 1248 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if ((yyvsp[-10].key_type) != Key::FULLTEXT && (yyvsp[0].lex_str_ptr))
	    {
	      yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
	    }
	    lex->key_list.push_back(new Key((yyvsp[-10].key_type),(yyvsp[-8].lex_str).str,(yyvsp[-7].key_alg),0,lex->col_list,(yyvsp[0].lex_str_ptr)));
	    lex->col_list.empty();
	  }
    break;

  case 96:
#line 1259 "sql_yacc.yy"
    {
             Lex->create_info.default_table_charset= NULL;
             Lex->create_info.used_fields= 0;
          }
    break;

  case 97:
#line 1264 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command=SQLCOM_CREATE_DB;
	    lex->name=(yyvsp[-2].lex_str).str;
            lex->create_info.options=(yyvsp[-3].num);
	  }
    break;

  case 98:
#line 1275 "sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (lex->et)
            {
              /*
                Recursive events are not possible because recursive SPs
                are not also possible. lex->sp_head is not stacked.
              */
              // ToDo Andrey : Change the error message
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "EVENT");
              YYABORT;
            }

            lex->create_info.options= (yyvsp[-1].num);

            if (!(lex->et= new(YYTHD->mem_root) Event_timed())) // implicitly calls Event_timed::init()
              YYABORT;

            /*
              We have to turn of CLIENT_MULTI_QUERIES while parsing a
              stored procedure, otherwise yylex will chop it into pieces
              at each ';'.
            */
            (yyval.ulong_num)= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
            YYTHD->client_capabilities &= (~CLIENT_MULTI_QUERIES);

            if (!lex->et_compile_phase)
            {
              lex->et->init_name(YYTHD, (yyvsp[0].spname));
              lex->et->init_definer(YYTHD);
            }
          }
    break;

  case 99:
#line 1313 "sql_yacc.yy"
    {
            /*
              Restore flag if it was cleared above
              $1 - CREATE
              $2 - EVENT_SYM
              $3 - opt_if_not_exists
              $4 - sp_name
              $5 - the block above
            */
            YYTHD->client_capabilities |= (yyvsp[-8].ulong_num);

            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 100:
#line 1331 "sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
	  }
    break;

  case 101:
#line 1337 "sql_yacc.yy"
    {}
    break;

  case 102:
#line 1339 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_CREATE_USER;
          }
    break;

  case 103:
#line 1343 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
    break;

  case 104:
#line 1348 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
    break;

  case 105:
#line 1356 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->et_compile_phase)
            {
              switch (lex->et->init_interval(YYTHD , (yyvsp[-1].item), (yyvsp[0].interval))) {
              case EVEX_PARSE_ERROR:
                yyerror(ER(ER_SYNTAX_ERROR));
                YYABORT;
                break;
              case EVEX_BAD_PARAMS:
                my_error(ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG, MYF(0));
              case EVEX_MICROSECOND_UNSUP:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0), "MICROSECOND");
                YYABORT;
                break;
              }
            }
          }
    break;

  case 107:
#line 1377 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->et_compile_phase)
            {
              switch (lex->et->init_execute_at(YYTHD, (yyvsp[0].item))) {
              case EVEX_PARSE_ERROR:
                yyerror(ER(ER_SYNTAX_ERROR));
                YYABORT;  
                break;
              case ER_WRONG_VALUE:
                {
                  char buff[120];
                  String str(buff,(uint32) sizeof(buff), system_charset_info);
                  String *str2= (yyvsp[0].item)->val_str(&str);
                  my_error(ER_WRONG_VALUE, MYF(0), "AT",
                           str2? str2->c_ptr():"NULL");
                  YYABORT;
                  break;
                }
              case EVEX_BAD_PARAMS:
                my_error(ER_EVENT_EXEC_TIME_IN_THE_PAST, MYF(0));
                YYABORT;
                break;
              }
            }
          }
    break;

  case 108:
#line 1405 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 109:
#line 1407 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->et_compile_phase)
              lex->et->status= MYSQL_EVENT_ENABLED;
            (yyval.num)= 1;
          }
    break;

  case 110:
#line 1414 "sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (!lex->et_compile_phase)
              lex->et->status= MYSQL_EVENT_DISABLED;
            (yyval.num)= 1;
          }
    break;

  case 111:
#line 1424 "sql_yacc.yy"
    {
            Lex->et->init_starts(YYTHD, new Item_func_now_local());
          }
    break;

  case 112:
#line 1428 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!lex->et_compile_phase)
            {

              switch (lex->et->init_starts(YYTHD, (yyvsp[0].item))) {
              case EVEX_PARSE_ERROR:
                yyerror(ER(ER_SYNTAX_ERROR));
                YYABORT;
                break;
              case EVEX_BAD_PARAMS:
                {
                  char buff[20];
                  String str(buff,(uint32) sizeof(buff), system_charset_info);
                  String *str2= (yyvsp[0].item)->val_str(&str);
                  my_error(ER_WRONG_VALUE, MYF(0), "STARTS", str2? str2->c_ptr():
                                                                   NULL);
                  YYABORT;
                  break;
                }
              }
            }
          }
    break;

  case 114:
#line 1455 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!lex->et_compile_phase)
            {
              switch (lex->et->init_ends(YYTHD, (yyvsp[0].item))) {
              case EVEX_PARSE_ERROR:
                yyerror(ER(ER_SYNTAX_ERROR));
                YYABORT;
                break;
              case EVEX_BAD_PARAMS:
                my_error(ER_EVENT_ENDS_BEFORE_STARTS, MYF(0));
                YYABORT;
                break;
              }
            }
          }
    break;

  case 115:
#line 1473 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 117:
#line 1479 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->et_compile_phase)
              lex->et->on_completion= MYSQL_EVENT_ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 118:
#line 1486 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->et_compile_phase)
              lex->et->on_completion= MYSQL_EVENT_ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 119:
#line 1494 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 120:
#line 1496 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!lex->et_compile_phase)
            {
              lex->comment= (yyvsp[0].lex_str);
              lex->et->init_comment(YYTHD, &(yyvsp[0].lex_str));
            }
            (yyval.num)= 1;
          }
    break;

  case 121:
#line 1508 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp;

            (yyval.sphead)= lex->sphead;

            if (!lex->sphead)
            {
              if (!(sp= new sp_head()))
                YYABORT;

              sp->reset_thd_mem_root(YYTHD);
              sp->init(lex);

              sp->m_type= TYPE_ENUM_PROCEDURE;

              lex->sphead= sp;

              bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
              lex->sphead->m_chistics= &lex->sp_chistics;

              lex->sphead->m_body_begin= lex->ptr;
            }

            if (!lex->et_compile_phase)
              lex->et->body_begin= lex->ptr;
          }
    break;

  case 122:
#line 1536 "sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (!(yyvsp[-1].sphead))
            {
              sp_head *sp= lex->sphead;
              // return back to the original memory root ASAP
              sp->init_strings(YYTHD, lex, NULL);
              sp->restore_thd_mem_root(YYTHD);

              lex->sp_chistics.suid= SP_IS_SUID;//always the definer!

              lex->et->sphead= lex->sphead;
              lex->sphead= NULL;
            }
            if (!lex->et_compile_phase)
            {
              lex->et->init_body(YYTHD);
            }
          }
    break;

  case 137:
#line 1578 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->users_list.empty();
          lex->columns.empty();
          lex->grant= lex->grant_tot_col= 0;
	  lex->all_privileges= 0;
          lex->select_lex.db= 0;
          lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
          bzero((char *)&(lex->mqh),sizeof(lex->mqh));
        }
    break;

  case 138:
#line 1593 "sql_yacc.yy"
    {
            if (!(yyvsp[-2].lex_str).str || check_db_name((yyvsp[-2].lex_str).str))
            {
	      my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[-2].lex_str).str);
	      YYABORT;
	    }
	    if (check_routine_name((yyvsp[0].lex_str)))
            {
	      my_error(ER_SP_WRONG_NAME, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    (yyval.spname)= new sp_name((yyvsp[-2].lex_str), (yyvsp[0].lex_str));
	    (yyval.spname)->init_qname(YYTHD);
	  }
    break;

  case 139:
#line 1608 "sql_yacc.yy"
    {
	    if (check_routine_name((yyvsp[0].lex_str)))
            {
	      my_error(ER_SP_WRONG_NAME, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    (yyval.spname)= sp_name_current_db_new(YYTHD, (yyvsp[0].lex_str));
	  }
    break;

  case 140:
#line 1620 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command = SQLCOM_CREATE_FUNCTION;
	    lex->udf.name = lex->spname->m_name;
	    lex->udf.returns=(Item_result) (yyvsp[-2].num);
	    lex->udf.dl=(yyvsp[0].lex_str).str;
	  }
    break;

  case 141:
#line 1628 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp;

            /* 
              First check if AGGREGATE was used, in that case it's a
              syntax error.
            */
            if (lex->udf.type == UDFTYPE_AGGREGATE)
            {
              my_error(ER_SP_NO_AGGREGATE, MYF(0));
              YYABORT;
            }

	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
	      YYABORT;
	    }
	    /* Order is important here: new - reset - init */
	    sp= new sp_head();
	    sp->reset_thd_mem_root(YYTHD);
	    sp->init(lex);

	    sp->m_type= TYPE_ENUM_FUNCTION;
	    lex->sphead= sp;
	    /*
	     * We have to turn of CLIENT_MULTI_QUERIES while parsing a
	     * stored procedure, otherwise yylex will chop it into pieces
	     * at each ';'.
	     */
            (yyval.ulong_num)= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
	    YYTHD->client_capabilities &= ~CLIENT_MULTI_QUERIES;
	    lex->sphead->m_param_begin= lex->tok_start+1;
	  }
    break;

  case 142:
#line 1664 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->m_param_end= lex->tok_start;
	  }
    break;

  case 143:
#line 1670 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->charset= NULL;
	    lex->length= lex->dec= NULL;
	    lex->interval_list.empty();
	    lex->type= 0;
	  }
    break;

  case 144:
#line 1678 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

            if (sp->fill_field_definition(YYTHD, lex,
                                          (enum enum_field_types) (yyvsp[0].num),
                                          &sp->m_return_field_def))
              YYABORT;

	    bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
	  }
    break;

  case 145:
#line 1690 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->m_chistics= &lex->sp_chistics;
	    lex->sphead->m_body_begin= lex->tok_start;
	  }
    break;

  case 146:
#line 1697 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              YYABORT;

	    if (sp->check_backpatch(YYTHD))
	      YYABORT;
	    lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
	    sp->init_strings(YYTHD, lex, lex->spname);
            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              YYABORT;
            }
	    /* Restore flag if it was cleared above */
	    YYTHD->client_capabilities |= (yyvsp[-10].ulong_num);
	    sp->restore_thd_mem_root(YYTHD);
	  }
    break;

  case 147:
#line 1720 "sql_yacc.yy"
    {}
    break;

  case 148:
#line 1721 "sql_yacc.yy"
    {}
    break;

  case 149:
#line 1725 "sql_yacc.yy"
    {}
    break;

  case 150:
#line 1726 "sql_yacc.yy"
    {}
    break;

  case 151:
#line 1732 "sql_yacc.yy"
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
    break;

  case 152:
#line 1734 "sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 153:
#line 1736 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 154:
#line 1738 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 155:
#line 1740 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 156:
#line 1742 "sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 157:
#line 1744 "sql_yacc.yy"
    { }
    break;

  case 158:
#line 1749 "sql_yacc.yy"
    { }
    break;

  case 159:
#line 1750 "sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 160:
#line 1751 "sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 161:
#line 1756 "sql_yacc.yy"
    {
	    Lex->sp_chistics.suid= SP_IS_SUID;
	  }
    break;

  case 162:
#line 1760 "sql_yacc.yy"
    {
	    Lex->sp_chistics.suid= SP_IS_NOT_SUID;
	  }
    break;

  case 163:
#line 1767 "sql_yacc.yy"
    {
	    LEX *lex = Lex;

	    lex->sql_command= SQLCOM_CALL;
	    lex->spname= (yyvsp[0].spname);
	    lex->value_list.empty();
	    sp_add_used_routine(lex, YYTHD, (yyvsp[0].spname), TYPE_ENUM_PROCEDURE);
	  }
    break;

  case 164:
#line 1775 "sql_yacc.yy"
    {}
    break;

  case 167:
#line 1786 "sql_yacc.yy"
    {
	    Lex->value_list.push_back((yyvsp[0].item));
	  }
    break;

  case 168:
#line 1790 "sql_yacc.yy"
    {
	    Lex->value_list.push_back((yyvsp[0].item));
	  }
    break;

  case 173:
#line 1808 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->length= 0;
	    lex->dec= 0;
	    lex->type= 0;
	  
	    lex->default_value= 0;
	    lex->on_update_value= 0;
	  
	    lex->comment= null_lex_str;
	    lex->charset= NULL;
	  
	    lex->interval_list.empty();
	    lex->uint_geom_type= 0;
	  }
    break;

  case 174:
#line 1828 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_pvar(&(yyvsp[-2].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lex_str).str);
	      YYABORT;
	    }
	    sp_pvar_t *pvar= spc->push_pvar(&(yyvsp[-2].lex_str), (enum enum_field_types)(yyvsp[0].num),
                                            sp_param_in);

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) (yyvsp[0].num),
                                                   &pvar->field_def))
            {
              YYABORT;
            }
            pvar->field_def.field_name= pvar->name.str;
            pvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
	  }
    break;

  case 179:
#line 1864 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_pvar(&(yyvsp[-1].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-1].lex_str).str);
	      YYABORT;
	    }
	    sp_pvar_t *pvar= spc->push_pvar(&(yyvsp[-1].lex_str), (enum enum_field_types)(yyvsp[0].num),
			                    (sp_param_mode_t)(yyvsp[-3].num));

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) (yyvsp[0].num),
                                                   &pvar->field_def))
            {
              YYABORT;
            }
            pvar->field_def.field_name= pvar->name.str;
            pvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
	  }
    break;

  case 180:
#line 1888 "sql_yacc.yy"
    { (yyval.num)= sp_param_in; }
    break;

  case 181:
#line 1889 "sql_yacc.yy"
    { (yyval.num)= sp_param_in; }
    break;

  case 182:
#line 1890 "sql_yacc.yy"
    { (yyval.num)= sp_param_out; }
    break;

  case 183:
#line 1891 "sql_yacc.yy"
    { (yyval.num)= sp_param_inout; }
    break;

  case 184:
#line 1895 "sql_yacc.yy"
    {}
    break;

  case 186:
#line 1900 "sql_yacc.yy"
    {}
    break;

  case 188:
#line 1906 "sql_yacc.yy"
    {
	    (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
	  }
    break;

  case 189:
#line 1910 "sql_yacc.yy"
    {
	    /* We check for declarations out of (standard) order this way
	       because letting the grammar rules reflect it caused tricky
	       shift/reduce conflicts with the wrong result. (And we get
	       better error handling this way.) */
	    if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
	    { /* Variable or condition following cursor or handler */
	      my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
	      YYABORT;
	    }
	    if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
	    { /* Cursor following handler */
	      my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
	      YYABORT;
	    }
	    (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
	    (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
	    (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
	    (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
	  }
    break;

  case 190:
#line 1936 "sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sphead->reset_lex(YYTHD);
            lex->spcont->declare_var_boundary((yyvsp[0].num));
          }
    break;

  case 191:
#line 1944 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->spcont;
            uint num_vars= pctx->context_pvars();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[-1].num);
            Item *dflt_value_item= (yyvsp[0].item);
            create_field *create_field_op;
            
            if (!dflt_value_item)
            {
              dflt_value_item= new Item_null();
              /* QQ Set to the var_type with null_value? */
            }
            
            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->pvar_context2index(i);
              sp_pvar_t *pvar= pctx->find_pvar(var_idx);
            
              if (!pvar)
                YYABORT;
            
              pvar->type= var_type;
              pvar->dflt= dflt_value_item;
            
              if (lex->sphead->fill_field_definition(YYTHD, lex, var_type,
                                                     &pvar->field_def))
              {
                YYABORT;
              }
            
              pvar->field_def.field_name= pvar->name.str;
              pvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
            
              /* The last instruction is responsible for freeing LEX. */

              lex->sphead->add_instr(
                new sp_instr_set(lex->sphead->instructions(), pctx, var_idx,
                                 dflt_value_item, var_type, lex,
                                 (i == num_vars - 1)));
            }

            pctx->declare_var_boundary(0);
            lex->sphead->restore_lex(YYTHD);

            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 192:
#line 1993 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_cond(&(yyvsp[-3].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lex_str).str);
	      YYABORT;
	    }
	    YYTHD->lex->spcont->push_cond(&(yyvsp[-3].lex_str), (yyvsp[0].spcondtype));
	    (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
	    (yyval.spblock).conds= 1;
	  }
    break;

  case 193:
#line 2007 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_instr_hpush_jump *i=
              new sp_instr_hpush_jump(sp->instructions(), ctx, (yyvsp[-2].num),
	                              ctx->current_pvars());

	    sp->add_instr(i);
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
	    sp->m_flags|= sp_head::IN_HANDLER;
	  }
    break;

  case 194:
#line 2020 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *hlab= lex->spcont->pop_label(); /* After this hdlr */
	    sp_instr_hreturn *i;

	    if ((yyvsp[-5].num) == SP_HANDLER_CONTINUE)
	    {
	      i= new sp_instr_hreturn(sp->instructions(), ctx,
	                              ctx->current_pvars());
	      sp->add_instr(i);
	    }
	    else
	    {  /* EXIT or UNDO handler, just jump to the end of the block */
	      i= new sp_instr_hreturn(sp->instructions(), ctx, 0);

	      sp->add_instr(i);
	      sp->push_backpatch(i, lex->spcont->last_label()); /* Block end */
	    }
	    lex->sphead->backpatch(hlab);
	    sp->m_flags&= ~sp_head::IN_HANDLER;
	    (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
	    (yyval.spblock).hndlrs= (yyvsp[-1].num);
	    ctx->add_handlers((yyvsp[-1].num));
	  }
    break;

  case 195:
#line 2047 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    uint offp;
	    sp_instr_cpush *i;

	    if (ctx->find_cursor(&(yyvsp[-3].lex_str), &offp, TRUE))
	    {
	      my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-3].lex_str).str);
	      delete (yyvsp[0].lex);
	      YYABORT;
	    }
            i= new sp_instr_cpush(sp->instructions(), ctx, (yyvsp[0].lex),
                                  ctx->current_cursors());
	    sp->add_instr(i);
	    ctx->push_cursor(&(yyvsp[-3].lex_str));
	    (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
	    (yyval.spblock).curs= 1;
	  }
    break;

  case 196:
#line 2070 "sql_yacc.yy"
    {
	    Lex->sphead->reset_lex(YYTHD);

	    /* We use statement here just be able to get a better
	       error message. Using 'select' works too, but will then
	       result in a generic "syntax error" if a non-select
	       statement is given. */
	  }
    break;

  case 197:
#line 2079 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if (lex->sql_command != SQLCOM_SELECT)
	    {
	      my_message(ER_SP_BAD_CURSOR_QUERY, ER(ER_SP_BAD_CURSOR_QUERY),
                         MYF(0));
	      YYABORT;
	    }
	    if (lex->result)
	    {
	      my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
	      YYABORT;
	    }
	    lex->sp_lex_in_use= TRUE;
	    (yyval.lex)= lex;
	    lex->sphead->restore_lex(YYTHD);
	  }
    break;

  case 198:
#line 2101 "sql_yacc.yy"
    { (yyval.num)= SP_HANDLER_EXIT; }
    break;

  case 199:
#line 2102 "sql_yacc.yy"
    { (yyval.num)= SP_HANDLER_CONTINUE; }
    break;

  case 200:
#line 2108 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;

	    if (ctx->find_handler((yyvsp[0].spcondtype)))
	    {
	      my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

	      i->add_condition((yyvsp[0].spcondtype));
	      ctx->push_handler((yyvsp[0].spcondtype));
	      (yyval.num)= 1;
	    }
	  }
    break;

  case 201:
#line 2129 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;

	    if (ctx->find_handler((yyvsp[0].spcondtype)))
	    {
	      my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_hpush_jump *i=
	        (sp_instr_hpush_jump *)sp->last_instruction();

	      i->add_condition((yyvsp[0].spcondtype));
	      ctx->push_handler((yyvsp[0].spcondtype));
	      (yyval.num)= (yyvsp[-2].num) + 1;
	    }
	  }
    break;

  case 202:
#line 2153 "sql_yacc.yy"
    {			/* mysql errno */
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::number;
	    (yyval.spcondtype)->mysqlerr= (yyvsp[0].ulong_num);
	  }
    break;

  case 203:
#line 2159 "sql_yacc.yy"
    {		/* SQLSTATE */
	    if (!sp_cond_check(&(yyvsp[0].lex_str)))
	    {
	      my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::state;
	    memcpy((yyval.spcondtype)->sqlstate, (yyvsp[0].lex_str).str, 5);
	    (yyval.spcondtype)->sqlstate[5]= '\0';
	  }
    break;

  case 204:
#line 2173 "sql_yacc.yy"
    {}
    break;

  case 205:
#line 2174 "sql_yacc.yy"
    {}
    break;

  case 206:
#line 2179 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= (yyvsp[0].spcondtype);
	  }
    break;

  case 207:
#line 2183 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= Lex->spcont->find_cond(&(yyvsp[0].lex_str));
	    if ((yyval.spcondtype) == NULL)
	    {
	      my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	  }
    break;

  case 208:
#line 2192 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::warning;
	  }
    break;

  case 209:
#line 2197 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::notfound;
	  }
    break;

  case 210:
#line 2202 "sql_yacc.yy"
    {
	    (yyval.spcondtype)= (sp_cond_type_t *)YYTHD->alloc(sizeof(sp_cond_type_t));
	    (yyval.spcondtype)->type= sp_cond_type_t::exception;
	  }
    break;

  case 211:
#line 2210 "sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_pvar(&(yyvsp[0].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    spc->push_pvar(&(yyvsp[0].lex_str), (enum_field_types)0, sp_param_in);
	    (yyval.num)= 1;
	  }
    break;

  case 212:
#line 2225 "sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

	    LEX *lex= Lex;
	    sp_pcontext *spc= lex->spcont;

	    if (spc->find_pvar(&(yyvsp[0].lex_str), TRUE))
	    {
	      my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    spc->push_pvar(&(yyvsp[0].lex_str), (enum_field_types)0, sp_param_in);
	    (yyval.num)= (yyvsp[-2].num) + 1;
	  }
    break;

  case 213:
#line 2242 "sql_yacc.yy"
    { (yyval.item) = NULL; }
    break;

  case 214:
#line 2243 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 229:
#line 2264 "sql_yacc.yy"
    { Lex->sphead->new_cont_backpatch(NULL); }
    break;

  case 230:
#line 2266 "sql_yacc.yy"
    { Lex->sphead->do_cont_backpatch(); }
    break;

  case 231:
#line 2270 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->reset_lex(YYTHD);
	    lex->sphead->m_tmp_query= lex->tok_start;
	  }
    break;

  case 232:
#line 2277 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
	    if (lex->sql_command == SQLCOM_CHANGE_DB)
	    { /* "USE db" doesn't work in a procedure */
	      my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
	      YYABORT;
	    }
	    /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
	    */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
	    {
              sp_instr_stmt *i=new sp_instr_stmt(sp->instructions(),
                                                 lex->spcont, lex);

              /* Extract the query statement from the tokenizer:
                 The end is either lex->tok_end or tok->ptr. */
              if (lex->ptr - lex->tok_end > 1)
                i->m_query.length= lex->ptr - sp->m_tmp_query;
              else
                i->m_query.length= lex->tok_end - sp->m_tmp_query;
              i->m_query.str= strmake_root(YYTHD->mem_root,
                                           (char *)sp->m_tmp_query,
                                           i->m_query.length);
              sp->add_instr(i);
            }
	    sp->restore_lex(YYTHD);
          }
    break;

  case 233:
#line 2316 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 234:
#line 2318 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;

	    if (sp->m_type != TYPE_ENUM_FUNCTION)
	    {
	      my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_freturn *i;

	      i= new sp_instr_freturn(sp->instructions(), lex->spcont, (yyvsp[0].item),
                                      sp->m_return_field_def.sql_type, lex);
	      sp->add_instr(i);
	      sp->m_flags|= sp_head::HAS_RETURN;
	    }
	    sp->restore_lex(YYTHD);
	  }
    break;

  case 235:
#line 2342 "sql_yacc.yy"
    {
	    Lex->sphead->m_flags&= ~sp_head::IN_SIMPLE_CASE;
            Lex->sphead->new_cont_backpatch(NULL);
	  }
    break;

  case 236:
#line 2346 "sql_yacc.yy"
    { Lex->sphead->do_cont_backpatch(); }
    break;

  case 237:
#line 2351 "sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD);
            Lex->sphead->new_cont_backpatch(NULL);
          }
    break;

  case 238:
#line 2356 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *parsing_ctx= lex->spcont;
	    int case_expr_id= parsing_ctx->register_case_expr();
            sp_instr_set_case_expr *i;
	    
	    if (parsing_ctx->push_case_expr_id(case_expr_id))
              YYABORT;

            i= new sp_instr_set_case_expr(sp->instructions(),
                                          parsing_ctx,
                                          case_expr_id,
                                          (yyvsp[-1].item),
                                          lex);
            sp->add_cont_backpatch(i);
            sp->add_instr(i);
	    sp->m_flags|= sp_head::IN_SIMPLE_CASE;
	    sp->restore_lex(YYTHD);
	  }
    break;

  case 239:
#line 2377 "sql_yacc.yy"
    {
	    Lex->spcont->pop_case_expr_id();
            Lex->sphead->do_cont_backpatch();
	  }
    break;

  case 240:
#line 2384 "sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
	    LEX *lex= Lex;

	    lex->spcont->push_label((char *)"", lex->sphead->instructions());
	  }
    break;

  case 241:
#line 2390 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 242:
#line 2399 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp = lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label((yyvsp[0].lex_str).str);

	    if (! lab)
	    {
	      my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_jump *i;
	      uint ip= sp->instructions();
	      uint n;

	      n= ctx->diff_handlers(lab->ctx, TRUE);  /* Exclusive the dest. */
	      if (n)
	        sp->add_instr(new sp_instr_hpop(ip++, ctx, n));
	      n= ctx->diff_cursors(lab->ctx, TRUE);  /* Exclusive the dest. */
	      if (n)
	        sp->add_instr(new sp_instr_cpop(ip++, ctx, n));
	      i= new sp_instr_jump(ip, ctx);
	      sp->push_backpatch(i, lab);  /* Jumping forward */
              sp->add_instr(i);
	    }
	  }
    break;

  case 243:
#line 2431 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label((yyvsp[0].lex_str).str);

	    if (! lab || lab->type != SP_LAB_ITER)
	    {
	      my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      sp_instr_jump *i;
	      uint ip= sp->instructions();
	      uint n;

	      n= ctx->diff_handlers(lab->ctx, FALSE);  /* Inclusive the dest. */
	      if (n)
	        sp->add_instr(new sp_instr_hpop(ip++, ctx, n));
	      n= ctx->diff_cursors(lab->ctx, FALSE);  /* Inclusive the dest. */
	      if (n)
	        sp->add_instr(new sp_instr_cpop(ip++, ctx, n));
	      i= new sp_instr_jump(ip, ctx, lab->ip); /* Jump back */
              sp->add_instr(i);
	    }
	  }
    break;

  case 244:
#line 2462 "sql_yacc.yy"
    {
#ifdef SP_GOTO
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label((yyvsp[0].lex_str).str);

	    if (lab)
	    {
	      my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      lab= ctx->push_label((yyvsp[0].lex_str).str, sp->instructions());
	      lab->type= SP_LAB_GOTO;
	      lab->ctx= ctx;
              sp->backpatch(lab);
	    }
#else
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
#endif
	  }
    break;

  case 245:
#line 2490 "sql_yacc.yy"
    {
#ifdef SP_GOTO
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab;
	    sp_instr_jump *i;
	    sp_instr_hpop *ih;
	    sp_instr_cpop *ic;

	    if (sp->m_in_handler)
	    {
	      my_message(ER_SP_GOTO_IN_HNDLR, ER(ER_SP_GOTO_IN_HNDLR), MYF(0));
	      YYABORT;
	    }
	    lab= ctx->find_label((yyvsp[0].lex_str).str);
	    if (! lab)
	    {
	      lab= (sp_label_t *)YYTHD->alloc(sizeof(sp_label_t));
	      lab->name= (yyvsp[0].lex_str).str;
	      lab->ip= 0;
	      lab->type= SP_LAB_REF;
	      lab->ctx= ctx;

	      ih= new sp_instr_hpop(ip++, ctx, 0);
	      sp->push_backpatch(ih, lab);
	      sp->add_instr(ih);
	      ic= new sp_instr_cpop(ip++, ctx, 0);
	      sp->add_instr(ic);
	      sp->push_backpatch(ic, lab);
	      i= new sp_instr_jump(ip, ctx);
	      sp->push_backpatch(i, lab);  /* Jumping forward */
	      sp->add_instr(i);
	    }
	    else
	    {
	      uint n;

	      n= ctx->diff_handlers(lab->ctx);
	      if (n)
	      {
	        ih= new sp_instr_hpop(ip++, ctx, n);
	        sp->add_instr(ih);
	      }
	      n= ctx->diff_cursors(lab->ctx);
	      if (n)
	      {
	        ic= new sp_instr_cpop(ip++, ctx, n);
	        sp->add_instr(ic);
	      }
	      i= new sp_instr_jump(ip, ctx, lab->ip); /* Jump back */
	      sp->add_instr(i);
	    }
#else
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
#endif
	  }
    break;

  case 246:
#line 2553 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint offset;
	    sp_instr_copen *i;

	    if (! lex->spcont->find_cursor(&(yyvsp[0].lex_str), &offset))
	    {
	      my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    i= new sp_instr_copen(sp->instructions(), lex->spcont, offset);
	    sp->add_instr(i);
	  }
    break;

  case 247:
#line 2571 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint offset;
	    sp_instr_cfetch *i;

	    if (! lex->spcont->find_cursor(&(yyvsp[-1].lex_str), &offset))
	    {
	      my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lex_str).str);
	      YYABORT;
	    }
	    i= new sp_instr_cfetch(sp->instructions(), lex->spcont, offset);
	    sp->add_instr(i);
	  }
    break;

  case 248:
#line 2586 "sql_yacc.yy"
    { }
    break;

  case 249:
#line 2591 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint offset;
	    sp_instr_cclose *i;

	    if (! lex->spcont->find_cursor(&(yyvsp[0].lex_str), &offset))
	    {
	      my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    i= new sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
	    sp->add_instr(i);
	  }
    break;

  case 253:
#line 2615 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *spc= lex->spcont;
	    sp_pvar_t *spv;

	    if (!spc || !(spv = spc->find_pvar(&(yyvsp[0].lex_str))))
	    {
	      my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      /* An SP local variable */
	      sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

	      i->add_to_varlist(spv);
	    }
	  }
    break;

  case 254:
#line 2636 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *spc= lex->spcont;
	    sp_pvar_t *spv;

	    if (!spc || !(spv = spc->find_pvar(&(yyvsp[0].lex_str))))
	    {
	      my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      /* An SP local variable */
	      sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

	      i->add_to_varlist(spv);
	    }
	  }
    break;

  case 255:
#line 2658 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 256:
#line 2660 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, ctx,
                                                               (yyvsp[-1].item), lex);

	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
            sp->add_cont_backpatch(i);
            sp->add_instr(i);
            sp->restore_lex(YYTHD);
	  }
    break;

  case 257:
#line 2674 "sql_yacc.yy"
    {
	    sp_head *sp= Lex->sphead;
	    sp_pcontext *ctx= Lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump *i = new sp_instr_jump(ip, ctx);

	    sp->add_instr(i);
	    sp->backpatch(ctx->pop_label());
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
	  }
    break;

  case 258:
#line 2685 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 262:
#line 2699 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 263:
#line 2701 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= Lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump_if_not *i;

	    if (! (sp->m_flags & sp_head::IN_SIMPLE_CASE))
	      i= new sp_instr_jump_if_not(ip, ctx, (yyvsp[-1].item), lex);
	    else
	    { /* Simple case: <caseval> = <whenval> */

	      Item_case_expr *var;
              Item *expr;

              var= new Item_case_expr(ctx->get_current_case_expr_id());

#ifndef DBUG_OFF
              if (var)
                var->m_sp= sp;
#endif

	      expr= new Item_func_eq(var, (yyvsp[-1].item));

	      i= new sp_instr_jump_if_not(ip, ctx, expr, lex);
	    }
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
            sp->add_cont_backpatch(i);
            sp->add_instr(i);
            sp->restore_lex(YYTHD);
	  }
    break;

  case 264:
#line 2733 "sql_yacc.yy"
    {
	    sp_head *sp= Lex->sphead;
	    sp_pcontext *ctx= Lex->spcont;
	    uint ip= sp->instructions();
	    sp_instr_jump *i = new sp_instr_jump(ip, ctx);

	    sp->add_instr(i);
	    sp->backpatch(ctx->pop_label());
	    sp->push_backpatch(i, ctx->push_label((char *)"", 0));
	  }
    break;

  case 265:
#line 2744 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 266:
#line 2753 "sql_yacc.yy"
    {
	    sp_head *sp= Lex->sphead;
	    uint ip= sp->instructions();
	    sp_instr_error *i= new sp_instr_error(ip, Lex->spcont,
						  ER_SP_CASE_NOT_FOUND);

	    sp->add_instr(i);
	  }
    break;

  case 267:
#line 2761 "sql_yacc.yy"
    {}
    break;

  case 268:
#line 2762 "sql_yacc.yy"
    {}
    break;

  case 269:
#line 2767 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_pcontext *ctx= lex->spcont;
	    sp_label_t *lab= ctx->find_label((yyvsp[-1].lex_str).str);

	    if (lab)
	    {
	      my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_str).str);
	      YYABORT;
	    }
	    else
	    {
	      lab= lex->spcont->push_label((yyvsp[-1].lex_str).str,
	                                   lex->sphead->instructions());
	      lab->type= SP_LAB_ITER;
	    }
	  }
    break;

  case 270:
#line 2785 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if ((yyvsp[0].lex_str).str)
	    {
	      sp_label_t *lab= lex->spcont->find_label((yyvsp[0].lex_str).str);

	      if (!lab ||
	          my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, lab->name) != 0)
	      {
	        my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
	        YYABORT;
	      }
	    }
	    lex->sphead->backpatch(lex->spcont->pop_label());
	  }
    break;

  case 271:
#line 2804 "sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 272:
#line 2805 "sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
    break;

  case 273:
#line 2810 "sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
	       together. No [[NOT] ATOMIC] yet, and we need to figure out how
	       make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
	    LEX *lex= Lex;
	    sp_label_t *lab= lex->spcont->last_label();

	    lab->type= SP_LAB_BEGIN;
	    lex->spcont= lex->spcont->push_context();
	  }
    break;

  case 274:
#line 2822 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    sp_pcontext *ctx= lex->spcont;

  	    sp->backpatch(ctx->last_label());	/* We always have a label */
	    if ((yyvsp[-2].spblock).hndlrs)
	      sp->add_instr(new sp_instr_hpop(sp->instructions(), ctx,
					      (yyvsp[-2].spblock).hndlrs));
	    if ((yyvsp[-2].spblock).curs)
	      sp->add_instr(new sp_instr_cpop(sp->instructions(), ctx,
					      (yyvsp[-2].spblock).curs));
	    lex->spcont= ctx->pop_context();
	  }
    break;

  case 275:
#line 2838 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
	    sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);

	    lex->sphead->add_instr(i);
	  }
    break;

  case 276:
#line 2847 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 277:
#line 2849 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_head *sp= lex->sphead;
	    uint ip= sp->instructions();
	    sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
							       (yyvsp[-1].item), lex);

	    /* Jumping forward */
	    sp->push_backpatch(i, lex->spcont->last_label());
            sp->new_cont_backpatch(i);
            sp->add_instr(i);
            sp->restore_lex(YYTHD);
	  }
    break;

  case 278:
#line 2863 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
	    sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);

	    lex->sphead->add_instr(i);
            lex->sphead->do_cont_backpatch();
	  }
    break;

  case 279:
#line 2873 "sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 280:
#line 2875 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    uint ip= lex->sphead->instructions();
	    sp_label_t *lab= lex->spcont->last_label();  /* Jumping back */
	    sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
                                                               (yyvsp[-2].item), lab->ip,
                                                               lex);
            lex->sphead->add_instr(i);
            lex->sphead->restore_lex(YYTHD);
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
	  }
    break;

  case 281:
#line 2891 "sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
    break;

  case 282:
#line 2893 "sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
    break;

  case 283:
#line 2898 "sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
    break;

  case 284:
#line 2900 "sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
    break;

  case 285:
#line 2902 "sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
    break;

  case 289:
#line 2936 "sql_yacc.yy"
    {}
    break;

  case 290:
#line 2938 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].lex_str).str;
          }
    break;

  case 291:
#line 2947 "sql_yacc.yy"
    { 
	    Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
    break;

  case 292:
#line 2954 "sql_yacc.yy"
    { 
	    Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
    break;

  case 297:
#line 2976 "sql_yacc.yy"
    {}
    break;

  case 305:
#line 2993 "sql_yacc.yy"
    {}
    break;

  case 318:
#line 3015 "sql_yacc.yy"
    {}
    break;

  case 328:
#line 3034 "sql_yacc.yy"
    {}
    break;

  case 340:
#line 3055 "sql_yacc.yy"
    {}
    break;

  case 348:
#line 3074 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
    break;

  case 349:
#line 3081 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
    break;

  case 350:
#line 3088 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
    break;

  case 351:
#line 3095 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 352:
#line 3104 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 353:
#line 3113 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
    break;

  case 354:
#line 3118 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
    break;

  case 355:
#line 3123 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
    break;

  case 356:
#line 3130 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
    break;

  case 357:
#line 3137 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
    break;

  case 358:
#line 3144 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
    break;

  case 359:
#line 3151 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
    break;

  case 360:
#line 3158 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
    break;

  case 361:
#line 3165 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
    break;

  case 362:
#line 3172 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
    break;

  case 363:
#line 3184 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
    break;

  case 364:
#line 3196 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != DB_TYPE_UNKNOWN)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type)->db_type;
          }
    break;

  case 367:
#line 3214 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
    break;

  case 368:
#line 3219 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
    break;

  case 369:
#line 3230 "sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[0].ulong_num);}
    break;

  case 370:
#line 3232 "sql_yacc.yy"
    {
            ulonglong number, test_number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[0].lex_str).str;
            uint str_len= strlen(start_ptr);
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                case 'm':
                case 'M':
                  text_shift_number+=10;
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 371:
#line 3282 "sql_yacc.yy"
    {}
    break;

  case 372:
#line 3284 "sql_yacc.yy"
    {}
    break;

  case 373:
#line 3285 "sql_yacc.yy"
    {}
    break;

  case 374:
#line 3287 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!(lex->like_name= (yyvsp[0].table)))
              YYABORT;
          }
    break;

  case 375:
#line 3293 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!(lex->like_name= (yyvsp[-1].table)))
              YYABORT;
          }
    break;

  case 376:
#line 3302 "sql_yacc.yy"
    {}
    break;

  case 377:
#line 3303 "sql_yacc.yy"
    {}
    break;

  case 378:
#line 3304 "sql_yacc.yy"
    {}
    break;

  case 379:
#line 3306 "sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 380:
#line 3306 "sql_yacc.yy"
    {}
    break;

  case 381:
#line 3310 "sql_yacc.yy"
    {}
    break;

  case 382:
#line 3312 "sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 383:
#line 3312 "sql_yacc.yy"
    {}
    break;

  case 384:
#line 3314 "sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 385:
#line 3314 "sql_yacc.yy"
    {}
    break;

  case 386:
#line 3342 "sql_yacc.yy"
    {}
    break;

  case 388:
#line 3348 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->part_info= new partition_info();
          if (!lex->part_info)
          {
            mem_alloc_error(sizeof(partition_info));
            YYABORT;
          }
          if (lex->sql_command == SQLCOM_ALTER_TABLE)
          {
            lex->alter_info.flags|= ALTER_PARTITION;
          }
        }
    break;

  case 390:
#line 3366 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (!lex->part_info)
          {
            yyerror(ER(ER_PARTITION_ENTRY_ERROR));
            YYABORT;
          }
          /*
            We enter here when opening the frm file to translate
            partition info string into part_info data structure.
          */
        }
    break;

  case 391:
#line 3378 "sql_yacc.yy"
    {}
    break;

  case 392:
#line 3382 "sql_yacc.yy"
    {}
    break;

  case 393:
#line 3382 "sql_yacc.yy"
    {}
    break;

  case 395:
#line 3387 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->part_info->list_of_part_fields= TRUE;
          lex->part_info->part_type= HASH_PARTITION;
        }
    break;

  case 396:
#line 3393 "sql_yacc.yy"
    { Lex->part_info->part_type= HASH_PARTITION; }
    break;

  case 397:
#line 3394 "sql_yacc.yy"
    {}
    break;

  case 398:
#line 3396 "sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 399:
#line 3397 "sql_yacc.yy"
    {}
    break;

  case 400:
#line 3399 "sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 401:
#line 3400 "sql_yacc.yy"
    {}
    break;

  case 402:
#line 3404 "sql_yacc.yy"
    {}
    break;

  case 403:
#line 3406 "sql_yacc.yy"
    { Lex->part_info->linear_hash_ind= TRUE;}
    break;

  case 404:
#line 3410 "sql_yacc.yy"
    {}
    break;

  case 405:
#line 3411 "sql_yacc.yy"
    {}
    break;

  case 406:
#line 3415 "sql_yacc.yy"
    {}
    break;

  case 407:
#line 3416 "sql_yacc.yy"
    {}
    break;

  case 408:
#line 3421 "sql_yacc.yy"
    {
          if (Lex->part_info->part_field_list.push_back((yyvsp[0].lex_str).str))
          {
            mem_alloc_error(1);
            YYABORT;
          }
        }
    break;

  case 409:
#line 3432 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          uint expr_len= (uint)((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)) - 1;
          lex->part_info->list_of_part_fields= FALSE;
          lex->part_info->part_expr= (yyvsp[-2].item);
          lex->part_info->part_func_string= (char* ) sql_memdup((yyvsp[-3].simple_string)+1, expr_len);
          lex->part_info->part_func_len= expr_len;
        }
    break;

  case 410:
#line 3444 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          uint expr_len= (uint)((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)) - 1;
          lex->part_info->list_of_subpart_fields= FALSE;
          lex->part_info->subpart_expr= (yyvsp[-2].item);
          lex->part_info->subpart_func_string= (char* ) sql_memdup((yyvsp[-3].simple_string)+1, expr_len);        
          lex->part_info->subpart_func_len= expr_len;
        }
    break;

  case 411:
#line 3456 "sql_yacc.yy"
    {}
    break;

  case 412:
#line 3458 "sql_yacc.yy"
    { 
          uint no_parts= (yyvsp[0].ulong_num);
          LEX *lex= Lex;
          if (no_parts == 0)
          {
            my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
            YYABORT;
          }

          lex->part_info->no_parts= no_parts;
          lex->part_info->use_default_no_partitions= FALSE;
        }
    break;

  case 413:
#line 3473 "sql_yacc.yy"
    {}
    break;

  case 414:
#line 3475 "sql_yacc.yy"
    { Lex->part_info->subpart_type= HASH_PARTITION; }
    break;

  case 415:
#line 3476 "sql_yacc.yy"
    {}
    break;

  case 416:
#line 3479 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->part_info->subpart_type= HASH_PARTITION;
          lex->part_info->list_of_subpart_fields= TRUE;
        }
    break;

  case 417:
#line 3484 "sql_yacc.yy"
    {}
    break;

  case 418:
#line 3488 "sql_yacc.yy"
    {}
    break;

  case 419:
#line 3489 "sql_yacc.yy"
    {}
    break;

  case 420:
#line 3494 "sql_yacc.yy"
    {
          if (Lex->part_info->subpart_field_list.push_back((yyvsp[0].lex_str).str))
          {
            mem_alloc_error(1);
            YYABORT;
          }
        }
    break;

  case 421:
#line 3505 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          bool not_corr_func;
          not_corr_func= !lex->safe_to_cache_query;
          lex->safe_to_cache_query= 1;
          if (not_corr_func)
          {
            yyerror(ER(ER_CONST_EXPR_IN_PARTITION_FUNC_ERROR));
            YYABORT;
          }
          (yyval.item)=(yyvsp[0].item);
        }
    break;

  case 422:
#line 3520 "sql_yacc.yy"
    {}
    break;

  case 423:
#line 3522 "sql_yacc.yy"
    {
          uint no_parts= (yyvsp[0].ulong_num);
          LEX *lex= Lex;
          if (no_parts == 0)
          {
            my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
            YYABORT;
          }
          lex->part_info->no_subparts= no_parts;
          lex->part_info->use_default_no_subpartitions= FALSE;
        }
    break;

  case 424:
#line 3537 "sql_yacc.yy"
    {}
    break;

  case 425:
#line 3539 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          partition_info *part_info= lex->part_info;
          uint count_curr_parts= part_info->partitions.elements;
          if (part_info->no_parts != 0)
          {
            if (part_info->no_parts !=
                count_curr_parts)
            {
              yyerror(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
              YYABORT;
            }
          }
          else if (count_curr_parts > 0)
          {
            part_info->no_parts= count_curr_parts;
          }
          part_info->count_curr_subparts= 0;
        }
    break;

  case 426:
#line 3561 "sql_yacc.yy"
    {}
    break;

  case 427:
#line 3562 "sql_yacc.yy"
    {}
    break;

  case 428:
#line 3567 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          partition_info *part_info= lex->part_info;
          partition_element *p_elem= new partition_element();
          uint part_id= part_info->partitions.elements +
                        part_info->temp_partitions.elements;
          enum partition_state part_state;

          if (part_info->part_state)
            part_state= (enum partition_state)part_info->part_state[part_id];
          else
            part_state= PART_NORMAL;
          switch (part_state)
          {
            case PART_TO_BE_DROPPED:
            /*
              This part is currently removed so we keep it in a
              temporary list for REPAIR TABLE to be able to handle
              failures during drop partition process.
            */
            case PART_TO_BE_ADDED:
            /*
              This part is currently being added so we keep it in a
              temporary list for REPAIR TABLE to be able to handle
              failures during add partition process.
            */
              if (!p_elem || part_info->temp_partitions.push_back(p_elem))
              {
                mem_alloc_error(sizeof(partition_element));
                YYABORT;
              }
              break;
            case PART_IS_ADDED:
            /*
              Part has been added and is now a normal partition
            */
            case PART_TO_BE_REORGED:
            /*
              This part is currently reorganised, it is still however
              used so we keep it in the list of partitions. We do
              however need the state to be able to handle REPAIR TABLE
              after failures in the reorganisation process.
            */
            case PART_REORGED_DROPPED:
            /*
              This part is currently reorganised as part of a
              COALESCE PARTITION and it will be dropped without a new
              replacement partition after completing the reorganisation.
            */
            case PART_CHANGED:
            /*
              This part is currently split or merged as part of ADD
              PARTITION for a hash partition or as part of COALESCE
              PARTITION for a hash partitioned table.
            */
            case PART_IS_CHANGED:
            /*
              This part has been split or merged as part of ADD
              PARTITION for a hash partition or as part of COALESCE
              PARTITION for a hash partitioned table.
            */
            case PART_NORMAL:
              if (!p_elem || part_info->partitions.push_back(p_elem))
              {
                mem_alloc_error(sizeof(partition_element));
                YYABORT;
              }
              break;
            default:
              mem_alloc_error((part_id * 1000) + part_state);
              YYABORT;
          }
          p_elem->part_state= part_state;
          part_info->curr_part_elem= p_elem;
          part_info->current_partition= p_elem;
          part_info->use_default_partitions= FALSE;
          part_info->use_default_no_partitions= FALSE;
        }
    break;

  case 429:
#line 3645 "sql_yacc.yy"
    {}
    break;

  case 430:
#line 3646 "sql_yacc.yy"
    {}
    break;

  case 431:
#line 3647 "sql_yacc.yy"
    {}
    break;

  case 432:
#line 3648 "sql_yacc.yy"
    {}
    break;

  case 433:
#line 3653 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          partition_info *part_info= lex->part_info;
          partition_element *p_elem= part_info->curr_part_elem;
          p_elem->partition_name= (yyvsp[0].lex_str).str;
        }
    break;

  case 434:
#line 3663 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (!is_partition_management(lex))
          {
            if (lex->part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
              "RANGE", "LESS THAN");
              YYABORT;
            }
            if (lex->part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
              "LIST", "IN");
              YYABORT;
            }
          }
          else
            lex->part_info->part_type= HASH_PARTITION;
        }
    break;

  case 435:
#line 3684 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (!is_partition_management(lex))
          {
            if (Lex->part_info->part_type != RANGE_PARTITION)
            {
              my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
              "RANGE", "LESS THAN");
              YYABORT;
            }
          }
          else
            lex->part_info->part_type= RANGE_PARTITION;
        }
    break;

  case 436:
#line 3699 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (!is_partition_management(lex))
          {
            if (Lex->part_info->part_type != LIST_PARTITION)
            {
              my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
              "LIST", "IN");
              YYABORT;
            }
          }
          else
            lex->part_info->part_type= LIST_PARTITION;
        }
    break;

  case 437:
#line 3717 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->part_info->defined_max_value)
          {
            yyerror(ER(ER_PARTITION_MAXVALUE_ERROR));
            YYABORT;
          }
          lex->part_info->defined_max_value= TRUE;
          lex->part_info->curr_part_elem->range_value= LONGLONG_MAX;
        }
    break;

  case 438:
#line 3728 "sql_yacc.yy"
    {
          if (Lex->part_info->defined_max_value)
          {
            yyerror(ER(ER_PARTITION_MAXVALUE_ERROR));
            YYABORT;
          }
        }
    break;

  case 439:
#line 3739 "sql_yacc.yy"
    {
          Lex->part_info->curr_part_elem->range_value= (yyvsp[-1].p_elem_value)->value;
        }
    break;

  case 440:
#line 3745 "sql_yacc.yy"
    {}
    break;

  case 441:
#line 3746 "sql_yacc.yy"
    {}
    break;

  case 442:
#line 3751 "sql_yacc.yy"
    {
          part_elem_value *value_ptr= (yyvsp[0].p_elem_value);
          if (!value_ptr->null_value &&
             Lex->part_info->curr_part_elem->
              list_val_list.push_back((longlong*) &value_ptr->value))
          {
            mem_alloc_error(sizeof(part_elem_value));
            YYABORT;
          }
        }
    break;

  case 443:
#line 3765 "sql_yacc.yy"
    {
          Item *part_expr= (yyvsp[0].item);
          bool not_corr_func;
          LEX *lex= Lex;
          THD *thd= YYTHD;
          longlong item_value;
          Name_resolution_context *context= &lex->current_select->context;
          TABLE_LIST *save_list= context->table_list;
          const char *save_where= thd->where;

          context->table_list= 0;
          thd->where= "partition function";

          part_elem_value *value_ptr= 
            (part_elem_value*)sql_alloc(sizeof(part_elem_value));
          if (!value_ptr)
          {
            mem_alloc_error(sizeof(part_elem_value));
            YYABORT;
          }

          if (part_expr->fix_fields(YYTHD, (Item**)0) ||
              ((context->table_list= save_list), FALSE) ||
              (!part_expr->const_item()) ||
              (!lex->safe_to_cache_query))
          {
            yyerror(ER(ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR));
            YYABORT;
          }
          thd->where= save_where;
          value_ptr->value= part_expr->val_int();
          if ((value_ptr->null_value= part_expr->null_value))
          {
            if (Lex->part_info->curr_part_elem->has_null_value)
            {
              my_error(ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR, MYF(0));
              YYABORT;
            }
            Lex->part_info->curr_part_elem->has_null_value= TRUE;
          }
          else if (part_expr->result_type() != INT_RESULT &&
                   !part_expr->null_value)
          {
            yyerror(ER(ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR));
            YYABORT;
          }
          (yyval.p_elem_value)= value_ptr; 
        }
    break;

  case 444:
#line 3817 "sql_yacc.yy"
    {
          if (Lex->part_info->no_subparts != 0 &&
              !Lex->part_info->use_default_subpartitions)
          {
            yyerror(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
            YYABORT;
          }
        }
    break;

  case 445:
#line 3826 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          partition_info *part_info= lex->part_info;
          if (part_info->no_subparts != 0)
          {
            if (part_info->no_subparts !=
                part_info->count_curr_subparts)
            {
              yyerror(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              YYABORT;
            }
          }
          else if (part_info->count_curr_subparts > 0)
          {
            if (part_info->partitions.elements > 1)
            {
              yyerror(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              YYABORT;
            }
            part_info->no_subparts= part_info->count_curr_subparts;
          }
          part_info->count_curr_subparts= 0;
        }
    break;

  case 446:
#line 3852 "sql_yacc.yy"
    {}
    break;

  case 447:
#line 3853 "sql_yacc.yy"
    {}
    break;

  case 448:
#line 3858 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          partition_info *part_info= lex->part_info;
          partition_element *p_elem= new partition_element();
          if (!p_elem ||
           part_info->current_partition->subpartitions.push_back(p_elem))
          {
            mem_alloc_error(sizeof(partition_element));
            YYABORT;
          }
          part_info->curr_part_elem= p_elem;
          part_info->use_default_subpartitions= FALSE;
          part_info->use_default_no_subpartitions= FALSE;
          part_info->count_curr_subparts++;
        }
    break;

  case 449:
#line 3873 "sql_yacc.yy"
    {}
    break;

  case 450:
#line 3878 "sql_yacc.yy"
    { Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str; }
    break;

  case 451:
#line 3882 "sql_yacc.yy"
    {}
    break;

  case 452:
#line 3883 "sql_yacc.yy"
    {}
    break;

  case 453:
#line 3887 "sql_yacc.yy"
    {}
    break;

  case 454:
#line 3888 "sql_yacc.yy"
    {}
    break;

  case 455:
#line 3893 "sql_yacc.yy"
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
    break;

  case 456:
#line 3895 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
          lex->part_info->default_engine_type= (yyvsp[0].db_type);
        }
    break;

  case 457:
#line 3901 "sql_yacc.yy"
    { Lex->part_info->curr_part_elem->nodegroup_id= (yyvsp[0].ulong_num); }
    break;

  case 458:
#line 3903 "sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_max_rows= (yyvsp[0].ulonglong_number); }
    break;

  case 459:
#line 3905 "sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_min_rows= (yyvsp[0].ulonglong_number); }
    break;

  case 460:
#line 3907 "sql_yacc.yy"
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
    break;

  case 461:
#line 3909 "sql_yacc.yy"
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
    break;

  case 462:
#line 3911 "sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
    break;

  case 463:
#line 3920 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->lock_option= using_update_log ? TL_READ_NO_INSERT : TL_READ;
	    if (lex->sql_command == SQLCOM_INSERT)
	      lex->sql_command= SQLCOM_INSERT_SELECT;
	    else if (lex->sql_command == SQLCOM_REPLACE)
	      lex->sql_command= SQLCOM_REPLACE_SELECT;
	    /*
              The following work only with the local list, the global list
              is created correctly in this case
	    */
	    lex->current_select->table_list.save_and_clear(&lex->save_list);
	    mysql_init_select(lex);
	    lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 464:
#line 3936 "sql_yacc.yy"
    {
	    Select->parsing_place= NO_MATTER;
	  }
    break;

  case 465:
#line 3940 "sql_yacc.yy"
    {
	    /*
              The following work only with the local list, the global list
              is created correctly in this case
	    */
	    Lex->current_select->table_list.push_front(&Lex->save_list);
	  }
    break;

  case 466:
#line 3950 "sql_yacc.yy"
    {}
    break;

  case 467:
#line 3951 "sql_yacc.yy"
    {}
    break;

  case 468:
#line 3954 "sql_yacc.yy"
    {}
    break;

  case 469:
#line 3955 "sql_yacc.yy"
    {}
    break;

  case 470:
#line 3958 "sql_yacc.yy"
    {}
    break;

  case 471:
#line 3959 "sql_yacc.yy"
    {}
    break;

  case 472:
#line 3962 "sql_yacc.yy"
    {}
    break;

  case 473:
#line 3963 "sql_yacc.yy"
    {}
    break;

  case 474:
#line 3966 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 475:
#line 3967 "sql_yacc.yy"
    { (yyval.num)= (yyvsp[0].num);}
    break;

  case 476:
#line 3970 "sql_yacc.yy"
    { (yyval.num)=(yyvsp[0].num); }
    break;

  case 477:
#line 3971 "sql_yacc.yy"
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
    break;

  case 478:
#line 3974 "sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 479:
#line 3977 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 480:
#line 3978 "sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 488:
#line 3994 "sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[0].db_type); Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE; }
    break;

  case 489:
#line 3996 "sql_yacc.yy"
    {
            Lex->create_info.db_type= (yyvsp[0].db_type);
            WARN_DEPRECATED(yythd, "5.2", "TYPE=storage_engine",
                            "'ENGINE=storage_engine'");
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
    break;

  case 490:
#line 4002 "sql_yacc.yy"
    { Lex->create_info.max_rows= (yyvsp[0].ulonglong_number); Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;}
    break;

  case 491:
#line 4003 "sql_yacc.yy"
    { Lex->create_info.min_rows= (yyvsp[0].ulonglong_number); Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;}
    break;

  case 492:
#line 4004 "sql_yacc.yy"
    { Lex->create_info.avg_row_length=(yyvsp[0].ulong_num); Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;}
    break;

  case 493:
#line 4005 "sql_yacc.yy"
    { Lex->create_info.password=(yyvsp[0].lex_str).str; Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD; }
    break;

  case 494:
#line 4006 "sql_yacc.yy"
    { Lex->create_info.comment=(yyvsp[0].lex_str).str; Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT; }
    break;

  case 495:
#line 4007 "sql_yacc.yy"
    { Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number); Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;}
    break;

  case 496:
#line 4009 "sql_yacc.yy"
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                yyerror(ER(ER_SYNTAX_ERROR));
                YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 497:
#line 4024 "sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 498:
#line 4029 "sql_yacc.yy"
    { Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM; Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM; }
    break;

  case 499:
#line 4030 "sql_yacc.yy"
    { Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;  Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE; }
    break;

  case 500:
#line 4031 "sql_yacc.yy"
    { Lex->create_info.row_type= (yyvsp[0].row_type);  Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT; }
    break;

  case 501:
#line 4033 "sql_yacc.yy"
    {
	    /* Move the union list to the merge_list */
	    LEX *lex=Lex;
	    TABLE_LIST *table_list= lex->select_lex.get_table_list();
	    lex->create_info.merge_list= lex->select_lex.table_list;
	    lex->create_info.merge_list.elements--;
	    lex->create_info.merge_list.first=
	      (byte*) (table_list->next_local);
	    lex->select_lex.table_list.elements=1;
	    lex->select_lex.table_list.next=
	      (byte**) &(table_list->next_local);
	    table_list->next_local= 0;
	    lex->create_info.used_fields|= HA_CREATE_USED_UNION;
	  }
    break;

  case 504:
#line 4049 "sql_yacc.yy"
    { Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num); Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;}
    break;

  case 505:
#line 4050 "sql_yacc.yy"
    { Lex->create_info.data_file_name= (yyvsp[0].lex_str).str; Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR; }
    break;

  case 506:
#line 4051 "sql_yacc.yy"
    { Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;  Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR; }
    break;

  case 507:
#line 4052 "sql_yacc.yy"
    {Lex->create_info.tablespace= (yyvsp[0].lex_str).str;}
    break;

  case 508:
#line 4053 "sql_yacc.yy"
    {Lex->create_info.store_on_disk= TRUE;}
    break;

  case 509:
#line 4054 "sql_yacc.yy"
    {Lex->create_info.store_on_disk= FALSE;}
    break;

  case 510:
#line 4055 "sql_yacc.yy"
    { Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str; Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;  Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION; }
    break;

  case 511:
#line 4060 "sql_yacc.yy"
    {
          HA_CREATE_INFO *cinfo= &Lex->create_info;
          if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
               cinfo->default_table_charset && (yyvsp[0].charset) &&
               !my_charset_same(cinfo->default_table_charset,(yyvsp[0].charset)))
          {
            my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                     "CHARACTER SET ", cinfo->default_table_charset->csname,
                     "CHARACTER SET ", (yyvsp[0].charset)->csname);
            YYABORT;
          }
	  Lex->create_info.default_table_charset= (yyvsp[0].charset);
          Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
        }
    break;

  case 512:
#line 4077 "sql_yacc.yy"
    {
          HA_CREATE_INFO *cinfo= &Lex->create_info;
          if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
               cinfo->default_table_charset && (yyvsp[0].charset) &&
               !my_charset_same(cinfo->default_table_charset,(yyvsp[0].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[0].charset)->name, cinfo->default_table_charset->csname);
              YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
        }
    break;

  case 513:
#line 4093 "sql_yacc.yy"
    {
	  (yyval.db_type) = ha_resolve_by_name(YYTHD, &(yyvsp[0].lex_str));
	  if ((yyval.db_type) == NULL &&
	      test(YYTHD->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION))
	  {
	    my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str);
	    YYABORT;
	  }
	}
    break;

  case 514:
#line 4104 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 515:
#line 4105 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 516:
#line 4106 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 517:
#line 4107 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 518:
#line 4108 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 519:
#line 4109 "sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 520:
#line 4112 "sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 521:
#line 4113 "sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 522:
#line 4114 "sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 523:
#line 4117 "sql_yacc.yy"
    {}
    break;

  case 525:
#line 4121 "sql_yacc.yy"
    { (yyval.udf_type) = UDFTYPE_FUNCTION; }
    break;

  case 526:
#line 4122 "sql_yacc.yy"
    { (yyval.udf_type) = UDFTYPE_AGGREGATE; }
    break;

  case 527:
#line 4125 "sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 528:
#line 4126 "sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 529:
#line 4127 "sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 530:
#line 4128 "sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 536:
#line 4143 "sql_yacc.yy"
    {
	    Lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 537:
#line 4150 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if ((yyvsp[-6].key_type) != Key::FULLTEXT && (yyvsp[0].lex_str_ptr))
	    {
	      yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
	    }
	    lex->key_list.push_back(new Key((yyvsp[-6].key_type),(yyvsp[-5].simple_string), (yyvsp[-4].key_alg), 0, lex->col_list, (yyvsp[0].lex_str_ptr)));
	    lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 538:
#line 4161 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    const char *key_name= (yyvsp[-4].simple_string) ? (yyvsp[-4].simple_string):(yyvsp[-6].simple_string);
	    lex->key_list.push_back(new Key((yyvsp[-5].key_type), key_name, (yyvsp[-3].key_alg), 0,
				    lex->col_list));
	    lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 539:
#line 4169 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->key_list.push_back(new foreign_key((yyvsp[-4].simple_string) ? (yyvsp[-4].simple_string):(yyvsp[-7].simple_string), lex->col_list,
				    (yyvsp[0].table),
				    lex->ref_list,
				    lex->fk_delete_opt,
				    lex->fk_update_opt,
				    lex->fk_match_option));
	    lex->key_list.push_back(new Key(Key::MULTIPLE, (yyvsp[-4].simple_string) ? (yyvsp[-4].simple_string) : (yyvsp[-7].simple_string),
					    HA_KEY_ALG_UNDEF, 1,
					    lex->col_list));
	    lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 540:
#line 4183 "sql_yacc.yy"
    {
	    Lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 541:
#line 4187 "sql_yacc.yy"
    {
	    Lex->col_list.empty();		/* Alloced by sql_alloc */
	  }
    break;

  case 542:
#line 4193 "sql_yacc.yy"
    { (yyval.lex_str_ptr)= (LEX_STRING *)0; }
    break;

  case 543:
#line 4195 "sql_yacc.yy"
    {
            if (plugin_is_ready(&(yyvsp[0].lex_str), MYSQL_FTPARSER_PLUGIN))
              (yyval.lex_str_ptr)= (LEX_STRING *)sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING));
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lex_str).str);
              YYABORT;
            }
          }
    break;

  case 547:
#line 4216 "sql_yacc.yy"
    { (yyval.simple_string)=(char*) 0; }
    break;

  case 548:
#line 4217 "sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[0].simple_string); }
    break;

  case 549:
#line 4221 "sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[0].simple_string); }
    break;

  case 550:
#line 4226 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->length=lex->dec=0; lex->type=0;
	   lex->default_value= lex->on_update_value= 0;
           lex->comment=null_lex_str;
	   lex->charset=NULL;
	 }
    break;

  case 551:
#line 4234 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (add_field_to_list(lex->thd, (yyvsp[-3].lex_str).str,
				(enum enum_field_types) (yyvsp[-1].num),
				lex->length,lex->dec,lex->type,
				lex->default_value, lex->on_update_value, 
                                &lex->comment,
				lex->change,&lex->interval_list,lex->charset,
				lex->uint_geom_type))
	    YYABORT;
	}
    break;

  case 552:
#line 4247 "sql_yacc.yy"
    { (yyval.num)=(yyvsp[-2].num); }
    break;

  case 553:
#line 4248 "sql_yacc.yy"
    { (yyval.num)=(yyvsp[-2].num); }
    break;

  case 554:
#line 4249 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_FLOAT; }
    break;

  case 555:
#line 4250 "sql_yacc.yy"
    { Lex->length= (char*) "1";
					  (yyval.num)=FIELD_TYPE_BIT; }
    break;

  case 556:
#line 4252 "sql_yacc.yy"
    { Lex->length= (yyvsp[-1].lex_str).str;
					  (yyval.num)=FIELD_TYPE_BIT; }
    break;

  case 557:
#line 4254 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  (yyval.num)=FIELD_TYPE_TINY; }
    break;

  case 558:
#line 4256 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  (yyval.num)=FIELD_TYPE_TINY; }
    break;

  case 559:
#line 4258 "sql_yacc.yy"
    { Lex->length=(yyvsp[-2].lex_str).str;
					  (yyval.num)=FIELD_TYPE_STRING; }
    break;

  case 560:
#line 4260 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  (yyval.num)=FIELD_TYPE_STRING; }
    break;

  case 561:
#line 4262 "sql_yacc.yy"
    { Lex->length=(yyvsp[-2].lex_str).str;
					  (yyval.num)=FIELD_TYPE_STRING;
					  Lex->charset=national_charset_info; }
    break;

  case 562:
#line 4265 "sql_yacc.yy"
    { Lex->length=(char*) "1";
					  (yyval.num)=FIELD_TYPE_STRING;
					  Lex->charset=national_charset_info; }
    break;

  case 563:
#line 4268 "sql_yacc.yy"
    { Lex->length=(yyvsp[-1].lex_str).str;
					  Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_STRING; }
    break;

  case 564:
#line 4271 "sql_yacc.yy"
    { Lex->length= (char*) "1";
					  Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_STRING; }
    break;

  case 565:
#line 4274 "sql_yacc.yy"
    { Lex->length=(yyvsp[-2].lex_str).str;
					  (yyval.num)= MYSQL_TYPE_VARCHAR; }
    break;

  case 566:
#line 4276 "sql_yacc.yy"
    { Lex->length=(yyvsp[-2].lex_str).str;
					  (yyval.num)= MYSQL_TYPE_VARCHAR;
					  Lex->charset=national_charset_info; }
    break;

  case 567:
#line 4279 "sql_yacc.yy"
    { Lex->length=(yyvsp[-1].lex_str).str;
					  Lex->charset=&my_charset_bin;
					  (yyval.num)= MYSQL_TYPE_VARCHAR; }
    break;

  case 568:
#line 4282 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_YEAR; }
    break;

  case 569:
#line 4283 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_DATE; }
    break;

  case 570:
#line 4284 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_TIME; }
    break;

  case 571:
#line 4286 "sql_yacc.yy"
    {
	    if (YYTHD->variables.sql_mode & MODE_MAXDB)
	      (yyval.num)=FIELD_TYPE_DATETIME;
	    else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
              */
              Lex->type|= NOT_NULL_FLAG;
	      (yyval.num)=FIELD_TYPE_TIMESTAMP;
            }
	   }
    break;

  case 572:
#line 4298 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_DATETIME; }
    break;

  case 573:
#line 4299 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_TINY_BLOB; }
    break;

  case 574:
#line 4301 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_BLOB; }
    break;

  case 575:
#line 4304 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[0].num);
            (yyval.num)=FIELD_TYPE_GEOMETRY;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            YYABORT;
#endif
          }
    break;

  case 576:
#line 4315 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 577:
#line 4317 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_LONG_BLOB; }
    break;

  case 578:
#line 4319 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin;
					  (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 579:
#line 4321 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 580:
#line 4322 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_TINY_BLOB; }
    break;

  case 581:
#line 4323 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_BLOB; }
    break;

  case 582:
#line 4324 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 583:
#line 4325 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_LONG_BLOB; }
    break;

  case 584:
#line 4327 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_NEWDECIMAL;}
    break;

  case 585:
#line 4329 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_NEWDECIMAL;}
    break;

  case 586:
#line 4331 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_NEWDECIMAL;}
    break;

  case 587:
#line 4332 "sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 588:
#line 4333 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_ENUM; }
    break;

  case 589:
#line 4334 "sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 590:
#line 4335 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_SET; }
    break;

  case 591:
#line 4336 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_MEDIUM_BLOB; }
    break;

  case 592:
#line 4338 "sql_yacc.yy"
    {
	    (yyval.num)=FIELD_TYPE_LONGLONG;
	    Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
		         UNIQUE_FLAG);
	  }
    break;

  case 593:
#line 4346 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRY; }
    break;

  case 594:
#line 4347 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 595:
#line 4348 "sql_yacc.yy"
    { Lex->length= (char*)"21";
                                (yyval.num)= Field::GEOM_POINT;
                              }
    break;

  case 596:
#line 4351 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
    break;

  case 597:
#line 4352 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_LINESTRING; }
    break;

  case 598:
#line 4353 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
    break;

  case 599:
#line 4354 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_POLYGON; }
    break;

  case 600:
#line 4355 "sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
    break;

  case 601:
#line 4359 "sql_yacc.yy"
    {}
    break;

  case 602:
#line 4363 "sql_yacc.yy"
    {}
    break;

  case 603:
#line 4364 "sql_yacc.yy"
    {}
    break;

  case 604:
#line 4368 "sql_yacc.yy"
    {}
    break;

  case 605:
#line 4369 "sql_yacc.yy"
    {}
    break;

  case 606:
#line 4373 "sql_yacc.yy"
    {}
    break;

  case 607:
#line 4374 "sql_yacc.yy"
    {}
    break;

  case 608:
#line 4375 "sql_yacc.yy"
    {}
    break;

  case 609:
#line 4376 "sql_yacc.yy"
    {}
    break;

  case 610:
#line 4377 "sql_yacc.yy"
    {}
    break;

  case 611:
#line 4381 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_LONG; }
    break;

  case 612:
#line 4382 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_TINY; }
    break;

  case 613:
#line 4383 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_SHORT; }
    break;

  case 614:
#line 4384 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_INT24; }
    break;

  case 615:
#line 4385 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_LONGLONG; }
    break;

  case 616:
#line 4388 "sql_yacc.yy"
    { (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
			      FIELD_TYPE_FLOAT : FIELD_TYPE_DOUBLE; }
    break;

  case 617:
#line 4390 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_DOUBLE; }
    break;

  case 618:
#line 4391 "sql_yacc.yy"
    { (yyval.num)=FIELD_TYPE_DOUBLE; }
    break;

  case 619:
#line 4395 "sql_yacc.yy"
    { Lex->dec=Lex->length= (char*)0; }
    break;

  case 620:
#line 4396 "sql_yacc.yy"
    { Lex->length=(yyvsp[-1].lex_str).str; Lex->dec= (char*)0; }
    break;

  case 621:
#line 4397 "sql_yacc.yy"
    {}
    break;

  case 622:
#line 4401 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->length=(yyvsp[-3].lex_str).str; lex->dec=(yyvsp[-1].lex_str).str;
	}
    break;

  case 623:
#line 4407 "sql_yacc.yy"
    {}
    break;

  case 624:
#line 4408 "sql_yacc.yy"
    {}
    break;

  case 625:
#line 4411 "sql_yacc.yy"
    {}
    break;

  case 626:
#line 4412 "sql_yacc.yy"
    {}
    break;

  case 627:
#line 4415 "sql_yacc.yy"
    {}
    break;

  case 628:
#line 4416 "sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 629:
#line 4417 "sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 630:
#line 4420 "sql_yacc.yy"
    { Lex->length=(char*) 0; }
    break;

  case 631:
#line 4421 "sql_yacc.yy"
    { Lex->length= (yyvsp[-1].lex_str).str; }
    break;

  case 632:
#line 4424 "sql_yacc.yy"
    {}
    break;

  case 633:
#line 4425 "sql_yacc.yy"
    {}
    break;

  case 634:
#line 4428 "sql_yacc.yy"
    {}
    break;

  case 635:
#line 4429 "sql_yacc.yy"
    {}
    break;

  case 636:
#line 4432 "sql_yacc.yy"
    {}
    break;

  case 638:
#line 4436 "sql_yacc.yy"
    { Lex->type&= ~ NOT_NULL_FLAG; }
    break;

  case 639:
#line 4437 "sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 640:
#line 4438 "sql_yacc.yy"
    { Lex->default_value=(yyvsp[0].item); }
    break;

  case 641:
#line 4440 "sql_yacc.yy"
    { Lex->on_update_value= new Item_func_now_local(); }
    break;

  case 642:
#line 4441 "sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 643:
#line 4443 "sql_yacc.yy"
    { 
	    LEX *lex=Lex;
	    lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 644:
#line 4449 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 645:
#line 4455 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->type|= UNIQUE_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 646:
#line 4461 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->type|= UNIQUE_KEY_FLAG; 
	    lex->alter_info.flags|= ALTER_ADD_INDEX; 
	  }
    break;

  case 647:
#line 4466 "sql_yacc.yy"
    { Lex->comment= (yyvsp[0].lex_str); }
    break;

  case 648:
#line 4468 "sql_yacc.yy"
    {
	    if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset)))
	    {
	      my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[0].charset)->name,Lex->charset->csname);
	      YYABORT;
	    }
	    else
	    {
	      Lex->charset=(yyvsp[0].charset);
	    }
	  }
    break;

  case 649:
#line 4483 "sql_yacc.yy"
    { (yyval.item)= new Item_func_now_local(); }
    break;

  case 650:
#line 4484 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 651:
#line 4488 "sql_yacc.yy"
    {}
    break;

  case 652:
#line 4489 "sql_yacc.yy"
    {}
    break;

  case 653:
#line 4494 "sql_yacc.yy"
    {
	  if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str);
	    YYABORT;
	  }
	}
    break;

  case 654:
#line 4501 "sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 655:
#line 4505 "sql_yacc.yy"
    { (yyval.charset)=(yyvsp[0].charset);   }
    break;

  case 656:
#line 4506 "sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 657:
#line 4511 "sql_yacc.yy"
    {
	  if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
	      !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str)))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str);
	    YYABORT;
	  }
	}
    break;

  case 658:
#line 4519 "sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 659:
#line 4523 "sql_yacc.yy"
    { (yyval.charset)=(yyvsp[0].charset);   }
    break;

  case 660:
#line 4524 "sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 661:
#line 4528 "sql_yacc.yy"
    {
	  if (!((yyval.charset)=get_charset_by_name((yyvsp[0].lex_str).str,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_COLLATION, MYF(0), (yyvsp[0].lex_str).str);
	    YYABORT;
	  }
	}
    break;

  case 662:
#line 4537 "sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 663:
#line 4538 "sql_yacc.yy"
    { (yyval.charset)=(yyvsp[0].charset); }
    break;

  case 664:
#line 4542 "sql_yacc.yy"
    { (yyval.charset)=(yyvsp[0].charset);   }
    break;

  case 665:
#line 4543 "sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 666:
#line 4546 "sql_yacc.yy"
    {}
    break;

  case 667:
#line 4547 "sql_yacc.yy"
    {}
    break;

  case 668:
#line 4550 "sql_yacc.yy"
    { Lex->charset=NULL; }
    break;

  case 669:
#line 4551 "sql_yacc.yy"
    { Lex->charset=&my_charset_latin1; }
    break;

  case 670:
#line 4552 "sql_yacc.yy"
    { Lex->charset=&my_charset_bin; }
    break;

  case 671:
#line 4554 "sql_yacc.yy"
    {
	  if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                   MY_CS_PRIMARY,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
	    YYABORT;
	  }
	}
    break;

  case 672:
#line 4562 "sql_yacc.yy"
    { Lex->charset=(yyvsp[-1].charset); }
    break;

  case 673:
#line 4563 "sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 674:
#line 4566 "sql_yacc.yy"
    { }
    break;

  case 675:
#line 4567 "sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 676:
#line 4570 "sql_yacc.yy"
    { }
    break;

  case 677:
#line 4571 "sql_yacc.yy"
    { Lex->charset=&my_charset_latin1; }
    break;

  case 678:
#line 4573 "sql_yacc.yy"
    {
	  if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                   MY_CS_PRIMARY,MYF(0))))
	  {
	    my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
	    YYABORT;
	  }
	}
    break;

  case 679:
#line 4581 "sql_yacc.yy"
    { Lex->charset=(yyvsp[0].charset); }
    break;

  case 682:
#line 4590 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->fk_delete_opt= lex->fk_update_opt= lex->fk_match_option= 0;
	  lex->ref_list.empty();
	}
    break;

  case 683:
#line 4596 "sql_yacc.yy"
    {
	  (yyval.table)=(yyvsp[-2].table);
	}
    break;

  case 684:
#line 4601 "sql_yacc.yy"
    {}
    break;

  case 685:
#line 4602 "sql_yacc.yy"
    {}
    break;

  case 686:
#line 4605 "sql_yacc.yy"
    { Lex->ref_list.push_back(new key_part_spec((yyvsp[0].lex_str).str)); }
    break;

  case 687:
#line 4606 "sql_yacc.yy"
    { Lex->ref_list.push_back(new key_part_spec((yyvsp[0].lex_str).str)); }
    break;

  case 688:
#line 4610 "sql_yacc.yy"
    {}
    break;

  case 689:
#line 4611 "sql_yacc.yy"
    {}
    break;

  case 690:
#line 4614 "sql_yacc.yy"
    {}
    break;

  case 691:
#line 4615 "sql_yacc.yy"
    {}
    break;

  case 692:
#line 4618 "sql_yacc.yy"
    { Lex->fk_delete_opt= (yyvsp[0].num); }
    break;

  case 693:
#line 4619 "sql_yacc.yy"
    { Lex->fk_update_opt= (yyvsp[0].num); }
    break;

  case 694:
#line 4620 "sql_yacc.yy"
    { Lex->fk_match_option= foreign_key::FK_MATCH_FULL; }
    break;

  case 695:
#line 4621 "sql_yacc.yy"
    { Lex->fk_match_option= foreign_key::FK_MATCH_PARTIAL; }
    break;

  case 696:
#line 4622 "sql_yacc.yy"
    { Lex->fk_match_option= foreign_key::FK_MATCH_SIMPLE; }
    break;

  case 697:
#line 4625 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_RESTRICT; }
    break;

  case 698:
#line 4626 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_CASCADE; }
    break;

  case 699:
#line 4627 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_SET_NULL; }
    break;

  case 700:
#line 4628 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_NO_ACTION; }
    break;

  case 701:
#line 4629 "sql_yacc.yy"
    { (yyval.num)= (int) foreign_key::FK_OPTION_DEFAULT;  }
    break;

  case 702:
#line 4632 "sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 703:
#line 4633 "sql_yacc.yy"
    { (yyval.key_type)= Key::FULLTEXT; }
    break;

  case 704:
#line 4635 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
	    (yyval.key_type)= Key::SPATIAL;
#else
	    my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
	    YYABORT;
#endif
	  }
    break;

  case 705:
#line 4646 "sql_yacc.yy"
    { (yyval.key_type)= Key::PRIMARY; }
    break;

  case 706:
#line 4647 "sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 707:
#line 4650 "sql_yacc.yy"
    {}
    break;

  case 708:
#line 4651 "sql_yacc.yy"
    {}
    break;

  case 709:
#line 4654 "sql_yacc.yy"
    {}
    break;

  case 711:
#line 4659 "sql_yacc.yy"
    {}
    break;

  case 712:
#line 4660 "sql_yacc.yy"
    {}
    break;

  case 713:
#line 4661 "sql_yacc.yy"
    {}
    break;

  case 714:
#line 4664 "sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 715:
#line 4665 "sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 716:
#line 4666 "sql_yacc.yy"
    { (yyval.key_type)= Key::FULLTEXT;}
    break;

  case 717:
#line 4668 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
	    (yyval.key_type)= Key::SPATIAL;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
	    YYABORT;
#endif
	  }
    break;

  case 718:
#line 4680 "sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
    break;

  case 719:
#line 4681 "sql_yacc.yy"
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
    break;

  case 720:
#line 4682 "sql_yacc.yy"
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
    break;

  case 721:
#line 4685 "sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 722:
#line 4687 "sql_yacc.yy"
    {
	    (yyval.key_alg)= HA_KEY_ALG_RTREE;
	  }
    break;

  case 723:
#line 4690 "sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 724:
#line 4693 "sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[-1].key_part)); }
    break;

  case 725:
#line 4694 "sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[-1].key_part)); }
    break;

  case 726:
#line 4697 "sql_yacc.yy"
    { (yyval.key_part)=new key_part_spec((yyvsp[0].lex_str).str); }
    break;

  case 727:
#line 4699 "sql_yacc.yy"
    {
          int key_part_len= atoi((yyvsp[-1].lex_str).str);
          if (!key_part_len)
          {
            my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-3].lex_str).str);
          }
          (yyval.key_part)=new key_part_spec((yyvsp[-3].lex_str).str,(uint) key_part_len);
        }
    break;

  case 728:
#line 4709 "sql_yacc.yy"
    { (yyval.simple_string)=(char*) 0; }
    break;

  case 729:
#line 4710 "sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[0].lex_str).str; }
    break;

  case 730:
#line 4713 "sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 731:
#line 4714 "sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
    break;

  case 732:
#line 4717 "sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[0].string)); }
    break;

  case 733:
#line 4718 "sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[0].string)); }
    break;

  case 734:
#line 4726 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
         lex->name= 0;
	  lex->sql_command= SQLCOM_ALTER_TABLE;
	  lex->duplicates= DUP_ERROR; 
	  if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL,
						 TL_OPTION_UPDATING))
	    YYABORT;
	  lex->create_list.empty();
	  lex->key_list.empty();
	  lex->col_list.empty();
          lex->select_lex.init_order();
	  lex->select_lex.db=lex->name= 0;
	  lex->like_name= 0;
	  bzero((char*) &lex->create_info,sizeof(lex->create_info));
	  lex->create_info.db_type= (handlerton*) &default_hton;
	  lex->create_info.default_table_charset= NULL;
	  lex->create_info.row_type= ROW_TYPE_NOT_USED;
	  lex->alter_info.reset();
	  lex->alter_info.flags= 0;
          lex->no_write_to_binlog= 0;
	}
    break;

  case 735:
#line 4750 "sql_yacc.yy"
    {}
    break;

  case 736:
#line 4752 "sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 737:
#line 4757 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command=SQLCOM_ALTER_DB;
	    lex->name= (yyvsp[-2].simple_string);
	  }
    break;

  case 738:
#line 4763 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
	      YYABORT;
	    }
	    bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
          }
    break;

  case 739:
#line 4774 "sql_yacc.yy"
    {
	    LEX *lex=Lex;

	    lex->sql_command= SQLCOM_ALTER_PROCEDURE;
	    lex->spname= (yyvsp[-2].spname);
	  }
    break;

  case 740:
#line 4781 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
	      YYABORT;
	    }
	    bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
          }
    break;

  case 741:
#line 4792 "sql_yacc.yy"
    {
	    LEX *lex=Lex;

	    lex->sql_command= SQLCOM_ALTER_FUNCTION;
	    lex->spname= (yyvsp[-2].spname);
	  }
    break;

  case 742:
#line 4800 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    LEX *lex= thd->lex;
	    lex->sql_command= SQLCOM_CREATE_VIEW;
	    lex->create_view_mode= VIEW_ALTER;
	    /* first table in list is target VIEW name */
	    lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0);
	  }
    break;

  case 743:
#line 4809 "sql_yacc.yy"
    {}
    break;

  case 744:
#line 4815 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            Event_timed *et;

            if (lex->et)
            {
              /*
                Recursive events are not possible because recursive SPs
                are not also possible. lex->sp_head is not stacked.
              */
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "EVENT");
              YYABORT;
            }
            lex->spname= 0;//defensive programming

            if (!(et= new (YYTHD->mem_root) Event_timed()))// implicitly calls Event_timed::init()
              YYABORT;
            lex->et = et;

            if (!lex->et_compile_phase)
            {
              et->init_definer(YYTHD);
              et->init_name(YYTHD, (yyvsp[0].spname));
            }

            /*
                We have to turn of CLIENT_MULTI_QUERIES while parsing a
                stored procedure, otherwise yylex will chop it into pieces
                at each ';'.
            */
            (yyval.ulong_num)= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
            YYTHD->client_capabilities &= ~CLIENT_MULTI_QUERIES;
          }
    break;

  case 745:
#line 4853 "sql_yacc.yy"
    {
            /*
              $1 - ALTER
              $2 - EVENT_SYM
              $3 - sp_name
              $4 - the block above
            */
            YYTHD->client_capabilities |= (yyvsp[-5].ulong_num);

            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
	      yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 746:
#line 4874 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
    break;

  case 747:
#line 4879 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
    break;

  case 748:
#line 4884 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
    break;

  case 749:
#line 4889 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
    break;

  case 750:
#line 4895 "sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 751:
#line 4896 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 752:
#line 4897 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 753:
#line 4898 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 754:
#line 4901 "sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 755:
#line 4903 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->spname= (yyvsp[0].spname); //use lex's spname to hold the new name
	                     //the original name is in the Event_timed object
            (yyval.num)= 1;
          }
    break;

  case 756:
#line 4911 "sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 757:
#line 4912 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 758:
#line 4917 "sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 759:
#line 4918 "sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[0].lex_str).str; }
    break;

  case 761:
#line 4921 "sql_yacc.yy"
    { Lex->alter_info.tablespace_op= DISCARD_TABLESPACE; }
    break;

  case 762:
#line 4922 "sql_yacc.yy"
    { Lex->alter_info.tablespace_op= IMPORT_TABLESPACE; }
    break;

  case 768:
#line 4939 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_DROP_PARTITION;
          }
    break;

  case 769:
#line 4944 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->alter_info.flags|= ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
    break;

  case 770:
#line 4951 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->alter_info.flags|= ALTER_OPTIMIZE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
          }
    break;

  case 772:
#line 4960 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->alter_info.flags|= ALTER_ANALYZE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
          }
    break;

  case 774:
#line 4968 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->alter_info.flags|= ALTER_CHECK_PARTITION;
            lex->check_opt.init();
          }
    break;

  case 776:
#line 4976 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->alter_info.flags|= ALTER_REPAIR_PARTITION;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
          }
    break;

  case 778:
#line 4984 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->alter_info.flags|= ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[-1].num);
	    lex->alter_info.no_parts= (yyvsp[0].ulong_num);
          }
    break;

  case 780:
#line 4995 "sql_yacc.yy"
    {
          Lex->alter_info.flags|= ALTER_REMOVE_PARTITIONING;
        }
    break;

  case 781:
#line 5002 "sql_yacc.yy"
    {
	  Lex->alter_info.flags|= ALTER_ALL_PARTITION;
        }
    break;

  case 783:
#line 5010 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->part_info= new partition_info();
          if (!lex->part_info)
          {
            mem_alloc_error(sizeof(partition_info));
            YYABORT;
          }
	  lex->alter_info.flags|= ALTER_ADD_PARTITION;
          lex->no_write_to_binlog= (yyvsp[0].num);
        }
    break;

  case 784:
#line 5022 "sql_yacc.yy"
    {}
    break;

  case 786:
#line 5027 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->part_info->no_parts= lex->part_info->partitions.elements;
        }
    break;

  case 787:
#line 5032 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->part_info->no_parts= (yyvsp[0].ulong_num);
        }
    break;

  case 788:
#line 5040 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->part_info= new partition_info();
          if (!lex->part_info)
          {
            mem_alloc_error(sizeof(partition_info));
            YYABORT;
          }
          lex->no_write_to_binlog= (yyvsp[0].num);
        }
    break;

  case 790:
#line 5055 "sql_yacc.yy"
    {
	  Lex->alter_info.flags|= ALTER_TABLE_REORG;
        }
    break;

  case 791:
#line 5060 "sql_yacc.yy"
    {
	  Lex->alter_info.flags|= ALTER_REORGANIZE_PARTITION;
        }
    break;

  case 792:
#line 5064 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->part_info->no_parts= lex->part_info->partitions.elements;
        }
    break;

  case 793:
#line 5071 "sql_yacc.yy"
    {}
    break;

  case 794:
#line 5072 "sql_yacc.yy"
    {}
    break;

  case 795:
#line 5077 "sql_yacc.yy"
    {
          if (Lex->alter_info.partition_names.push_back((yyvsp[0].lex_str).str))
          {
            mem_alloc_error(1);
            YYABORT;
          }
        }
    break;

  case 798:
#line 5097 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->change=0;
	  lex->alter_info.flags|= ALTER_ADD_COLUMN;
	}
    break;

  case 799:
#line 5104 "sql_yacc.yy"
    { }
    break;

  case 800:
#line 5106 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_ADD_INDEX;
	  }
    break;

  case 801:
#line 5110 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_ADD_COLUMN | ALTER_ADD_INDEX;
          }
    break;

  case 802:
#line 5114 "sql_yacc.yy"
    {
	     LEX *lex=Lex;
	     lex->change= (yyvsp[0].lex_str).str;
	     lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
	  }
    break;

  case 804:
#line 5121 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
	    lex->charset= NULL;
	    lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
          }
    break;

  case 805:
#line 5130 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,(yyvsp[-3].lex_str).str,
                                  (enum enum_field_types) (yyvsp[-1].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
				  (yyvsp[-3].lex_str).str, &lex->interval_list, lex->charset,
				  lex->uint_geom_type))
	       YYABORT;
          }
    break;

  case 807:
#line 5143 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::COLUMN,
                                                               (yyvsp[-1].lex_str).str));
	    lex->alter_info.flags|= ALTER_DROP_COLUMN;
	  }
    break;

  case 808:
#line 5150 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
    break;

  case 809:
#line 5154 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::KEY,
				               primary_key_name));
	    lex->alter_info.flags|= ALTER_DROP_INDEX;
	  }
    break;

  case 810:
#line 5161 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::KEY,
					                       (yyvsp[0].lex_str).str));
	    lex->alter_info.flags|= ALTER_DROP_INDEX;
	  }
    break;

  case 811:
#line 5168 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->alter_info.keys_onoff= DISABLE;
	    lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 812:
#line 5174 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->alter_info.keys_onoff= ENABLE;
	    lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 813:
#line 5180 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.alter_list.push_back(new Alter_column((yyvsp[-3].lex_str).str,(yyvsp[0].item)));
	    lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
	  }
    break;

  case 814:
#line 5186 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.alter_list.push_back(new Alter_column((yyvsp[-2].lex_str).str,
                                                                  (Item*) 0));
	    lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
	  }
    break;

  case 815:
#line 5193 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->select_lex.db=(yyvsp[0].table)->db.str;
	    lex->name= (yyvsp[0].table)->table.str;
            if (check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length) ||
                (yyvsp[0].table)->db.str && check_db_name((yyvsp[0].table)->db.str))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str);
              YYABORT;
            }
	    lex->alter_info.flags|= ALTER_RENAME;
	  }
    break;

  case 816:
#line 5206 "sql_yacc.yy"
    {
	    if (!(yyvsp[-1].charset))
	    {
	      THD *thd= YYTHD;
	      (yyvsp[-1].charset)= thd->variables.collation_database;
	    }
	    (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
	    if (!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset)))
	    {
	      my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname);
	      YYABORT;
	    }
	    LEX *lex= Lex;
	    lex->create_info.table_charset=
	      lex->create_info.default_table_charset= (yyvsp[0].charset);
	    lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
					    HA_CREATE_USED_DEFAULT_CHARSET);
	    lex->alter_info.flags|= ALTER_CONVERT;
	  }
    break;

  case 817:
#line 5227 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.flags|= ALTER_OPTIONS;
	  }
    break;

  case 818:
#line 5232 "sql_yacc.yy"
    {
	    Lex->alter_info.flags|= ALTER_FORCE;
	   }
    break;

  case 819:
#line 5236 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->alter_info.flags|= ALTER_ORDER;
	  }
    break;

  case 820:
#line 5242 "sql_yacc.yy"
    {}
    break;

  case 821:
#line 5243 "sql_yacc.yy"
    {}
    break;

  case 822:
#line 5246 "sql_yacc.yy"
    { Lex->ignore= 0;}
    break;

  case 823:
#line 5247 "sql_yacc.yy"
    { Lex->ignore= 1;}
    break;

  case 824:
#line 5251 "sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 825:
#line 5252 "sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 826:
#line 5253 "sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 827:
#line 5257 "sql_yacc.yy"
    {}
    break;

  case 828:
#line 5258 "sql_yacc.yy"
    { store_position_for_column((yyvsp[0].lex_str).str); }
    break;

  case 829:
#line 5259 "sql_yacc.yy"
    { store_position_for_column(first_keyword); }
    break;

  case 830:
#line 5262 "sql_yacc.yy"
    {}
    break;

  case 831:
#line 5263 "sql_yacc.yy"
    {}
    break;

  case 832:
#line 5264 "sql_yacc.yy"
    {}
    break;

  case 833:
#line 5265 "sql_yacc.yy"
    {}
    break;

  case 834:
#line 5273 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
	    lex->type = 0;
	    /* We'll use mi structure for UNTIL options */
	    bzero((char*) &lex->mi, sizeof(lex->mi));
            /* If you change this code don't forget to update SLAVE START too */
          }
    break;

  case 835:
#line 5282 "sql_yacc.yy"
    {}
    break;

  case 836:
#line 5284 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
	    lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
    break;

  case 837:
#line 5291 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
           lex->sql_command = SQLCOM_SLAVE_START;
	   lex->type = 0;
	    /* We'll use mi structure for UNTIL options */
	    bzero((char*) &lex->mi, sizeof(lex->mi));
          }
    break;

  case 838:
#line 5299 "sql_yacc.yy"
    {}
    break;

  case 839:
#line 5301 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
           lex->sql_command = SQLCOM_SLAVE_STOP;
	   lex->type = 0;
         }
    break;

  case 840:
#line 5311 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->sql_command= SQLCOM_BEGIN;
          lex->start_transaction_opt= (yyvsp[0].num);
        }
    break;

  case 841:
#line 5319 "sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 842:
#line 5321 "sql_yacc.yy"
    {
           (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
        }
    break;

  case 843:
#line 5327 "sql_yacc.yy"
    { Lex->slave_thd_opt= 0; }
    break;

  case 844:
#line 5329 "sql_yacc.yy"
    {}
    break;

  case 847:
#line 5338 "sql_yacc.yy"
    {}
    break;

  case 848:
#line 5339 "sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_SQL; }
    break;

  case 849:
#line 5340 "sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_IO; }
    break;

  case 850:
#line 5344 "sql_yacc.yy"
    {}
    break;

  case 851:
#line 5346 "sql_yacc.yy"
    {
            LEX *lex=Lex;
            if ((lex->mi.log_file_name || lex->mi.pos) &&
                (lex->mi.relay_log_name || lex->mi.relay_log_pos) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos)))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               YYABORT;
            }

          }
    break;

  case 854:
#line 5368 "sql_yacc.yy"
    {
	   Lex->sql_command = SQLCOM_RESTORE_TABLE;
           WARN_DEPRECATED(yythd, "5.2", "RESTORE TABLE",
                           "MySQL Administrator (mysqldump, mysql)");
	}
    break;

  case 855:
#line 5374 "sql_yacc.yy"
    {
	  Lex->backup_dir = (yyvsp[0].lex_str).str;
        }
    break;

  case 856:
#line 5380 "sql_yacc.yy"
    {
	   Lex->sql_command = SQLCOM_BACKUP_TABLE;
           WARN_DEPRECATED(yythd, "5.2", "BACKUP TABLE",
                           "MySQL Administrator (mysqldump, mysql)");
	}
    break;

  case 857:
#line 5386 "sql_yacc.yy"
    {
	  Lex->backup_dir = (yyvsp[0].lex_str).str;
        }
    break;

  case 858:
#line 5392 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_CHECKSUM;
	}
    break;

  case 859:
#line 5397 "sql_yacc.yy"
    {}
    break;

  case 860:
#line 5401 "sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 861:
#line 5402 "sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 862:
#line 5403 "sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 863:
#line 5408 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_REPAIR;
           lex->no_write_to_binlog= (yyvsp[-1].num);
	   lex->check_opt.init();
	}
    break;

  case 864:
#line 5415 "sql_yacc.yy"
    {}
    break;

  case 865:
#line 5419 "sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 866:
#line 5420 "sql_yacc.yy"
    {}
    break;

  case 867:
#line 5423 "sql_yacc.yy"
    {}
    break;

  case 868:
#line 5424 "sql_yacc.yy"
    {}
    break;

  case 869:
#line 5427 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 870:
#line 5428 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 871:
#line 5429 "sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 872:
#line 5433 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_ANALYZE;
           lex->no_write_to_binlog= (yyvsp[-1].num);
	   lex->check_opt.init();
	}
    break;

  case 873:
#line 5440 "sql_yacc.yy"
    {}
    break;

  case 874:
#line 5445 "sql_yacc.yy"
    {
           Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
           Lex->comment= (yyvsp[0].lex_str);
        }
    break;

  case 875:
#line 5453 "sql_yacc.yy"
    {
	  LEX *lex=Lex;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_CHECK;
	  lex->check_opt.init();
	}
    break;

  case 876:
#line 5465 "sql_yacc.yy"
    {}
    break;

  case 877:
#line 5469 "sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 878:
#line 5470 "sql_yacc.yy"
    {}
    break;

  case 879:
#line 5473 "sql_yacc.yy"
    {}
    break;

  case 880:
#line 5474 "sql_yacc.yy"
    {}
    break;

  case 881:
#line 5477 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 882:
#line 5478 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 883:
#line 5479 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 884:
#line 5480 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 885:
#line 5481 "sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 886:
#line 5482 "sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
    break;

  case 887:
#line 5486 "sql_yacc.yy"
    {
	   LEX *lex=Lex;
	   lex->sql_command = SQLCOM_OPTIMIZE;
           lex->no_write_to_binlog= (yyvsp[-1].num);
	   lex->check_opt.init();
	}
    break;

  case 888:
#line 5493 "sql_yacc.yy"
    {}
    break;

  case 889:
#line 5497 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 890:
#line 5498 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 891:
#line 5499 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 892:
#line 5504 "sql_yacc.yy"
    {
          Lex->sql_command= SQLCOM_RENAME_TABLE;
	}
    break;

  case 893:
#line 5508 "sql_yacc.yy"
    {}
    break;

  case 894:
#line 5510 "sql_yacc.yy"
    {
            Lex->db_list.empty();
            Lex->sql_command= SQLCOM_RENAME_DB;
          }
    break;

  case 895:
#line 5515 "sql_yacc.yy"
    {}
    break;

  case 896:
#line 5517 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 897:
#line 5524 "sql_yacc.yy"
    {
          if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
            YYABORT;
        }
    break;

  case 898:
#line 5529 "sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              YYABORT;
          }
    break;

  case 901:
#line 5541 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  SELECT_LEX *sl= lex->current_select;
	  if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
				     TL_IGNORE) ||
	      !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
				     TL_IGNORE))
	    YYABORT;
	}
    break;

  case 902:
#line 5553 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          if (Lex->db_list.push_back((LEX_STRING*)
                                     sql_memdup(&(yyvsp[-2].lex_str), sizeof(LEX_STRING))) ||
              Lex->db_list.push_back((LEX_STRING*)
                                     sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING))))
              YYABORT;
	}
    break;

  case 903:
#line 5564 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
	  lex->ident= (yyvsp[0].lex_str);
        }
    break;

  case 906:
#line 5577 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          SELECT_LEX *sel= &lex->select_lex;
          if (!sel->add_table_to_list(lex->thd, (yyvsp[-1].table), NULL, 0,
                                      TL_READ,
                                      sel->get_use_index(),
                                      (List<String> *)0))
            YYABORT;
        }
    break;

  case 907:
#line 5589 "sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
    break;

  case 908:
#line 5590 "sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 909:
#line 5595 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command=SQLCOM_PRELOAD_KEYS;
	}
    break;

  case 910:
#line 5600 "sql_yacc.yy"
    {}
    break;

  case 913:
#line 5609 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  SELECT_LEX *sel= &lex->select_lex;
	  if (!sel->add_table_to_list(lex->thd, (yyvsp[-2].table), NULL, (yyvsp[0].num),
                                      TL_READ,
                                      sel->get_use_index(),
                                      (List<String> *)0))
            YYABORT;
	}
    break;

  case 914:
#line 5621 "sql_yacc.yy"
    { Select->interval_list.empty(); }
    break;

  case 915:
#line 5623 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          SELECT_LEX *sel= &lex->select_lex;
          sel->use_index= sel->interval_list;
        }
    break;

  case 916:
#line 5631 "sql_yacc.yy"
    { Lex->select_lex.use_index_ptr= 0; }
    break;

  case 917:
#line 5633 "sql_yacc.yy"
    {
            SELECT_LEX *sel= &Lex->select_lex;
	    sel->use_index_ptr= &sel->use_index;
	  }
    break;

  case 918:
#line 5641 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 919:
#line 5642 "sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 920:
#line 5656 "sql_yacc.yy"
    {
 	    LEX *lex= Lex;
		lex->sql_command = SQLCOM_DBXP_SELECT;
	}
    break;

  case 921:
#line 5663 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_SELECT;
	}
    break;

  case 924:
#line 5677 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
	    if (sel->set_braces(1))
	    {
	      yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
	    }
	  if (sel->linkage == UNION_TYPE &&
	      !sel->master_unit()->first_select()->braces)
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
            /* select in braces, can't contain global parameters */
	    if (sel->master_unit()->fake_select_lex)
              sel->master_unit()->global_parameters=
                 sel->master_unit()->fake_select_lex;
          }
    break;

  case 926:
#line 5700 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
          SELECT_LEX * sel= lex->current_select;
          if (lex->current_select->set_braces(0))
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	  if (sel->linkage == UNION_TYPE &&
	      sel->master_unit()->first_select()->braces)
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	}
    break;

  case 928:
#line 5719 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (sel->linkage != UNION_TYPE)
	    mysql_init_select(lex);
	  lex->current_select->parsing_place= SELECT_LIST;
	}
    break;

  case 929:
#line 5727 "sql_yacc.yy"
    {
	  Select->parsing_place= NO_MATTER;
	}
    break;

  case 931:
#line 5733 "sql_yacc.yy"
    {}
    break;

  case 937:
#line 5745 "sql_yacc.yy"
    { Select->options|= SELECT_DISTINCT; }
    break;

  case 938:
#line 5747 "sql_yacc.yy"
    {
		THD *thd= YYTHD; 
		if (add_item_to_list(thd, new Item_field(&thd->lex->current_select->context,NULL,NULL,"COUNT(*)"))) 
			YYABORT;		
	  }
    break;

  case 943:
#line 5762 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    if (add_item_to_list(thd, new Item_field(&thd->lex->current_select->context,NULL,NULL,"*")))

	      YYABORT;
	  }
    break;

  case 944:
#line 5769 "sql_yacc.yy"
    { Select->where= 0; }
    break;

  case 945:
#line 5771 "sql_yacc.yy"
    {
	    Select->where= (yyvsp[0].item);
	    if ((yyvsp[0].item))
	      (yyvsp[0].item)->top_level_item();
	  }
    break;

  case 949:
#line 5794 "sql_yacc.yy"
    {
	    if (Select->options & SELECT_DISTINCT && Select->options & SELECT_ALL)
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT");
              YYABORT;
	    }
          }
    break;

  case 952:
#line 5808 "sql_yacc.yy"
    { Select->options|= SELECT_STRAIGHT_JOIN; }
    break;

  case 953:
#line 5810 "sql_yacc.yy"
    {
	    if (check_simple_select())
	      YYABORT;
	    Lex->lock_option= TL_READ_HIGH_PRIORITY;
	  }
    break;

  case 954:
#line 5815 "sql_yacc.yy"
    { Select->options|= SELECT_DISTINCT; }
    break;

  case 955:
#line 5816 "sql_yacc.yy"
    { Select->options|= SELECT_SMALL_RESULT; }
    break;

  case 956:
#line 5817 "sql_yacc.yy"
    { Select->options|= SELECT_BIG_RESULT; }
    break;

  case 957:
#line 5819 "sql_yacc.yy"
    {
	    if (check_simple_select())
	      YYABORT;
	    Select->options|= OPTION_BUFFER_RESULT;
	  }
    break;

  case 958:
#line 5825 "sql_yacc.yy"
    {
	    if (check_simple_select())
	      YYABORT;
	    Select->options|= OPTION_FOUND_ROWS;
	  }
    break;

  case 959:
#line 5830 "sql_yacc.yy"
    { Lex->safe_to_cache_query=0; }
    break;

  case 960:
#line 5832 "sql_yacc.yy"
    {
	    Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
	  }
    break;

  case 961:
#line 5835 "sql_yacc.yy"
    { Select->options|= SELECT_ALL; }
    break;

  case 963:
#line 5841 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->current_select->set_lock_for_tables(TL_WRITE);
	    lex->safe_to_cache_query=0;
	  }
    break;

  case 964:
#line 5847 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->current_select->
	      set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS);
	    lex->safe_to_cache_query=0;
	  }
    break;

  case 967:
#line 5859 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    if (add_item_to_list(thd,
                                 new Item_field(&thd->lex->current_select->
                                                context,
                                                NULL, NULL, "*")))
	      YYABORT;
	    (thd->lex->current_select->with_wild)++;
	  }
    break;

  case 968:
#line 5872 "sql_yacc.yy"
    {
	    if (add_item_to_list(YYTHD, (yyvsp[-2].item)))
	      YYABORT;
	    if ((yyvsp[0].lex_str).str)
            {
	      (yyvsp[-2].item)->set_name((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
              (yyvsp[-2].item)->is_autogenerated_name= FALSE;
            }
	    else if (!(yyvsp[-2].item)->name) {
	      char *str = (yyvsp[-3].simple_string);
	      if (str[-1] == '`')
	        str--;
	      (yyvsp[-2].item)->set_name(str,(uint) ((yyvsp[-1].simple_string) - str), YYTHD->charset());
	    }
	  }
    break;

  case 969:
#line 5889 "sql_yacc.yy"
    { (yyval.simple_string)=(char*) Lex->tok_start; }
    break;

  case 970:
#line 5892 "sql_yacc.yy"
    { (yyval.simple_string)=(char*) Lex->tok_end; }
    break;

  case 971:
#line 5895 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 972:
#line 5896 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 973:
#line 5899 "sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 974:
#line 5900 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 975:
#line 5901 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 976:
#line 5902 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 977:
#line 5903 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 978:
#line 5907 "sql_yacc.yy"
    {}
    break;

  case 979:
#line 5908 "sql_yacc.yy"
    {}
    break;

  case 980:
#line 5912 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 981:
#line 5914 "sql_yacc.yy"
    {
            List<Item> *list= Select->expr_list.pop();
            if (list->elements)
            {
              list->push_front((yyvsp[-2].item));
              (yyval.item)= new Item_cond_or(*list);
              /* optimize construction of logical OR to reduce
                 amount of objects for complex expressions */
            }
            else
              (yyval.item)= (yyvsp[-2].item);
            delete list;
          }
    break;

  case 983:
#line 5932 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 984:
#line 5936 "sql_yacc.yy"
    { (yyval.item)= new Item_cond_xor((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 985:
#line 5937 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 986:
#line 5939 "sql_yacc.yy"
    {
            List<Item> *list= Select->expr_list.pop();
            if (list->elements)
            {
              list->push_front((yyvsp[-2].item));
              (yyval.item)= new Item_cond_and(*list);
              /* optimize construction of logical AND to reduce
                 amount of objects for complex expressions */
            }
            else
              (yyval.item)= (yyvsp[-2].item);
            delete list;
          }
    break;

  case 988:
#line 5957 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 989:
#line 5961 "sql_yacc.yy"
    { (yyval.item)= negate_expression(YYTHD, (yyvsp[0].item)); }
    break;

  case 991:
#line 5965 "sql_yacc.yy"
    { (yyval.item)= is_truth_value((yyvsp[-2].item),1,0); }
    break;

  case 992:
#line 5966 "sql_yacc.yy"
    { (yyval.item)= is_truth_value((yyvsp[-3].item),0,0); }
    break;

  case 993:
#line 5967 "sql_yacc.yy"
    { (yyval.item)= is_truth_value((yyvsp[-2].item),0,1); }
    break;

  case 994:
#line 5968 "sql_yacc.yy"
    { (yyval.item)= is_truth_value((yyvsp[-3].item),1,1); }
    break;

  case 995:
#line 5969 "sql_yacc.yy"
    { (yyval.item)= new Item_func_isnull((yyvsp[-2].item)); }
    break;

  case 996:
#line 5970 "sql_yacc.yy"
    { (yyval.item)= new Item_func_isnotnull((yyvsp[-3].item)); }
    break;

  case 998:
#line 5974 "sql_yacc.yy"
    { (yyval.item)= new Item_func_isnull((yyvsp[-2].item)); }
    break;

  case 999:
#line 5975 "sql_yacc.yy"
    { (yyval.item)= new Item_func_isnotnull((yyvsp[-3].item)); }
    break;

  case 1000:
#line 5976 "sql_yacc.yy"
    { (yyval.item)= new Item_func_equal((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1001:
#line 5978 "sql_yacc.yy"
    { (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1002:
#line 5980 "sql_yacc.yy"
    { (yyval.item)= all_any_subquery_creator((yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].select_lex)); }
    break;

  case 1004:
#line 5985 "sql_yacc.yy"
    { 
            if ((yyvsp[-1].item_list)->elements == 1)
              (yyval.item)= new Item_func_eq((yyvsp[-4].item), (yyvsp[-1].item_list)->head());
            else
            {
              (yyvsp[-1].item_list)->push_front((yyvsp[-4].item));
              (yyval.item)= new Item_func_in(*(yyvsp[-1].item_list));
            }
          }
    break;

  case 1005:
#line 5995 "sql_yacc.yy"
    {
            if ((yyvsp[-1].item_list)->elements == 1)
              (yyval.item)= new Item_func_ne((yyvsp[-5].item), (yyvsp[-1].item_list)->head());
            else
            {
              (yyvsp[-1].item_list)->push_front((yyvsp[-5].item));
              Item_func_in *item = new Item_func_in(*(yyvsp[-1].item_list));
              item->negate();
              (yyval.item)= item;
            }            
          }
    break;

  case 1006:
#line 6007 "sql_yacc.yy"
    { (yyval.item)= new Item_in_subselect((yyvsp[-2].item), (yyvsp[0].select_lex)); }
    break;

  case 1007:
#line 6009 "sql_yacc.yy"
    { (yyval.item)= negate_expression(YYTHD, new Item_in_subselect((yyvsp[-3].item), (yyvsp[0].select_lex))); }
    break;

  case 1008:
#line 6011 "sql_yacc.yy"
    { (yyval.item)= new Item_func_between((yyvsp[-4].item),(yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1009:
#line 6013 "sql_yacc.yy"
    {
      Item_func_between *item= new Item_func_between((yyvsp[-5].item),(yyvsp[-2].item),(yyvsp[0].item));
      item->negate();
      (yyval.item)= item;
    }
    break;

  case 1010:
#line 6019 "sql_yacc.yy"
    { (yyval.item)= new Item_func_eq(new Item_func_soundex((yyvsp[-3].item)),
				 new Item_func_soundex((yyvsp[0].item))); }
    break;

  case 1011:
#line 6022 "sql_yacc.yy"
    { (yyval.item)= new Item_func_like((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[0].item),Lex->escape_used); }
    break;

  case 1012:
#line 6024 "sql_yacc.yy"
    { (yyval.item)= new Item_func_not(new Item_func_like((yyvsp[-4].item),(yyvsp[-1].item),(yyvsp[0].item), Lex->escape_used)); }
    break;

  case 1013:
#line 6025 "sql_yacc.yy"
    { (yyval.item)= new Item_func_regex((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1014:
#line 6027 "sql_yacc.yy"
    { (yyval.item)= negate_expression(YYTHD, new Item_func_regex((yyvsp[-3].item),(yyvsp[0].item))); }
    break;

  case 1016:
#line 6031 "sql_yacc.yy"
    { (yyval.item)= new Item_func_bit_or((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1018:
#line 6035 "sql_yacc.yy"
    { (yyval.item)= new Item_func_bit_and((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1020:
#line 6040 "sql_yacc.yy"
    { (yyval.item)= new Item_func_shift_left((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1021:
#line 6042 "sql_yacc.yy"
    { (yyval.item)= new Item_func_shift_right((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1023:
#line 6046 "sql_yacc.yy"
    { (yyval.item)= new Item_func_plus((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1024:
#line 6047 "sql_yacc.yy"
    { (yyval.item)= new Item_func_minus((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1025:
#line 6049 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[0].interval),0); }
    break;

  case 1026:
#line 6051 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[0].interval),1); }
    break;

  case 1028:
#line 6055 "sql_yacc.yy"
    { (yyval.item)= new Item_func_mul((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1029:
#line 6056 "sql_yacc.yy"
    { (yyval.item)= new Item_func_div((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1030:
#line 6057 "sql_yacc.yy"
    { (yyval.item)= new Item_func_mod((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1031:
#line 6058 "sql_yacc.yy"
    { (yyval.item)= new Item_func_int_div((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1032:
#line 6059 "sql_yacc.yy"
    { (yyval.item)= new Item_func_mod((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1034:
#line 6063 "sql_yacc.yy"
    { (yyval.item)= new Item_func_bit_xor((yyvsp[-2].item),(yyvsp[0].item)); }
    break;

  case 1044:
#line 6071 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1045:
#line 6072 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1046:
#line 6073 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1047:
#line 6074 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1048:
#line 6075 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1049:
#line 6076 "sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1050:
#line 6079 "sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1051:
#line 6080 "sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1052:
#line 6084 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 1054:
#line 6090 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_set_collation((yyvsp[-2].item),
					    new Item_string((yyvsp[0].lex_str).str,
							    (yyvsp[0].lex_str).length,
                                                            YYTHD->charset()));
	  }
    break;

  case 1057:
#line 6099 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_set_user_var((yyvsp[-2].lex_str),(yyvsp[0].item));
	    LEX *lex= Lex;
	    lex->uncacheable(UNCACHEABLE_RAND);
	    lex->variables_used= 1;
	  }
    break;

  case 1058:
#line 6106 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_get_user_var((yyvsp[0].lex_str));
	    LEX *lex= Lex;
	    lex->uncacheable(UNCACHEABLE_RAND);
	    lex->variables_used= 1;
	  }
    break;

  case 1059:
#line 6113 "sql_yacc.yy"
    {

            if ((yyvsp[-1].lex_str).str && (yyvsp[0].lex_str).str && check_reserved_words(&(yyvsp[-1].lex_str)))
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
	    if (!((yyval.item)= get_system_var(YYTHD, (yyvsp[-2].var_type), (yyvsp[-1].lex_str), (yyvsp[0].lex_str))))
	      YYABORT;
	    Lex->variables_used= 1;
	  }
    break;

  case 1061:
#line 6126 "sql_yacc.yy"
    { (yyval.item)= new Item_func_concat((yyvsp[-2].item), (yyvsp[0].item)); }
    break;

  case 1062:
#line 6127 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1063:
#line 6128 "sql_yacc.yy"
    { (yyval.item)= new Item_func_neg((yyvsp[0].item)); }
    break;

  case 1064:
#line 6129 "sql_yacc.yy"
    { (yyval.item)= new Item_func_bit_neg((yyvsp[0].item)); }
    break;

  case 1065:
#line 6130 "sql_yacc.yy"
    { (yyval.item)= negate_expression(YYTHD, (yyvsp[0].item)); }
    break;

  case 1066:
#line 6131 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[-1].item); }
    break;

  case 1067:
#line 6133 "sql_yacc.yy"
    {
	    (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
	    (yyval.item)= new Item_row(*(yyvsp[-1].item_list));
	  }
    break;

  case 1068:
#line 6138 "sql_yacc.yy"
    {
	    (yyvsp[-1].item_list)->push_front((yyvsp[-3].item));
	    (yyval.item)= new Item_row(*(yyvsp[-1].item_list));
	  }
    break;

  case 1069:
#line 6142 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1070:
#line 6143 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1071:
#line 6144 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[-1].item); }
    break;

  case 1072:
#line 6146 "sql_yacc.yy"
    { (yyvsp[-5].item_list)->push_front((yyvsp[-2].item));
            Select->add_ftfunc_to_list((Item_func_match*)
                                        ((yyval.item)=new Item_func_match(*(yyvsp[-5].item_list),(yyvsp[-1].num)))); }
    break;

  case 1073:
#line 6149 "sql_yacc.yy"
    { (yyval.item)= new Item_func_ascii((yyvsp[-1].item)); }
    break;

  case 1074:
#line 6151 "sql_yacc.yy"
    {
            (yyval.item)= create_func_cast((yyvsp[0].item), ITEM_CAST_CHAR, -1, 0, &my_charset_bin);
	  }
    break;

  case 1075:
#line 6155 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    (yyval.item)= create_func_cast((yyvsp[-3].item), (yyvsp[-1].cast_type),
                                 lex->length ? atoi(lex->length) : -1,
                                 lex->dec ? atoi(lex->dec) : 0,
                                 lex->charset);
	  }
    break;

  case 1076:
#line 6163 "sql_yacc.yy"
    { (yyval.item)= new Item_func_case(* (yyvsp[-2].item_list), (yyvsp[-4].item), (yyvsp[-1].item) ); }
    break;

  case 1077:
#line 6165 "sql_yacc.yy"
    {
	    (yyval.item)= create_func_cast((yyvsp[-3].item), (yyvsp[-1].cast_type),
				 Lex->length ? atoi(Lex->length) : -1,
                                 Lex->dec ? atoi(Lex->dec) : 0,
				 Lex->charset);
	  }
    break;

  case 1078:
#line 6172 "sql_yacc.yy"
    { (yyval.item)= new Item_func_conv_charset((yyvsp[-3].item),(yyvsp[-1].charset)); }
    break;

  case 1079:
#line 6174 "sql_yacc.yy"
    {
	    if ((yyvsp[-1].item)->is_splocal())
	    {
	      Item_splocal *il= static_cast<Item_splocal *>((yyvsp[-1].item));

	      my_error(ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str);
	      YYABORT;
	    }
	    (yyval.item)= new Item_default_value(Lex->current_context(), (yyvsp[-1].item));
	  }
    break;

  case 1080:
#line 6185 "sql_yacc.yy"
    { (yyval.item)= new Item_insert_value(Lex->current_context(), (yyvsp[-1].item)); }
    break;

  case 1081:
#line 6187 "sql_yacc.yy"
    {
	    if (!(yyvsp[-2].symbol).symbol->create_func)
	    {
              my_error(ER_FEATURE_DISABLED, MYF(0),
                       (yyvsp[-2].symbol).symbol->group->name,
                       (yyvsp[-2].symbol).symbol->group->needed_define);
	      YYABORT;
	    }
	    (yyval.item)= ((Item*(*)(void))((yyvsp[-2].symbol).symbol->create_func))();
	  }
    break;

  case 1082:
#line 6198 "sql_yacc.yy"
    {
	    if (!(yyvsp[-3].symbol).symbol->create_func)
	    {
              my_error(ER_FEATURE_DISABLED, MYF(0),
                       (yyvsp[-3].symbol).symbol->group->name,
                       (yyvsp[-3].symbol).symbol->group->needed_define);
	      YYABORT;
	    }
	    (yyval.item)= ((Item*(*)(Item*))((yyvsp[-3].symbol).symbol->create_func))((yyvsp[-1].item));
	  }
    break;

  case 1083:
#line 6209 "sql_yacc.yy"
    {
	    if (!(yyvsp[-5].symbol).symbol->create_func)
	    {
	      my_error(ER_FEATURE_DISABLED, MYF(0),
                       (yyvsp[-5].symbol).symbol->group->name,
                       (yyvsp[-5].symbol).symbol->group->needed_define);
	      YYABORT;
	    }
	    (yyval.item)= ((Item*(*)(Item*,Item*))((yyvsp[-5].symbol).symbol->create_func))((yyvsp[-3].item),(yyvsp[-1].item));
	  }
    break;

  case 1084:
#line 6220 "sql_yacc.yy"
    {
	    if (!(yyvsp[-7].symbol).symbol->create_func)
	    {
              my_error(ER_FEATURE_DISABLED, MYF(0),
                       (yyvsp[-7].symbol).symbol->group->name,
                       (yyvsp[-7].symbol).symbol->group->needed_define);
	      YYABORT;
	    }
	    (yyval.item)= ((Item*(*)(Item*,Item*,Item*))((yyvsp[-7].symbol).symbol->create_func))((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
	  }
    break;

  case 1085:
#line 6231 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);}
    break;

  case 1086:
#line 6233 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0); }
    break;

  case 1087:
#line 6235 "sql_yacc.yy"
    { (yyval.item)= new Item_func_repeat((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1088:
#line 6237 "sql_yacc.yy"
    { (yyval.item)= new Item_func_atan((yyvsp[-1].item)); }
    break;

  case 1089:
#line 6239 "sql_yacc.yy"
    { (yyval.item)= new Item_func_atan((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1090:
#line 6241 "sql_yacc.yy"
    { (yyval.item)= new Item_func_char(*(yyvsp[-1].item_list)); }
    break;

  case 1091:
#line 6243 "sql_yacc.yy"
    { (yyval.item)= new Item_func_char(*(yyvsp[-3].item_list), (yyvsp[-1].charset)); }
    break;

  case 1092:
#line 6245 "sql_yacc.yy"
    { (yyval.item)= new Item_func_charset((yyvsp[-1].item)); }
    break;

  case 1093:
#line 6247 "sql_yacc.yy"
    { (yyval.item)= new Item_func_coalesce(* (yyvsp[-1].item_list)); }
    break;

  case 1094:
#line 6249 "sql_yacc.yy"
    { (yyval.item)= new Item_func_collation((yyvsp[-1].item)); }
    break;

  case 1095:
#line 6251 "sql_yacc.yy"
    { (yyval.item)= new Item_func_concat(* (yyvsp[-1].item_list)); }
    break;

  case 1096:
#line 6253 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_concat_ws(*(yyvsp[-1].item_list)); }
    break;

  case 1097:
#line 6255 "sql_yacc.yy"
    {
            if (Lex->add_time_zone_tables_to_query_tables(YYTHD))
              YYABORT;
	    (yyval.item)= new Item_func_convert_tz((yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
	  }
    break;

  case 1098:
#line 6261 "sql_yacc.yy"
    { (yyval.item)= new Item_func_curdate_local(); Lex->safe_to_cache_query=0; }
    break;

  case 1099:
#line 6263 "sql_yacc.yy"
    { (yyval.item)= new Item_func_curtime_local(); Lex->safe_to_cache_query=0; }
    break;

  case 1100:
#line 6265 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_curtime_local((yyvsp[-1].item));
	    Lex->safe_to_cache_query=0;
	  }
    break;

  case 1101:
#line 6270 "sql_yacc.yy"
    { (yyval.item)= create_func_current_user(); }
    break;

  case 1102:
#line 6272 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-4].item),(yyvsp[-2].item),(yyvsp[-1].interval),0); }
    break;

  case 1103:
#line 6274 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-4].item),(yyvsp[-2].item),(yyvsp[-1].interval),1); }
    break;

  case 1104:
#line 6276 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_database();
            Lex->safe_to_cache_query=0;
	  }
    break;

  case 1105:
#line 6281 "sql_yacc.yy"
    { (yyval.item)= new Item_date_typecast((yyvsp[-1].item)); }
    break;

  case 1106:
#line 6283 "sql_yacc.yy"
    { (yyval.item)= new Item_func_dayofmonth((yyvsp[-1].item)); }
    break;

  case 1107:
#line 6285 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_elt(*(yyvsp[-1].item_list)); }
    break;

  case 1108:
#line 6287 "sql_yacc.yy"
    { (yyval.item)= new Item_func_make_set((yyvsp[-3].item), *(yyvsp[-1].item_list)); }
    break;

  case 1109:
#line 6289 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_encrypt((yyvsp[-1].item));
	    Lex->uncacheable(UNCACHEABLE_RAND);
	  }
    break;

  case 1110:
#line 6293 "sql_yacc.yy"
    { (yyval.item)= new Item_func_encrypt((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1111:
#line 6295 "sql_yacc.yy"
    { (yyval.item)= new Item_func_decode((yyvsp[-3].item),(yyvsp[-1].lex_str).str); }
    break;

  case 1112:
#line 6297 "sql_yacc.yy"
    { (yyval.item)= new Item_func_encode((yyvsp[-3].item),(yyvsp[-1].lex_str).str); }
    break;

  case 1113:
#line 6299 "sql_yacc.yy"
    { (yyval.item)= new Item_func_des_decrypt((yyvsp[-1].item)); }
    break;

  case 1114:
#line 6301 "sql_yacc.yy"
    { (yyval.item)= new Item_func_des_decrypt((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1115:
#line 6303 "sql_yacc.yy"
    { (yyval.item)= new Item_func_des_encrypt((yyvsp[-1].item)); }
    break;

  case 1116:
#line 6305 "sql_yacc.yy"
    { (yyval.item)= new Item_func_des_encrypt((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1117:
#line 6307 "sql_yacc.yy"
    { (yyval.item)= new Item_func_export_set((yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 1118:
#line 6309 "sql_yacc.yy"
    { (yyval.item)= new Item_func_export_set((yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 1119:
#line 6311 "sql_yacc.yy"
    { (yyval.item)= new Item_func_export_set((yyvsp[-9].item), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 1120:
#line 6313 "sql_yacc.yy"
    { (yyval.item)= new Item_func_format((yyvsp[-3].item),atoi((yyvsp[-1].lex_str).str)); }
    break;

  case 1121:
#line 6315 "sql_yacc.yy"
    { (yyval.item)= new Item_func_from_unixtime((yyvsp[-1].item)); }
    break;

  case 1122:
#line 6317 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_date_format (new Item_func_from_unixtime((yyvsp[-3].item)),(yyvsp[-1].item),0);
	  }
    break;

  case 1123:
#line 6321 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_field(*(yyvsp[-1].item_list)); }
    break;

  case 1124:
#line 6323 "sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
	    (yyval.item)= (yyvsp[0].item);
#else
	    my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
	    YYABORT;
#endif
	  }
    break;

  case 1125:
#line 6333 "sql_yacc.yy"
    { (yyval.item)= new Item_func_get_format((yyvsp[-3].date_time_type), (yyvsp[-1].item)); }
    break;

  case 1126:
#line 6335 "sql_yacc.yy"
    { (yyval.item)= new Item_func_hour((yyvsp[-1].item)); }
    break;

  case 1127:
#line 6337 "sql_yacc.yy"
    { (yyval.item)= new Item_func_if((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1128:
#line 6339 "sql_yacc.yy"
    { (yyval.item)= new Item_func_insert((yyvsp[-7].item),(yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1129:
#line 6342 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[0].item),(yyvsp[-3].item),(yyvsp[-2].interval),0); }
    break;

  case 1130:
#line 6344 "sql_yacc.yy"
    {
            if ((yyvsp[0].item)->type() != Item::ROW_ITEM)
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            (yyval.item)= new Item_func_interval((Item_row *)(yyvsp[0].item));
          }
    break;

  case 1131:
#line 6353 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_last_insert_id();
	    Lex->safe_to_cache_query= 0;
	  }
    break;

  case 1132:
#line 6358 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_last_insert_id((yyvsp[-1].item));
	    Lex->safe_to_cache_query= 0;
	  }
    break;

  case 1133:
#line 6363 "sql_yacc.yy"
    { (yyval.item)= new Item_func_left((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1134:
#line 6365 "sql_yacc.yy"
    { (yyval.item)= new Item_func_locate((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 1135:
#line 6367 "sql_yacc.yy"
    { (yyval.item)= new Item_func_locate((yyvsp[-3].item),(yyvsp[-5].item),(yyvsp[-1].item)); }
    break;

  case 1136:
#line 6369 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_max(*(yyvsp[-1].item_list)); }
    break;

  case 1137:
#line 6371 "sql_yacc.yy"
    { (yyvsp[-1].item_list)->push_front((yyvsp[-3].item)); (yyval.item)= new Item_func_min(*(yyvsp[-1].item_list)); }
    break;

  case 1138:
#line 6373 "sql_yacc.yy"
    { (yyval.item)= new Item_func_log((yyvsp[-1].item)); }
    break;

  case 1139:
#line 6375 "sql_yacc.yy"
    { (yyval.item)= new Item_func_log((yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 1140:
#line 6377 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_master_pos_wait((yyvsp[-3].item), (yyvsp[-1].item));
	    Lex->safe_to_cache_query=0;
		  }
    break;

  case 1141:
#line 6382 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_master_pos_wait((yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
	    Lex->safe_to_cache_query=0;
	  }
    break;

  case 1142:
#line 6387 "sql_yacc.yy"
    { (yyval.item)= new Item_func_microsecond((yyvsp[-1].item)); }
    break;

  case 1143:
#line 6389 "sql_yacc.yy"
    { (yyval.item)= new Item_func_minute((yyvsp[-1].item)); }
    break;

  case 1144:
#line 6391 "sql_yacc.yy"
    { (yyval.item) = new Item_func_mod( (yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 1145:
#line 6393 "sql_yacc.yy"
    { (yyval.item)= new Item_func_month((yyvsp[-1].item)); }
    break;

  case 1146:
#line 6395 "sql_yacc.yy"
    { (yyval.item)= new Item_func_now_local(); Lex->safe_to_cache_query=0;}
    break;

  case 1147:
#line 6397 "sql_yacc.yy"
    { (yyval.item)= new Item_func_now_local((yyvsp[-1].item)); Lex->safe_to_cache_query=0;}
    break;

  case 1148:
#line 6399 "sql_yacc.yy"
    {
	    (yyval.item)= YYTHD->variables.old_passwords ?
              (Item *) new Item_func_old_password((yyvsp[-1].item)) :
	      (Item *) new Item_func_password((yyvsp[-1].item));
	  }
    break;

  case 1149:
#line 6405 "sql_yacc.yy"
    { (yyval.item)=  new Item_func_old_password((yyvsp[-1].item)); }
    break;

  case 1150:
#line 6407 "sql_yacc.yy"
    { (yyval.item) = new Item_func_locate((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 1151:
#line 6409 "sql_yacc.yy"
    { (yyval.item) = new Item_func_quarter((yyvsp[-1].item)); }
    break;

  case 1152:
#line 6411 "sql_yacc.yy"
    { (yyval.item)= new Item_func_rand((yyvsp[-1].item)); Lex->uncacheable(UNCACHEABLE_RAND);}
    break;

  case 1153:
#line 6413 "sql_yacc.yy"
    { (yyval.item)= new Item_func_rand(); Lex->uncacheable(UNCACHEABLE_RAND);}
    break;

  case 1154:
#line 6415 "sql_yacc.yy"
    { (yyval.item)= new Item_func_replace((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1155:
#line 6417 "sql_yacc.yy"
    { (yyval.item)= new Item_func_right((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1156:
#line 6419 "sql_yacc.yy"
    { (yyval.item)= new Item_func_round((yyvsp[-1].item), new Item_int((char*)"0",0,1),0); }
    break;

  case 1157:
#line 6420 "sql_yacc.yy"
    { (yyval.item)= new Item_func_round((yyvsp[-3].item),(yyvsp[-1].item),0); }
    break;

  case 1158:
#line 6422 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_row_count();
	    Lex->safe_to_cache_query= 0;
	  }
    break;

  case 1159:
#line 6427 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);}
    break;

  case 1160:
#line 6429 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1); }
    break;

  case 1161:
#line 6431 "sql_yacc.yy"
    { (yyval.item)= new Item_func_second((yyvsp[-1].item)); }
    break;

  case 1162:
#line 6433 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1163:
#line 6435 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1164:
#line 6437 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1165:
#line 6439 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1166:
#line 6441 "sql_yacc.yy"
    { (yyval.item)= new Item_func_substr_index((yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1167:
#line 6443 "sql_yacc.yy"
    {
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new Item_func_sysdate_local();
            else (yyval.item)= new Item_func_now_local();
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1168:
#line 6450 "sql_yacc.yy"
    {
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new Item_func_sysdate_local((yyvsp[-1].item));
            else (yyval.item)= new Item_func_now_local((yyvsp[-1].item));
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1169:
#line 6457 "sql_yacc.yy"
    { (yyval.item)= new Item_time_typecast((yyvsp[-1].item)); }
    break;

  case 1170:
#line 6459 "sql_yacc.yy"
    { (yyval.item)= new Item_datetime_typecast((yyvsp[-1].item)); }
    break;

  case 1171:
#line 6461 "sql_yacc.yy"
    { (yyval.item)= new Item_func_add_time((yyvsp[-3].item), (yyvsp[-1].item), 1, 0); }
    break;

  case 1172:
#line 6463 "sql_yacc.yy"
    { (yyval.item)= new Item_date_add_interval((yyvsp[-1].item),(yyvsp[-3].item),(yyvsp[-5].interval_time_st),0); }
    break;

  case 1173:
#line 6465 "sql_yacc.yy"
    { (yyval.item)= new Item_func_timestamp_diff((yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st)); }
    break;

  case 1174:
#line 6467 "sql_yacc.yy"
    { (yyval.item)= new Item_func_trim((yyvsp[-1].item)); }
    break;

  case 1175:
#line 6469 "sql_yacc.yy"
    { (yyval.item)= new Item_func_ltrim((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 1176:
#line 6471 "sql_yacc.yy"
    { (yyval.item)= new Item_func_rtrim((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 1177:
#line 6473 "sql_yacc.yy"
    { (yyval.item)= new Item_func_trim((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 1178:
#line 6475 "sql_yacc.yy"
    { (yyval.item)= new Item_func_ltrim((yyvsp[-1].item)); }
    break;

  case 1179:
#line 6477 "sql_yacc.yy"
    { (yyval.item)= new Item_func_rtrim((yyvsp[-1].item)); }
    break;

  case 1180:
#line 6479 "sql_yacc.yy"
    { (yyval.item)= new Item_func_trim((yyvsp[-1].item)); }
    break;

  case 1181:
#line 6481 "sql_yacc.yy"
    { (yyval.item)= new Item_func_trim((yyvsp[-1].item),(yyvsp[-3].item)); }
    break;

  case 1182:
#line 6483 "sql_yacc.yy"
    { (yyval.item)= new Item_func_round((yyvsp[-3].item),(yyvsp[-1].item),1); }
    break;

  case 1183:
#line 6485 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    sp_name *name= new sp_name((yyvsp[-5].lex_str), (yyvsp[-3].lex_str));

	    name->init_qname(YYTHD);
	    sp_add_used_routine(lex, YYTHD, name, TYPE_ENUM_FUNCTION);
	    if ((yyvsp[-1].item_list))
	      (yyval.item)= new Item_func_sp(Lex->current_context(), name, *(yyvsp[-1].item_list));
	    else
	      (yyval.item)= new Item_func_sp(Lex->current_context(), name);
	    lex->safe_to_cache_query=0;
	  }
    break;

  case 1184:
#line 6498 "sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].lex_str).str, (yyvsp[-1].lex_str).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              LEX *lex= Lex;
              if (lex->current_select->inc_in_sum_expr())
              {
                yyerror(ER(ER_SYNTAX_ERROR));
                YYABORT;
              }
            }
            (yyval.udf)= udf;
#endif
          }
    break;

  case 1185:
#line 6516 "sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= (yyvsp[-2].udf);
            SELECT_LEX *sel= Select;

            if (udf)
            {
              if (udf->type == UDFTYPE_AGGREGATE)
                Select->in_sum_expr--;

              Lex->binlog_row_based_if_mixed= 1;

              switch (udf->returns) {
              case STRING_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_func_udf_str(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_func_udf_str(udf);
                }
                else
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_sum_udf_str(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_sum_udf_str(udf);
                }
                break;
              case REAL_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_func_udf_float(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_func_udf_float(udf);
                }
                else
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_sum_udf_float(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_sum_udf_float(udf);
                }
                break;
              case INT_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_func_udf_int(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_func_udf_int(udf);
                }
                else
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_sum_udf_int(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_sum_udf_int(udf);
                }
                break;
              case DECIMAL_RESULT:
                if (udf->type == UDFTYPE_FUNCTION)
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_func_udf_decimal(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_func_udf_decimal(udf);
                }
                else
                {
                  if ((yyvsp[-1].item_list) != NULL)
                    (yyval.item) = new Item_sum_udf_decimal(udf, *(yyvsp[-1].item_list));
                  else
                    (yyval.item) = new Item_sum_udf_decimal(udf);
                }
                break;
              default:
                YYABORT;
              }
            }
            else
#endif /* HAVE_DLOPEN */
            {
	      LEX *lex= Lex;
              sp_name *name= sp_name_current_db_new(YYTHD, (yyvsp[-4].lex_str));

              sp_add_used_routine(lex, YYTHD, name, TYPE_ENUM_FUNCTION);
              if ((yyvsp[-1].item_list))
                (yyval.item)= new Item_func_sp(Lex->current_context(), name, *(yyvsp[-1].item_list));
              else
                (yyval.item)= new Item_func_sp(Lex->current_context(), name);
	      lex->safe_to_cache_query=0;
	    }
          }
    break;

  case 1186:
#line 6612 "sql_yacc.yy"
    {
            (yyval.item)= new Item_func_unique_users((yyvsp[-7].item),atoi((yyvsp[-5].lex_str).str),atoi((yyvsp[-3].lex_str).str), * (yyvsp[-1].item_list));
	  }
    break;

  case 1187:
#line 6616 "sql_yacc.yy"
    {
	    (yyval.item)= new Item_func_unix_timestamp();
	    Lex->safe_to_cache_query=0;
	  }
    break;

  case 1188:
#line 6621 "sql_yacc.yy"
    { (yyval.item)= new Item_func_unix_timestamp((yyvsp[-1].item)); }
    break;

  case 1189:
#line 6623 "sql_yacc.yy"
    { (yyval.item)= new Item_func_user(FALSE); Lex->safe_to_cache_query=0; }
    break;

  case 1190:
#line 6625 "sql_yacc.yy"
    { (yyval.item)= new Item_func_curdate_utc(); Lex->safe_to_cache_query=0;}
    break;

  case 1191:
#line 6627 "sql_yacc.yy"
    { (yyval.item)= new Item_func_curtime_utc(); Lex->safe_to_cache_query=0;}
    break;

  case 1192:
#line 6629 "sql_yacc.yy"
    { (yyval.item)= new Item_func_now_utc(); Lex->safe_to_cache_query=0;}
    break;

  case 1193:
#line 6631 "sql_yacc.yy"
    {
            (yyval.item)= new Item_func_week((yyvsp[-1].item),new Item_int((char*) "0",
				   YYTHD->variables.default_week_format,1));
          }
    break;

  case 1194:
#line 6636 "sql_yacc.yy"
    { (yyval.item)= new Item_func_week((yyvsp[-3].item),(yyvsp[-1].item)); }
    break;

  case 1195:
#line 6638 "sql_yacc.yy"
    { (yyval.item)= new Item_func_year((yyvsp[-1].item)); }
    break;

  case 1196:
#line 6640 "sql_yacc.yy"
    { (yyval.item)= new Item_func_yearweek((yyvsp[-1].item),new Item_int((char*) "0",0,1)); }
    break;

  case 1197:
#line 6642 "sql_yacc.yy"
    { (yyval.item)= new Item_func_yearweek((yyvsp[-3].item), (yyvsp[-1].item)); }
    break;

  case 1198:
#line 6644 "sql_yacc.yy"
    {
	    (yyval.item)=new Item_func_benchmark((yyvsp[-3].ulong_num),(yyvsp[-1].item));
	    Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	  }
    break;

  case 1199:
#line 6649 "sql_yacc.yy"
    { (yyval.item)=new Item_extract( (yyvsp[-3].interval), (yyvsp[-1].item)); }
    break;

  case 1200:
#line 6653 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_rel((yyvsp[-3].item), (yyvsp[-1].item), Item_func::SP_CONTAINS_FUNC)); }
    break;

  case 1201:
#line 6655 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 1202:
#line 6657 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 1203:
#line 6659 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_wkb((yyvsp[-1].item))); }
    break;

  case 1204:
#line 6661 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_wkb((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 1205:
#line 6663 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point)); }
    break;

  case 1206:
#line 6667 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
                  Geometry::wkb_linestring, Geometry::wkb_point)); }
    break;

  case 1207:
#line 6670 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW( Item_func_spatial_collection(* (yyvsp[-1].item_list),
                   Geometry::wkb_multilinestring, Geometry::wkb_linestring)); }
    break;

  case 1208:
#line 6673 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 1209:
#line 6675 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 1210:
#line 6677 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 1211:
#line 6679 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 1212:
#line 6681 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 1213:
#line 6683 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 1214:
#line 6685 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
                  Geometry::wkb_multipoint, Geometry::wkb_point)); }
    break;

  case 1215:
#line 6688 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
                  Geometry::wkb_multipolygon, Geometry::wkb_polygon)); }
    break;

  case 1216:
#line 6691 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_point((yyvsp[-3].item),(yyvsp[-1].item))); }
    break;

  case 1217:
#line 6693 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 1218:
#line 6695 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 1219:
#line 6697 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 1220:
#line 6699 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 1221:
#line 6701 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_spatial_collection(* (yyvsp[-1].item_list),
	          Geometry::wkb_polygon, Geometry::wkb_linestring)); }
    break;

  case 1222:
#line 6704 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 1223:
#line 6706 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 1224:
#line 6708 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-1].item))); }
    break;

  case 1225:
#line 6710 "sql_yacc.yy"
    { (yyval.item)= GEOM_NEW(Item_func_geometry_from_text((yyvsp[-3].item), (yyvsp[-1].item))); }
    break;

  case 1226:
#line 6715 "sql_yacc.yy"
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
    break;

  case 1227:
#line 6717 "sql_yacc.yy"
    { (yyval.num)= FT_BOOL; }
    break;

  case 1228:
#line 6721 "sql_yacc.yy"
    { (yyval.num)= FT_NL;  }
    break;

  case 1229:
#line 6722 "sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1230:
#line 6726 "sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1231:
#line 6727 "sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1232:
#line 6731 "sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1233:
#line 6732 "sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[0].item_list);}
    break;

  case 1234:
#line 6736 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 1235:
#line 6738 "sql_yacc.yy"
    { (yyval.item_list)= Select->expr_list.pop(); }
    break;

  case 1236:
#line 6743 "sql_yacc.yy"
    {
	    Select->expr_list.head()->push_back((yyvsp[0].item));
	  }
    break;

  case 1237:
#line 6747 "sql_yacc.yy"
    {
	    Select->expr_list.head()->push_back((yyvsp[0].item));
	  }
    break;

  case 1238:
#line 6754 "sql_yacc.yy"
    {
	  if ((yyvsp[0].lex_str).str)
          {
	    (yyvsp[-2].item)->set_name((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, system_charset_info);
            (yyvsp[-2].item)->is_autogenerated_name= FALSE;
          }
	  else
	    (yyvsp[-2].item)->set_name((yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), YYTHD->charset());
	  (yyval.item)= (yyvsp[-2].item);
	}
    break;

  case 1239:
#line 6768 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_avg((yyvsp[-1].item)); }
    break;

  case 1240:
#line 6770 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_avg_distinct((yyvsp[-1].item)); }
    break;

  case 1241:
#line 6772 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_and((yyvsp[-1].item)); }
    break;

  case 1242:
#line 6774 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_or((yyvsp[-1].item)); }
    break;

  case 1243:
#line 6776 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_xor((yyvsp[-1].item)); }
    break;

  case 1244:
#line 6778 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_count(new Item_int((int32) 0L,1)); }
    break;

  case 1245:
#line 6780 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_count((yyvsp[-1].item)); }
    break;

  case 1246:
#line 6782 "sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1247:
#line 6784 "sql_yacc.yy"
    { Select->in_sum_expr--; }
    break;

  case 1248:
#line 6786 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_count_distinct(* (yyvsp[-2].item_list)); }
    break;

  case 1249:
#line 6788 "sql_yacc.yy"
    { (yyval.item)= new Item_sum_unique_users((yyvsp[-7].item),atoi((yyvsp[-5].lex_str).str),atoi((yyvsp[-3].lex_str).str),(yyvsp[-1].item)); }
    break;

  case 1250:
#line 6790 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_min((yyvsp[-1].item)); }
    break;

  case 1251:
#line 6797 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_min((yyvsp[-1].item)); }
    break;

  case 1252:
#line 6799 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_max((yyvsp[-1].item)); }
    break;

  case 1253:
#line 6801 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_max((yyvsp[-1].item)); }
    break;

  case 1254:
#line 6803 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_std((yyvsp[-1].item), 0); }
    break;

  case 1255:
#line 6805 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_variance((yyvsp[-1].item), 0); }
    break;

  case 1256:
#line 6807 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_std((yyvsp[-1].item), 1); }
    break;

  case 1257:
#line 6809 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_variance((yyvsp[-1].item), 1); }
    break;

  case 1258:
#line 6811 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_sum((yyvsp[-1].item)); }
    break;

  case 1259:
#line 6813 "sql_yacc.yy"
    { (yyval.item)=new Item_sum_sum_distinct((yyvsp[-1].item)); }
    break;

  case 1260:
#line 6815 "sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1261:
#line 6819 "sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
	    sel->in_sum_expr--;
	    (yyval.item)=new Item_func_group_concat(Lex->current_context(), (yyvsp[-5].num), (yyvsp[-3].item_list),
                                          sel->gorder_list, (yyvsp[-1].string));
	    (yyvsp[-3].item_list)->empty();
	  }
    break;

  case 1262:
#line 6828 "sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1263:
#line 6829 "sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1264:
#line 6832 "sql_yacc.yy"
    { (yyval.string) = new (YYTHD->mem_root) String(",",1,default_charset_info); }
    break;

  case 1265:
#line 6833 "sql_yacc.yy"
    { (yyval.string) = (yyvsp[0].string); }
    break;

  case 1266:
#line 6838 "sql_yacc.yy"
    {
            Select->gorder_list = NULL;
	  }
    break;

  case 1267:
#line 6842 "sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->gorder_list=
	      (SQL_LIST*) sql_memdup((char*) &select->order_list,
				     sizeof(st_sql_list));
	    select->order_list.empty();
	  }
    break;

  case 1268:
#line 6853 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->current_select->inc_in_sum_expr())
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	}
    break;

  case 1269:
#line 6862 "sql_yacc.yy"
    {
	  Select->in_sum_expr--;
	  (yyval.item)= (yyvsp[0].item);
	}
    break;

  case 1270:
#line 6868 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= &my_charset_bin; Lex->dec= 0; }
    break;

  case 1271:
#line 6869 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->dec= 0; }
    break;

  case 1272:
#line 6870 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= national_charset_info; Lex->dec=0; }
    break;

  case 1273:
#line 6871 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1274:
#line 6872 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1275:
#line 6873 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1276:
#line 6874 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1277:
#line 6875 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DATE; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1278:
#line 6876 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_TIME; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1279:
#line 6877 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DATETIME; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1280:
#line 6878 "sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DECIMAL; Lex->charset= NULL; }
    break;

  case 1281:
#line 6882 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 1282:
#line 6884 "sql_yacc.yy"
    { (yyval.item_list)= Select->expr_list.pop(); }
    break;

  case 1283:
#line 6887 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 1284:
#line 6888 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 1285:
#line 6891 "sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[0].item_list); }
    break;

  case 1286:
#line 6892 "sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[-1].item_list); }
    break;

  case 1287:
#line 6895 "sql_yacc.yy"
    { Select->expr_list.push_front(new List<Item>); }
    break;

  case 1288:
#line 6897 "sql_yacc.yy"
    { (yyval.item_list)= Select->expr_list.pop(); }
    break;

  case 1289:
#line 6900 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 1290:
#line 6901 "sql_yacc.yy"
    { Select->expr_list.head()->push_back((yyvsp[0].item)); }
    break;

  case 1291:
#line 6904 "sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1292:
#line 6905 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1293:
#line 6908 "sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1294:
#line 6909 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1295:
#line 6912 "sql_yacc.yy"
    { Select->when_list.push_front(new List<Item>); }
    break;

  case 1296:
#line 6914 "sql_yacc.yy"
    { (yyval.item_list)= Select->when_list.pop(); }
    break;

  case 1297:
#line 6918 "sql_yacc.yy"
    {
	    SELECT_LEX *sel=Select;
	    sel->when_list.head()->push_back((yyvsp[-2].item));
	    sel->when_list.head()->push_back((yyvsp[0].item));
	}
    break;

  case 1298:
#line 6924 "sql_yacc.yy"
    {
	    SELECT_LEX *sel=Select;
	    sel->when_list.head()->push_back((yyvsp[-2].item));
	    sel->when_list.head()->push_back((yyvsp[0].item));
	  }
    break;

  case 1299:
#line 6932 "sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[0].table_list); }
    break;

  case 1300:
#line 6933 "sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[0].table_list); }
    break;

  case 1301:
#line 6934 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(lex->thd)))
              YYABORT;
          }
    break;

  case 1302:
#line 6942 "sql_yacc.yy"
    { YYERROR_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
    break;

  case 1303:
#line 6947 "sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[0].table_list); }
    break;

  case 1304:
#line 6949 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
          }
    break;

  case 1305:
#line 6969 "sql_yacc.yy"
    { YYERROR_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list))); }
    break;

  case 1306:
#line 6971 "sql_yacc.yy"
    { YYERROR_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list))); (yyvsp[0].table_list)->straight=1; }
    break;

  case 1307:
#line 6974 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[-1].table_list)));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-3].table_list), (yyvsp[-1].table_list)))
              YYABORT;
          }
    break;

  case 1308:
#line 6981 "sql_yacc.yy"
    {
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
          }
    break;

  case 1309:
#line 6987 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[-1].table_list)));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-3].table_list), (yyvsp[-1].table_list)))
              YYABORT;
          }
    break;

  case 1310:
#line 6994 "sql_yacc.yy"
    {
            (yyvsp[-3].table_list)->straight=1;
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
          }
    break;

  case 1311:
#line 7001 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
            YYERROR_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
	  }
    break;

  case 1312:
#line 7006 "sql_yacc.yy"
    { add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list)); (yyval.table_list)=(yyvsp[-5].table_list); }
    break;

  case 1313:
#line 7008 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL);
          }
    break;

  case 1314:
#line 7016 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              YYABORT;
          }
    break;

  case 1315:
#line 7023 "sql_yacc.yy"
    {
            add_join_on((yyvsp[-3].table_list),(yyvsp[0].item));
            Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
          }
    break;

  case 1316:
#line 7030 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
            YYERROR_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
	  }
    break;

  case 1317:
#line 7035 "sql_yacc.yy"
    { add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list)); (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; (yyval.table_list)=(yyvsp[-5].table_list); }
    break;

  case 1318:
#line 7037 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
 	    add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL);
	    (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
	    (yyval.table_list)=(yyvsp[0].table_list);
	  }
    break;

  case 1319:
#line 7047 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              YYABORT;
          }
    break;

  case 1320:
#line 7054 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              YYABORT;
            add_join_on((yyval.table_list), (yyvsp[0].item));
            Lex->pop_context();
          }
    break;

  case 1321:
#line 7062 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
            YYERROR_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
	  }
    break;

  case 1322:
#line 7067 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list));
          }
    break;

  case 1323:
#line 7074 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
	    add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL);
	    LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              YYABORT;
	  }
    break;

  case 1324:
#line 7083 "sql_yacc.yy"
    {}
    break;

  case 1325:
#line 7084 "sql_yacc.yy"
    {}
    break;

  case 1326:
#line 7085 "sql_yacc.yy"
    {}
    break;

  case 1327:
#line 7090 "sql_yacc.yy"
    {
	  SELECT_LEX *sel= Select;
	  sel->use_index_ptr=sel->ignore_index_ptr=0;
	  sel->table_join_options= 0;
	}
    break;

  case 1328:
#line 7096 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (!((yyval.table_list)= sel->add_table_to_list(lex->thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr),
					   sel->get_table_join_options(),
					   lex->lock_option,
					   sel->get_use_index(),
					   sel->get_ignore_index())))
	    YYABORT;
          sel->add_joined_table((yyval.table_list));
	}
    break;

  case 1329:
#line 7109 "sql_yacc.yy"
    {
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[-5].table_list), (yyvsp[-1].table_list)))
              YYABORT;

          }
    break;

  case 1330:
#line 7116 "sql_yacc.yy"
    {
            YYERROR_UNLESS((yyvsp[-8].table_list) && (yyvsp[-4].table_list));
            add_join_on((yyvsp[-4].table_list),(yyvsp[-1].item));
            Lex->pop_context();
            (yyvsp[-4].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-4].table_list);
          }
    break;

  case 1331:
#line 7124 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if ((yyvsp[-2].num))
            {
	      if (sel->set_braces(1))
	      {
	        yyerror(ER(ER_SYNTAX_ERROR));
	        YYABORT;
	      }
              /* select in braces, can't contain global parameters */
	      if (sel->master_unit()->fake_select_lex)
                sel->master_unit()->global_parameters=
                   sel->master_unit()->fake_select_lex;
            }
            if ((yyvsp[-1].select_lex)->init_nested_join(lex->thd))
              YYABORT;
            (yyval.table_list)= 0;
            /* incomplete derived tables return NULL, we must be
               nested in select_derived rule to be here. */
          }
    break;

  case 1332:
#line 7146 "sql_yacc.yy"
    {
          /* Use $2 instead of Lex->current_select as derived table will
             alter value of Lex->current_select. */

          if (!((yyvsp[-3].table_list) || (yyvsp[0].lex_str_ptr)) && (yyvsp[-4].select_lex)->embedding &&
              !(yyvsp[-4].select_lex)->embedding->nested_join->join_list.elements)
          {
            /* we have a derived table ($3 == NULL) but no alias,
               Since we are nested in further parentheses so we
               can pass NULL to the outer level parentheses
               Permits parsing of "((((select ...))) as xyz)" */
            (yyval.table_list)= 0;
          }
          else
          if (!(yyvsp[-3].table_list))
          {
            /* Handle case of derived table, alias may be NULL if there
               are no outer parentheses, add_table_to_list() will throw
               error in this case */
	    LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
	    SELECT_LEX_UNIT *unit= sel->master_unit();
	    lex->current_select= sel= unit->outer_select();
	    if (!((yyval.table_list)= sel->
                  add_table_to_list(lex->thd, new Table_ident(unit), (yyvsp[0].lex_str_ptr), 0,
				    TL_READ,(List<String> *)0,
	                            (List<String> *)0)))

	      YYABORT;
            sel->add_joined_table((yyval.table_list));
            lex->pop_context();
          }
	  else
          if ((yyvsp[-2].num) || (yyvsp[0].lex_str_ptr))
	  {
            /* simple nested joins cannot have aliases or unions */
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
          else
            (yyval.table_list)= (yyvsp[-3].table_list);
	}
    break;

  case 1333:
#line 7193 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[0].select_lex)->init_nested_join(lex->thd))
              YYABORT;
          }
    break;

  case 1334:
#line 7199 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            /* for normal joins, $3 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (!((yyval.table_list)= (yyvsp[-2].select_lex)->end_nested_join(lex->thd)) && (yyvsp[0].table_list))
              YYABORT;
            if (!(yyvsp[0].table_list) && (yyval.table_list))
            {
	      yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
            }
          }
    break;

  case 1335:
#line 7215 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->derived_tables|= DERIVED_SUBQUERY;
          if (lex->sql_command == (int)SQLCOM_HA_READ ||
              lex->sql_command == (int)SQLCOM_KILL)
	  {
	    yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
              mysql_new_select(lex, 1))
	    YYABORT;
	  mysql_init_select(lex);
	  lex->current_select->linkage= DERIVED_TABLE_TYPE;
	  lex->current_select->parsing_place= SELECT_LIST;
	}
    break;

  case 1336:
#line 7232 "sql_yacc.yy"
    {
	  Select->parsing_place= NO_MATTER;
	}
    break;

  case 1338:
#line 7239 "sql_yacc.yy"
    { (yyval.select_lex)= Select; }
    break;

  case 1339:
#line 7244 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            TABLE_LIST *embedding;
            if (!sel->embedding || sel->end_nested_join(lex->thd))
	    {
              /* we are not in parentheses */
              yyerror(ER(ER_SYNTAX_ERROR));
	      YYABORT;
	    }
            embedding= Select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
    break;

  case 1340:
#line 7262 "sql_yacc.yy"
    {}
    break;

  case 1341:
#line 7263 "sql_yacc.yy"
    {}
    break;

  case 1342:
#line 7266 "sql_yacc.yy"
    {}
    break;

  case 1343:
#line 7268 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->use_index= *(yyvsp[0].string_list);
	    sel->use_index_ptr= &sel->use_index;
	  }
    break;

  case 1344:
#line 7274 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->use_index= *(yyvsp[0].string_list);
	    sel->use_index_ptr= &sel->use_index;
	    sel->table_join_options|= TL_OPTION_FORCE_INDEX;
	  }
    break;

  case 1345:
#line 7281 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->ignore_index= *(yyvsp[0].string_list);
	    sel->ignore_index_ptr= &sel->ignore_index;
	  }
    break;

  case 1346:
#line 7288 "sql_yacc.yy"
    { Select->interval_list.empty(); }
    break;

  case 1347:
#line 7290 "sql_yacc.yy"
    { (yyval.string_list)= &Select->interval_list; }
    break;

  case 1348:
#line 7294 "sql_yacc.yy"
    {}
    break;

  case 1349:
#line 7295 "sql_yacc.yy"
    {}
    break;

  case 1350:
#line 7300 "sql_yacc.yy"
    { Select->
	    interval_list.push_back(new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
				    system_charset_info)); }
    break;

  case 1351:
#line 7304 "sql_yacc.yy"
    { Select->
	    interval_list.push_back(new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
				    system_charset_info)); }
    break;

  case 1352:
#line 7308 "sql_yacc.yy"
    { Select->
	    interval_list.push_back(new (YYTHD->mem_root) String("PRIMARY", 7,
				    system_charset_info)); }
    break;

  case 1353:
#line 7314 "sql_yacc.yy"
    {
            if (!((yyval.string_list)= new List<String>))
	      YYABORT;
            (yyval.string_list)->push_back(new (YYTHD->mem_root)
                              String((const char *) (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                      system_charset_info));
	  }
    break;

  case 1354:
#line 7322 "sql_yacc.yy"
    {
            (yyvsp[-2].string_list)->push_back(new (YYTHD->mem_root)
                              String((const char *) (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                      system_charset_info));
            (yyval.string_list)= (yyvsp[-2].string_list);
	  }
    break;

  case 1355:
#line 7330 "sql_yacc.yy"
    {}
    break;

  case 1356:
#line 7331 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1357:
#line 7332 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1358:
#line 7333 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1359:
#line 7334 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1360:
#line 7335 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1361:
#line 7336 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1362:
#line 7337 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1363:
#line 7338 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MICROSECOND; }
    break;

  case 1364:
#line 7339 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1365:
#line 7340 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1366:
#line 7341 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1367:
#line 7342 "sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1368:
#line 7345 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1369:
#line 7346 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1370:
#line 7347 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1371:
#line 7348 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1372:
#line 7349 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1373:
#line 7350 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1374:
#line 7351 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1375:
#line 7352 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1376:
#line 7353 "sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1377:
#line 7357 "sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
    break;

  case 1378:
#line 7358 "sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
    break;

  case 1379:
#line 7359 "sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
    break;

  case 1380:
#line 7360 "sql_yacc.yy"
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
    break;

  case 1384:
#line 7369 "sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1385:
#line 7371 "sql_yacc.yy"
    { (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[0].lex_str),sizeof(LEX_STRING)); }
    break;

  case 1388:
#line 7379 "sql_yacc.yy"
    { Select->where= 0; }
    break;

  case 1389:
#line 7381 "sql_yacc.yy"
    {
            Select->parsing_place= IN_WHERE;
          }
    break;

  case 1390:
#line 7385 "sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
	    select->where= (yyvsp[0].item);
            select->parsing_place= NO_MATTER;
	    if ((yyvsp[0].item))
	      (yyvsp[0].item)->top_level_item();
	  }
    break;

  case 1392:
#line 7397 "sql_yacc.yy"
    {
	    Select->parsing_place= IN_HAVING;
          }
    break;

  case 1393:
#line 7401 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->having= (yyvsp[0].item);
	    sel->parsing_place= NO_MATTER;
	    if ((yyvsp[0].item))
	      (yyvsp[0].item)->top_level_item();
	  }
    break;

  case 1394:
#line 7412 "sql_yacc.yy"
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[0].item);
          }
    break;

  case 1395:
#line 7417 "sql_yacc.yy"
    {
            Lex->escape_used= FALSE;
            (yyval.item)= ((YYTHD->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
		 new Item_string("", 0, &my_charset_latin1) :
                 new Item_string("\\", 1, &my_charset_latin1));
          }
    break;

  case 1398:
#line 7436 "sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) YYABORT; }
    break;

  case 1399:
#line 7438 "sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) YYABORT; }
    break;

  case 1400:
#line 7441 "sql_yacc.yy"
    {}
    break;

  case 1401:
#line 7443 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "WITH CUBE",
		       "global union parameters");
	      YYABORT;
	    }
	    lex->current_select->olap= CUBE_TYPE;
	    my_error(ER_NOT_SUPPORTED_YET, MYF(0), "CUBE");
	    YYABORT;	/* To be deleted in 5.1 */
	  }
    break;

  case 1402:
#line 7456 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
		       "global union parameters");
	      YYABORT;
	    }
	    lex->current_select->olap= ROLLUP_TYPE;
	  }
    break;

  case 1405:
#line 7478 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->current_select->linkage != GLOBAL_OPTIONS_TYPE &&
	      lex->current_select->olap !=
	      UNSPECIFIED_OLAP_TYPE)
	  {
	    my_error(ER_WRONG_USAGE, MYF(0),
                     "CUBE/ROLLUP", "ORDER BY");
	    YYABORT;
	  }
	}
    break;

  case 1407:
#line 7492 "sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) YYABORT; }
    break;

  case 1408:
#line 7494 "sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[-1].item),(bool) (yyvsp[0].num))) YYABORT; }
    break;

  case 1409:
#line 7497 "sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1410:
#line 7498 "sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1411:
#line 7499 "sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1412:
#line 7504 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  SELECT_LEX *sel= lex->current_select;
          sel->offset_limit= 0;
          sel->select_limit= 0;
	}
    break;

  case 1413:
#line 7510 "sql_yacc.yy"
    {}
    break;

  case 1414:
#line 7514 "sql_yacc.yy"
    {}
    break;

  case 1415:
#line 7515 "sql_yacc.yy"
    {}
    break;

  case 1416:
#line 7519 "sql_yacc.yy"
    {}
    break;

  case 1417:
#line 7524 "sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
	    sel->explicit_limit= 1;
	  }
    break;

  case 1418:
#line 7531 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->select_limit= (yyvsp[0].item);
	    sel->offset_limit= (yyvsp[-2].item);
	    sel->explicit_limit= 1;
	  }
    break;

  case 1419:
#line 7538 "sql_yacc.yy"
    {
	    SELECT_LEX *sel= Select;
	    sel->select_limit= (yyvsp[-2].item);
	    sel->offset_limit= (yyvsp[0].item);
	    sel->explicit_limit= 1;
	  }
    break;

  case 1421:
#line 7547 "sql_yacc.yy"
    { (yyval.item)= new Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1422:
#line 7548 "sql_yacc.yy"
    { (yyval.item)= new Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1423:
#line 7549 "sql_yacc.yy"
    { (yyval.item)= new Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1424:
#line 7554 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->current_select->select_limit= 0;
	}
    break;

  case 1425:
#line 7559 "sql_yacc.yy"
    {
	  SELECT_LEX *sel= Select;
	  sel->select_limit= (yyvsp[0].item);
	  sel->explicit_limit= 1;
	}
    break;

  case 1426:
#line 7566 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1427:
#line 7567 "sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
    break;

  case 1428:
#line 7568 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1429:
#line 7569 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1430:
#line 7570 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1431:
#line 7571 "sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1432:
#line 7575 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1433:
#line 7576 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1434:
#line 7577 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1435:
#line 7578 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1436:
#line 7579 "sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
    break;

  case 1438:
#line 7585 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (&lex->select_lex != lex->current_select)
	    {
	      my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "subquery");
	      YYABORT;
	    }
	    lex->proc_list.elements=0;
	    lex->proc_list.first=0;
	    lex->proc_list.next= (byte**) &lex->proc_list.first;
	    if (add_proc_to_list(lex->thd, new Item_field(&lex->
                                                          current_select->
                                                          context,
                                                          NULL,NULL,(yyvsp[0].lex_str).str)))
	      YYABORT;
	    Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	  }
    break;

  case 1440:
#line 7606 "sql_yacc.yy"
    {}
    break;

  case 1441:
#line 7607 "sql_yacc.yy"
    {}
    break;

  case 1444:
#line 7615 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    if (add_proc_to_list(lex->thd, (yyvsp[0].item)))
	      YYABORT;
	    if (!(yyvsp[0].item)->name)
	      (yyvsp[0].item)->set_name((yyvsp[-1].simple_string),(uint) ((char*) lex->tok_end - (yyvsp[-1].simple_string)),
                           YYTHD->charset());
	  }
    break;

  case 1445:
#line 7627 "sql_yacc.yy"
    {
             LEX *lex=Lex;
	     if (!lex->describe && (!(lex->result= new select_dumpvar())))
	        YYABORT;
	   }
    break;

  case 1446:
#line 7633 "sql_yacc.yy"
    {}
    break;

  case 1448:
#line 7638 "sql_yacc.yy"
    {}
    break;

  case 1449:
#line 7643 "sql_yacc.yy"
    {
             LEX *lex=Lex;
	     if (lex->result) 
	       ((select_dumpvar *)lex->result)->var_list.push_back( new my_var((yyvsp[0].lex_str),0,0,(enum_field_types)0));
	     else
	       YYABORT;
	   }
    break;

  case 1450:
#line 7651 "sql_yacc.yy"
    {
             LEX *lex=Lex;
	     sp_pvar_t *t;

	     if (!lex->spcont || !(t=lex->spcont->find_pvar(&(yyvsp[0].lex_str))))
	     {
	       my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
	       YYABORT;
	     }
	     if (! lex->result)
	       YYABORT;
	     else
	     {
               my_var *var;
	       ((select_dumpvar *)lex->result)->
                 var_list.push_back(var= new my_var((yyvsp[0].lex_str),1,t->offset,t->type));
#ifndef DBUG_OFF
	       if (var)
		 var->sp= lex->sphead;
#endif
	     }
	   }
    break;

  case 1451:
#line 7677 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str, 0)) ||
              !(lex->result= new select_export(lex->exchange)))
            YYABORT;
	}
    break;

  case 1453:
#line 7686 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (!lex->describe)
	  {
	    lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	    if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str,1)))
	      YYABORT;
	    if (!(lex->result= new select_dump(lex->exchange)))
	      YYABORT;
	  }
	}
    break;

  case 1454:
#line 7698 "sql_yacc.yy"
    {
	  Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
	}
    break;

  case 1455:
#line 7708 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command = SQLCOM_DO;
	  mysql_init_select(lex);
	}
    break;

  case 1456:
#line 7714 "sql_yacc.yy"
    {
	  Lex->insert_list= (yyvsp[0].item_list);
	}
    break;

  case 1457:
#line 7725 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command = SQLCOM_DROP_TABLE;
	  lex->drop_temporary= (yyvsp[-4].num);
	  lex->drop_if_exists= (yyvsp[-2].num);
	}
    break;

  case 1458:
#line 7731 "sql_yacc.yy"
    {}
    break;

  case 1459:
#line 7732 "sql_yacc.yy"
    {
	     LEX *lex=Lex;
	     lex->sql_command= SQLCOM_DROP_INDEX;
	     lex->alter_info.drop_list.empty();
	     lex->alter_info.drop_list.push_back(new Alter_drop(Alter_drop::KEY,
                                                                (yyvsp[-3].lex_str).str));
	     if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-1].table), NULL,
							TL_OPTION_UPDATING))
	      YYABORT;
	  }
    break;

  case 1460:
#line 7743 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_DROP_DB;
	    lex->drop_if_exists=(yyvsp[-1].num);
	    lex->name=(yyvsp[0].lex_str).str;
	 }
    break;

  case 1461:
#line 7750 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
	      YYABORT;
	    }
	    lex->sql_command = SQLCOM_DROP_FUNCTION;
	    lex->drop_if_exists= (yyvsp[-1].num);
	    lex->spname= (yyvsp[0].spname);
	  }
    break;

  case 1462:
#line 7762 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (lex->sphead)
	    {
	      my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
	      YYABORT;
	    }
	    lex->sql_command = SQLCOM_DROP_PROCEDURE;
	    lex->drop_if_exists= (yyvsp[-1].num);
	    lex->spname= (yyvsp[0].spname);
	  }
    break;

  case 1463:
#line 7774 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_DROP_USER;
          }
    break;

  case 1464:
#line 7778 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_DROP_VIEW;
	    lex->drop_if_exists= (yyvsp[-2].num);
	  }
    break;

  case 1465:
#line 7784 "sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (lex->et)
            {
              /*
                Recursive events are not possible because recursive SPs
                are not also possible. lex->sp_head is not stacked.
              */
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "EVENT");
              YYABORT;
            }

            if (!(lex->et= new (YYTHD->mem_root) Event_timed()))
              YYABORT;
	  
            if (!lex->et_compile_phase)
            {
              lex->et->init_name(YYTHD, (yyvsp[0].spname));
              lex->et->init_definer(YYTHD);
            }

            lex->sql_command = SQLCOM_DROP_EVENT;
            lex->drop_if_exists= (yyvsp[-1].num);
          }
    break;

  case 1466:
#line 7810 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->spname= (yyvsp[0].spname);
	  }
    break;

  case 1467:
#line 7816 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
    break;

  case 1468:
#line 7821 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
    break;

  case 1471:
#line 7833 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, TL_OPTION_UPDATING))
	    YYABORT;
	}
    break;

  case 1472:
#line 7840 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1473:
#line 7841 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1474:
#line 7845 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1475:
#line 7846 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1476:
#line 7854 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_INSERT;
	  lex->duplicates= DUP_ERROR; 
	  mysql_init_select(lex);
	  /* for subselects */
          lex->lock_option= (using_update_log) ? TL_READ_NO_INSERT : TL_READ;
	}
    break;

  case 1477:
#line 7863 "sql_yacc.yy"
    {
	  Select->set_lock_for_tables((yyvsp[-2].lock_type));
	  Lex->current_select= &Lex->select_lex;
	}
    break;

  case 1478:
#line 7868 "sql_yacc.yy"
    {}
    break;

  case 1479:
#line 7873 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command = SQLCOM_REPLACE;
	  lex->duplicates= DUP_REPLACE;
	  mysql_init_select(lex);
	}
    break;

  case 1480:
#line 7880 "sql_yacc.yy"
    {
	  Select->set_lock_for_tables((yyvsp[-1].lock_type));
	  Lex->current_select= &Lex->select_lex;
	}
    break;

  case 1481:
#line 7885 "sql_yacc.yy"
    {}
    break;

  case 1482:
#line 7890 "sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              If it is SP we do not allow insert optimisation whan result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE :TL_WRITE_CONCURRENT_INSERT);
#else
            (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
#endif
          }
    break;

  case 1483:
#line 7902 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1484:
#line 7903 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DELAYED; }
    break;

  case 1485:
#line 7904 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1486:
#line 7908 "sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
    break;

  case 1487:
#line 7909 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DELAYED; }
    break;

  case 1488:
#line 7912 "sql_yacc.yy"
    {}
    break;

  case 1489:
#line 7913 "sql_yacc.yy"
    {}
    break;

  case 1490:
#line 7917 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->field_list.empty();
	  lex->many_values.empty();
	  lex->insert_list=0;
	}
    break;

  case 1491:
#line 7925 "sql_yacc.yy"
    {}
    break;

  case 1492:
#line 7926 "sql_yacc.yy"
    {}
    break;

  case 1493:
#line 7927 "sql_yacc.yy"
    {}
    break;

  case 1494:
#line 7929 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (!(lex->insert_list = new List_item) ||
		lex->many_values.push_back(lex->insert_list))
	      YYABORT;
	   }
    break;

  case 1496:
#line 7938 "sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[0].item)); }
    break;

  case 1497:
#line 7939 "sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[0].item)); }
    break;

  case 1498:
#line 7942 "sql_yacc.yy"
    {}
    break;

  case 1499:
#line 7943 "sql_yacc.yy"
    {}
    break;

  case 1500:
#line 7944 "sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 1501:
#line 7944 "sql_yacc.yy"
    {}
    break;

  case 1502:
#line 7945 "sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 1503:
#line 7945 "sql_yacc.yy"
    {}
    break;

  case 1508:
#line 7959 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->field_list.push_back((yyvsp[-2].item)) ||
	      lex->insert_list->push_back((yyvsp[0].item)))
	    YYABORT;
	 }
    break;

  case 1509:
#line 7966 "sql_yacc.yy"
    {}
    break;

  case 1510:
#line 7967 "sql_yacc.yy"
    {}
    break;

  case 1511:
#line 7971 "sql_yacc.yy"
    {}
    break;

  case 1512:
#line 7972 "sql_yacc.yy"
    {}
    break;

  case 1513:
#line 7977 "sql_yacc.yy"
    {
	    if (!(Lex->insert_list = new List_item))
	      YYABORT;
	 }
    break;

  case 1514:
#line 7982 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->many_values.push_back(lex->insert_list))
	    YYABORT;
	 }
    break;

  case 1515:
#line 7989 "sql_yacc.yy"
    {}
    break;

  case 1517:
#line 7994 "sql_yacc.yy"
    {
	  if (Lex->insert_list->push_back((yyvsp[0].item)))
	    YYABORT;
	}
    break;

  case 1518:
#line 7999 "sql_yacc.yy"
    {
	    if (Lex->insert_list->push_back((yyvsp[0].item)))
	      YYABORT;
	  }
    break;

  case 1519:
#line 8006 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item);}
    break;

  case 1520:
#line 8007 "sql_yacc.yy"
    {(yyval.item)= new Item_default_value(Lex->current_context()); }
    break;

  case 1522:
#line 8012 "sql_yacc.yy"
    { Lex->duplicates= DUP_UPDATE; }
    break;

  case 1524:
#line 8020 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  mysql_init_select(lex);
          lex->sql_command= SQLCOM_UPDATE;
	  lex->lock_option= TL_UNLOCK; 	/* Will be set later */
	  lex->duplicates= DUP_ERROR; 
        }
    break;

  case 1525:
#line 8029 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
          if (lex->select_lex.table_list.elements > 1)
            lex->sql_command= SQLCOM_UPDATE_MULTI;
	  else if (lex->select_lex.get_table_list()->derived)
	  {
	    /* it is single table update and it is update of derived table */
	    my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                     lex->select_lex.get_table_list()->alias, "UPDATE");
	    YYABORT;
	  }
          /*
            In case of multi-update setting write lock for all tables may
            be too pessimistic. We will decrease lock level if possible in
            mysql_multi_update().
          */
          Select->set_lock_for_tables((yyvsp[-4].lock_type));
	}
    break;

  case 1526:
#line 8047 "sql_yacc.yy"
    {}
    break;

  case 1529:
#line 8056 "sql_yacc.yy"
    {
	  if (add_item_to_list(YYTHD, (yyvsp[-2].item)) || add_value_to_list(YYTHD, (yyvsp[0].item)))
	    YYABORT;
	}
    break;

  case 1532:
#line 8067 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->update_list.push_back((yyvsp[-2].item)) || 
	      lex->value_list.push_back((yyvsp[0].item)))
	      YYABORT;
	  }
    break;

  case 1533:
#line 8075 "sql_yacc.yy"
    { (yyval.lock_type)= YYTHD->update_lock_default; }
    break;

  case 1534:
#line 8076 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1535:
#line 8082 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->sql_command= SQLCOM_DELETE;
	  mysql_init_select(lex);
	  lex->lock_option= lex->thd->update_lock_default;
	  lex->ignore= 0;
	  lex->select_lex.init_order();
	}
    break;

  case 1536:
#line 8090 "sql_yacc.yy"
    {}
    break;

  case 1537:
#line 8095 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
					 Lex->lock_option))
	    YYABORT;
	}
    break;

  case 1538:
#line 8101 "sql_yacc.yy"
    {}
    break;

  case 1539:
#line 8103 "sql_yacc.yy"
    { mysql_init_multi_delete(Lex); }
    break;

  case 1540:
#line 8105 "sql_yacc.yy"
    { 
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              YYABORT;
          }
    break;

  case 1541:
#line 8110 "sql_yacc.yy"
    { mysql_init_multi_delete(Lex); }
    break;

  case 1542:
#line 8112 "sql_yacc.yy"
    { 
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              YYABORT;
          }
    break;

  case 1543:
#line 8119 "sql_yacc.yy"
    {}
    break;

  case 1544:
#line 8120 "sql_yacc.yy"
    {}
    break;

  case 1545:
#line 8124 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, new Table_ident((yyvsp[-2].lex_str)), (yyvsp[0].lex_str_ptr),
					 TL_OPTION_UPDATING, Lex->lock_option))
	    YYABORT;
        }
    break;

  case 1546:
#line 8130 "sql_yacc.yy"
    {
	    if (!Select->add_table_to_list(YYTHD,
					   new Table_ident(YYTHD, (yyvsp[-4].lex_str), (yyvsp[-2].lex_str), 0),
					   (yyvsp[0].lex_str_ptr), TL_OPTION_UPDATING,
					   Lex->lock_option))
	      YYABORT;
	  }
    break;

  case 1547:
#line 8140 "sql_yacc.yy"
    {}
    break;

  case 1548:
#line 8141 "sql_yacc.yy"
    {}
    break;

  case 1549:
#line 8145 "sql_yacc.yy"
    {}
    break;

  case 1550:
#line 8146 "sql_yacc.yy"
    {}
    break;

  case 1551:
#line 8149 "sql_yacc.yy"
    { Select->options|= OPTION_QUICK; }
    break;

  case 1552:
#line 8150 "sql_yacc.yy"
    { Lex->lock_option= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1553:
#line 8151 "sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1554:
#line 8155 "sql_yacc.yy"
    {
	  LEX* lex= Lex;
	  lex->sql_command= SQLCOM_TRUNCATE;
	  lex->select_lex.options= 0;
	  lex->select_lex.init_order();
	}
    break;

  case 1557:
#line 8174 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_DISK_USAGE;
	}
    break;

  case 1558:
#line 8180 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->wild=0;
          lex->lock_option= TL_READ;
          mysql_init_select(lex);
          lex->current_select->parsing_place= SELECT_LIST;
	  bzero((char*) &lex->create_info,sizeof(lex->create_info));
	}
    break;

  case 1559:
#line 8189 "sql_yacc.yy"
    {}
    break;

  case 1560:
#line 8194 "sql_yacc.yy"
    {
           LEX *lex= Lex;
           lex->sql_command= SQLCOM_SELECT;
           lex->orig_sql_command= SQLCOM_SHOW_DATABASES;
           if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
             YYABORT;
         }
    break;

  case 1561:
#line 8202 "sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SELECT;
             lex->orig_sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               YYABORT;
           }
    break;

  case 1562:
#line 8211 "sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SELECT;
             lex->orig_sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               YYABORT;
           }
    break;

  case 1563:
#line 8220 "sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SELECT;
             lex->orig_sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               YYABORT;
           }
    break;

  case 1564:
#line 8229 "sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SELECT;
             lex->orig_sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[-1].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               YYABORT;
           }
    break;

  case 1565:
#line 8238 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_OPEN_TABLES;
	    lex->select_lex.db= (yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              YYABORT;
	  }
    break;

  case 1566:
#line 8247 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    WARN_DEPRECATED(yythd, "5.2", "SHOW PLUGIN", "'SHOW PLUGINS'");
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              YYABORT;
	  }
    break;

  case 1567:
#line 8256 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              YYABORT;
	  }
    break;

  case 1568:
#line 8264 "sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[0].db_type); }
    break;

  case 1570:
#line 8267 "sql_yacc.yy"
    { Lex->create_info.db_type= NULL; }
    break;

  case 1572:
#line 8270 "sql_yacc.yy"
    {
 	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_SELECT;
	    lex->orig_sql_command= SQLCOM_SHOW_FIELDS;
	    if ((yyvsp[-1].simple_string))
	      (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));
	    if (prepare_schema_table(YYTHD, lex, (yyvsp[-2].table), SCH_COLUMNS))
	      YYABORT;
	  }
    break;

  case 1573:
#line 8283 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_NEW_MASTER;
	    Lex->mi.log_file_name = (yyvsp[-8].lex_str).str;
	    Lex->mi.pos = (yyvsp[-4].ulonglong_number);
	    Lex->mi.server_id = (yyvsp[0].ulong_num);
          }
    break;

  case 1574:
#line 8290 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1575:
#line 8294 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1576:
#line 8298 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1578:
#line 8303 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_KEYS;
	    if ((yyvsp[-1].simple_string))
	      (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[-2].table), SCH_STATISTICS))
              YYABORT;
	  }
    break;

  case 1579:
#line 8313 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_COLUMN_TYPES;
	  }
    break;

  case 1580:
#line 8318 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
	    WARN_DEPRECATED(yythd, "5.2", "SHOW TABLE TYPES", "'SHOW [STORAGE] ENGINES'");
	  }
    break;

  case 1581:
#line 8324 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            lex->orig_sql_command= SQLCOM_SHOW_AUTHORS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              YYABORT;
	  }
    break;

  case 1582:
#line 8335 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_DISK_USAGE;
        if (prepare_schema_table(YYTHD, lex, 0, SCH_DISKUSAGE))
          YYABORT;
	  }
    break;

  case 1583:
#line 8343 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_AUTHORS;
	  }
    break;

  case 1584:
#line 8348 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
	  }
    break;

  case 1585:
#line 8353 "sql_yacc.yy"
    { (void) create_select_for_variable("warning_count"); }
    break;

  case 1586:
#line 8355 "sql_yacc.yy"
    { (void) create_select_for_variable("error_count"); }
    break;

  case 1587:
#line 8357 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
    break;

  case 1588:
#line 8359 "sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
    break;

  case 1589:
#line 8361 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
              YYABORT;
	  }
    break;

  case 1590:
#line 8370 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_ENGINE_STATUS;
            if (!(lex->create_info.db_type=
                  ha_resolve_by_legacy_type(YYTHD, DB_TYPE_INNODB)))
            {
	      my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), "InnoDB");
	      YYABORT;
            }
            WARN_DEPRECATED(yythd, "5.2", "SHOW INNODB STATUS", "'SHOW ENGINE INNODB STATUS'");
	  }
    break;

  case 1591:
#line 8382 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_ENGINE_MUTEX;
            if (!(lex->create_info.db_type=
                  ha_resolve_by_legacy_type(YYTHD, DB_TYPE_INNODB)))
            {
	      my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), "InnoDB");
	      YYABORT;
            }
            WARN_DEPRECATED(yythd, "5.2", "SHOW MUTEX STATUS", "'SHOW ENGINE INNODB MUTEX'");
	  }
    break;

  case 1592:
#line 8394 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1593:
#line 8396 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
              YYABORT;
	  }
    break;

  case 1594:
#line 8405 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              YYABORT;
          }
    break;

  case 1595:
#line 8413 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              YYABORT;
          }
    break;

  case 1596:
#line 8421 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS;
            if (!(lex->create_info.db_type=
                  ha_resolve_by_legacy_type(YYTHD, DB_TYPE_BERKELEY_DB)))
            {
	      my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), "BerkeleyDB");
	      YYABORT;
            }
	    WARN_DEPRECATED(yythd, "5.2", "SHOW BDB LOGS", "'SHOW ENGINE BDB LOGS'");
	  }
    break;

  case 1597:
#line 8433 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS;
            if (!(lex->create_info.db_type=
                  ha_resolve_by_legacy_type(YYTHD, DB_TYPE_BERKELEY_DB)))
            {
	      my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), "BerkeleyDB");
	      YYABORT;
            }
	    WARN_DEPRECATED(yythd, "5.2", "SHOW LOGS", "'SHOW ENGINE BDB LOGS'");
	  }
    break;

  case 1598:
#line 8445 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_GRANTS;
	    THD *thd= lex->thd;
            Security_context *sctx= thd->security_ctx;
	    LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              YYABORT;
            curr_user->user.str= sctx->priv_user;
            curr_user->user.length= strlen(sctx->priv_user);
            if (*sctx->priv_host != 0)
            {
              curr_user->host.str= sctx->priv_host;
              curr_user->host.length= strlen(sctx->priv_host);
            }
            else
            {
              curr_user->host.str= (char *) "%";
              curr_user->host.length= 1;
            }
            curr_user->password=null_lex_str;
	    lex->grant_user= curr_user;
	  }
    break;

  case 1599:
#line 8469 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->sql_command= SQLCOM_SHOW_GRANTS;
	    lex->grant_user=(yyvsp[0].lex_user);
	    lex->grant_user->password=null_lex_str;
	  }
    break;

  case 1600:
#line 8476 "sql_yacc.yy"
    {
	    Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
	    Lex->create_info.options=(yyvsp[-1].num);
	    Lex->name=(yyvsp[0].lex_str).str;
	  }
    break;

  case 1601:
#line 8482 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->sql_command = SQLCOM_SHOW_CREATE;
	    if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[0].table), NULL,0))
	      YYABORT;
            lex->only_view= 0;
	  }
    break;

  case 1602:
#line 8490 "sql_yacc.yy"
    {
            LEX *lex= Lex;
	    lex->sql_command = SQLCOM_SHOW_CREATE;
	    if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[0].table), NULL, 0))
	      YYABORT;
            lex->only_view= 1;
	  }
    break;

  case 1603:
#line 8498 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1604:
#line 8502 "sql_yacc.yy"
    {
	    Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1605:
#line 8506 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
	    lex->spname= (yyvsp[0].spname);
	  }
    break;

  case 1606:
#line 8513 "sql_yacc.yy"
    {
	    LEX *lex= Lex;

	    lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
	    lex->spname= (yyvsp[0].spname);
	  }
    break;

  case 1607:
#line 8520 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_STATUS_PROC;
	    if (!sp_add_to_query_tables(YYTHD, lex, "mysql", "proc", TL_READ))
	      YYABORT;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              YYABORT;
	  }
    break;

  case 1608:
#line 8530 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
            lex->orig_sql_command= SQLCOM_SHOW_STATUS_FUNC;
	    if (!sp_add_to_query_tables(YYTHD, lex, "mysql", "proc", TL_READ))
	      YYABORT;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              YYABORT;
	  }
    break;

  case 1609:
#line 8540 "sql_yacc.yy"
    {
#ifdef DBUG_OFF
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
#else
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
	    Lex->spname= (yyvsp[0].spname);
#endif
          }
    break;

  case 1610:
#line 8550 "sql_yacc.yy"
    {
#ifdef DBUG_OFF
            yyerror(ER(ER_SYNTAX_ERROR));
            YYABORT;
#else
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
	    Lex->spname= (yyvsp[0].spname);
#endif
          }
    break;

  case 1611:
#line 8560 "sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
            Lex->spname= (yyvsp[0].spname);
            Lex->et= new (YYTHD->mem_root) Event_timed();
            if (!Lex->et)
              YYABORT;
            Lex->et->init_definer(YYTHD);
          }
    break;

  case 1612:
#line 8572 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1613:
#line 8574 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1614:
#line 8576 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1619:
#line 8587 "sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1620:
#line 8588 "sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[0].lex_str).str; }
    break;

  case 1621:
#line 8591 "sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1622:
#line 8592 "sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1625:
#line 8599 "sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1626:
#line 8600 "sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
    break;

  case 1627:
#line 8603 "sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1628:
#line 8604 "sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
    break;

  case 1630:
#line 8609 "sql_yacc.yy"
    { Lex->wild=  new (YYTHD->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   system_charset_info); }
    break;

  case 1631:
#line 8612 "sql_yacc.yy"
    {
          Select->where= (yyvsp[0].item);
          if ((yyvsp[0].item))
            (yyvsp[0].item)->top_level_item();
        }
    break;

  case 1632:
#line 8627 "sql_yacc.yy"
    {
 	    LEX *lex= Lex;
        lex->sql_command = SQLCOM_DBXP_EXPLAIN_SELECT;
	}
    break;

  case 1633:
#line 8635 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->lock_option= TL_READ;
          mysql_init_select(lex);
          lex->current_select->parsing_place= SELECT_LIST;
          lex->sql_command= SQLCOM_SELECT;
          lex->orig_sql_command= SQLCOM_SHOW_FIELDS;
          lex->select_lex.db= 0;
          lex->verbose= 0;
          if (prepare_schema_table(YYTHD, lex, (yyvsp[0].table), SCH_COLUMNS))
	    YYABORT;
	}
    break;

  case 1634:
#line 8647 "sql_yacc.yy"
    {}
    break;

  case 1635:
#line 8649 "sql_yacc.yy"
    { Lex->describe|= DESCRIBE_NORMAL; }
    break;

  case 1636:
#line 8651 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->select_lex.options|= SELECT_DESCRIBE;
	  }
    break;

  case 1639:
#line 8662 "sql_yacc.yy"
    {}
    break;

  case 1640:
#line 8663 "sql_yacc.yy"
    { Lex->describe|= DESCRIBE_EXTENDED; }
    break;

  case 1641:
#line 8664 "sql_yacc.yy"
    { Lex->describe|= DESCRIBE_PARTITIONS; }
    break;

  case 1642:
#line 8669 "sql_yacc.yy"
    {}
    break;

  case 1643:
#line 8670 "sql_yacc.yy"
    { Lex->wild= (yyvsp[0].string); }
    break;

  case 1644:
#line 8672 "sql_yacc.yy"
    { Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,system_charset_info); }
    break;

  case 1645:
#line 8679 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->sphead && lex->sphead->m_type != TYPE_ENUM_PROCEDURE)
	  {
            /*
              Note that both FLUSH TABLES and FLUSH PRIVILEGES will break
              execution in prelocked mode. So it is better to disable
              FLUSH in stored functions and triggers completely.
            */
            my_error(ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG, MYF(0), "FLUSH");
	    YYABORT;
	  }
	  lex->sql_command= SQLCOM_FLUSH; lex->type=0;
          lex->no_write_to_binlog= (yyvsp[0].num);
	}
    break;

  case 1646:
#line 8695 "sql_yacc.yy"
    {}
    break;

  case 1649:
#line 8703 "sql_yacc.yy"
    { Lex->type|= REFRESH_TABLES; }
    break;

  case 1650:
#line 8703 "sql_yacc.yy"
    {}
    break;

  case 1651:
#line 8704 "sql_yacc.yy"
    { Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK; }
    break;

  case 1652:
#line 8705 "sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1653:
#line 8706 "sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1654:
#line 8707 "sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1655:
#line 8708 "sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1656:
#line 8709 "sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1657:
#line 8710 "sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1658:
#line 8711 "sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1659:
#line 8712 "sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1660:
#line 8713 "sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1661:
#line 8716 "sql_yacc.yy"
    {;}
    break;

  case 1662:
#line 8717 "sql_yacc.yy"
    {;}
    break;

  case 1663:
#line 8721 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_RESET; lex->type=0;
	}
    break;

  case 1664:
#line 8725 "sql_yacc.yy"
    {}
    break;

  case 1667:
#line 8733 "sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1668:
#line 8734 "sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1669:
#line 8735 "sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1670:
#line 8739 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->type=0;
	}
    break;

  case 1671:
#line 8743 "sql_yacc.yy"
    {}
    break;

  case 1673:
#line 8752 "sql_yacc.yy"
    {
	   Lex->sql_command = SQLCOM_PURGE;
	   Lex->to_log = (yyvsp[0].lex_str).str;
        }
    break;

  case 1674:
#line 8757 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  lex->value_list.empty();
	  lex->value_list.push_front((yyvsp[0].item));
	  lex->sql_command= SQLCOM_PURGE_BEFORE;
	}
    break;

  case 1675:
#line 8768 "sql_yacc.yy"
    { Lex->sql_command= SQLCOM_KILL; }
    break;

  case 1676:
#line 8769 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->value_list.empty();
	  lex->value_list.push_front((yyvsp[0].item));
	}
    break;

  case 1677:
#line 8776 "sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1678:
#line 8777 "sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1679:
#line 8778 "sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1680:
#line 8784 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command=SQLCOM_CHANGE_DB;
	  lex->select_lex.db= (yyvsp[0].lex_str).str;
	}
    break;

  case 1681:
#line 8793 "sql_yacc.yy"
    {
          LEX *lex=Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "LOAD DATA");
	    YYABORT;
	  }
          lex->fname_start= lex->ptr;
        }
    break;

  case 1682:
#line 8803 "sql_yacc.yy"
    {}
    break;

  case 1683:
#line 8806 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          WARN_DEPRECATED(yythd, "5.2", "LOAD TABLE FROM MASTER",
                          "MySQL Administrator (mysqldump, mysql)");
          if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "LOAD TABLE");
	    YYABORT;
	  }
          lex->sql_command = SQLCOM_LOAD_MASTER_TABLE;
          if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), NULL, TL_OPTION_UPDATING))
            YYABORT;
        }
    break;

  case 1684:
#line 8822 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_LOAD;
	  lex->lock_option= (yyvsp[-3].lock_type);
	  lex->local_file=  (yyvsp[-2].num);
	  lex->duplicates= DUP_ERROR;
	  lex->ignore= 0;
	  if (!(lex->exchange= new sql_exchange((yyvsp[0].lex_str).str, 0)))
	    YYABORT;
        }
    break;

  case 1685:
#line 8833 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->fname_end= lex->ptr;
	}
    break;

  case 1686:
#line 8838 "sql_yacc.yy"
    {
          LEX *lex=Lex;
          if (!Select->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                         lex->lock_option))
            YYABORT;
          lex->field_list.empty();
          lex->update_list.empty();
          lex->value_list.empty();
        }
    break;

  case 1687:
#line 8849 "sql_yacc.yy"
    {}
    break;

  case 1688:
#line 8852 "sql_yacc.yy"
    {
	  Lex->sql_command = SQLCOM_LOAD_MASTER_DATA;
        }
    break;

  case 1689:
#line 8857 "sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1690:
#line 8858 "sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1691:
#line 8861 "sql_yacc.yy"
    { (yyval.lock_type)= YYTHD->update_lock_default; }
    break;

  case 1692:
#line 8863 "sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              Ignore this option in SP to avoid problem with query cache
            */
            if (Lex->sphead != 0)
#endif
              (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
          }
    break;

  case 1693:
#line 8872 "sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1694:
#line 8876 "sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1695:
#line 8877 "sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1696:
#line 8878 "sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1701:
#line 8890 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
    break;

  case 1702:
#line 8895 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
	  }
    break;

  case 1703:
#line 8902 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
    break;

  case 1704:
#line 8907 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
    break;

  case 1709:
#line 8922 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
    break;

  case 1710:
#line 8927 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
    break;

  case 1712:
#line 8935 "sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
    break;

  case 1713:
#line 8941 "sql_yacc.yy"
    { }
    break;

  case 1714:
#line 8942 "sql_yacc.yy"
    { }
    break;

  case 1715:
#line 8943 "sql_yacc.yy"
    { }
    break;

  case 1716:
#line 8947 "sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[0].item)); }
    break;

  case 1717:
#line 8949 "sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[0].item)); }
    break;

  case 1718:
#line 8953 "sql_yacc.yy"
    {(yyval.item)= (yyvsp[0].item);}
    break;

  case 1719:
#line 8955 "sql_yacc.yy"
    { (yyval.item)= new Item_user_var_as_out_param((yyvsp[0].lex_str)); }
    break;

  case 1720:
#line 8959 "sql_yacc.yy"
    { }
    break;

  case 1721:
#line 8960 "sql_yacc.yy"
    { }
    break;

  case 1722:
#line 8967 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  (yyval.item) = new Item_string((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,thd->variables.collation_connection);
	}
    break;

  case 1723:
#line 8972 "sql_yacc.yy"
    { (yyval.item)=  new Item_string((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,national_charset_info); }
    break;

  case 1724:
#line 8974 "sql_yacc.yy"
    { (yyval.item) = new Item_string((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,Lex->charset); }
    break;

  case 1725:
#line 8976 "sql_yacc.yy"
    { ((Item_string*) (yyvsp[-1].item))->append((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length); }
    break;

  case 1726:
#line 8981 "sql_yacc.yy"
    { (yyval.string)=  new (YYTHD->mem_root) String((yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,YYTHD->variables.collation_connection); }
    break;

  case 1727:
#line 8983 "sql_yacc.yy"
    {
	    Item *tmp= new Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    /*
	      it is OK only emulate fix_fields, because we need only
              value of constant
	    */
	    (yyval.string)= tmp ?
	      tmp->quick_fix_field(), tmp->val_str((String*) 0) :
	      (String*) 0;
	  }
    break;

  case 1728:
#line 8994 "sql_yacc.yy"
    {
	    Item *tmp= new Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    /*
	      it is OK only emulate fix_fields, because we need only
              value of constant
	    */
	    (yyval.string)= tmp ? tmp->quick_fix_field(), tmp->val_str((String*) 0) :
		      (String*) 0;
          }
    break;

  case 1729:
#line 9007 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
	  LEX *lex= thd->lex;
          Item_param *item= new Item_param((uint) (lex->tok_start -
                                                   (uchar *) thd->query));
          if (!((yyval.item)= item) || lex->param_list.push_back(item))
          {
            my_message(ER_OUT_OF_RESOURCES, ER(ER_OUT_OF_RESOURCES), MYF(0));
            YYABORT;
          }
        }
    break;

  case 1730:
#line 9021 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 1731:
#line 9022 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item_num); }
    break;

  case 1732:
#line 9024 "sql_yacc.yy"
    {
	    (yyvsp[0].item_num)->max_length++;
	    (yyval.item)= (yyvsp[0].item_num)->neg();
	  }
    break;

  case 1733:
#line 9032 "sql_yacc.yy"
    { (yyval.item) =	(yyvsp[0].item); }
    break;

  case 1734:
#line 9033 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item_num); }
    break;

  case 1735:
#line 9034 "sql_yacc.yy"
    { (yyval.item) =	new Item_null();
			  Lex->next_state=MY_LEX_OPERATOR_OR_IDENT;}
    break;

  case 1736:
#line 9036 "sql_yacc.yy"
    { (yyval.item)= new Item_int((char*) "FALSE",0,1); }
    break;

  case 1737:
#line 9037 "sql_yacc.yy"
    { (yyval.item)= new Item_int((char*) "TRUE",1,1); }
    break;

  case 1738:
#line 9038 "sql_yacc.yy"
    { (yyval.item) =	new Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);}
    break;

  case 1739:
#line 9039 "sql_yacc.yy"
    { (yyval.item)= new Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1740:
#line 9041 "sql_yacc.yy"
    {
	    Item *tmp= new Item_hex_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    /*
	      it is OK only emulate fix_fieds, because we need only
              value of constant
	    */
	    String *str= tmp ?
	      tmp->quick_fix_field(), tmp->val_str((String*) 0) :
	      (String*) 0;
	    (yyval.item)= new Item_string(str ? str->ptr() : "",
				str ? str->length() : 0,
				Lex->charset);
	  }
    break;

  case 1741:
#line 9055 "sql_yacc.yy"
    {
	    Item *tmp= new Item_bin_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    /*
	      it is OK only emulate fix_fieds, because we need only
              value of constant
	    */
	    String *str= tmp ?
	      tmp->quick_fix_field(), tmp->val_str((String*) 0) :
	      (String*) 0;
	    (yyval.item)= new Item_string(str ? str->ptr() : "",
				str ? str->length() : 0,
				Lex->charset);
          }
    break;

  case 1742:
#line 9068 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 1743:
#line 9069 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 1744:
#line 9070 "sql_yacc.yy"
    { (yyval.item) = (yyvsp[0].item); }
    break;

  case 1745:
#line 9073 "sql_yacc.yy"
    { int error; (yyval.item_num) = new Item_int((yyvsp[0].lex_str).str, (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error), (yyvsp[0].lex_str).length); }
    break;

  case 1746:
#line 9074 "sql_yacc.yy"
    { int error; (yyval.item_num) = new Item_int((yyvsp[0].lex_str).str, (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error), (yyvsp[0].lex_str).length); }
    break;

  case 1747:
#line 9075 "sql_yacc.yy"
    { (yyval.item_num) =	new Item_uint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length); }
    break;

  case 1748:
#line 9077 "sql_yacc.yy"
    {
           (yyval.item_num)= new Item_decimal((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, YYTHD->charset());
	   if (YYTHD->net.report_error)
	   {
	     YYABORT;
	   }
	}
    break;

  case 1749:
#line 9085 "sql_yacc.yy"
    {
	   (yyval.item_num) =	new Item_float((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	   if (YYTHD->net.report_error)
	   {
	     YYABORT;
	   }
	}
    break;

  case 1750:
#line 9099 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 1751:
#line 9100 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 1752:
#line 9104 "sql_yacc.yy"
    {
          SELECT_LEX *sel= Select;
	  (yyval.item) = new Item_field(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, "*");
	  sel->with_wild++;
	}
    break;

  case 1753:
#line 9110 "sql_yacc.yy"
    {
          SELECT_LEX *sel= Select;
	  (yyval.item) = new Item_field(Lex->current_context(), (YYTHD->client_capabilities &
                             CLIENT_NO_SCHEMA ? NullS : (yyvsp[-4].lex_str).str),
                             (yyvsp[-2].lex_str).str,"*");
	  sel->with_wild++;
	}
    break;

  case 1754:
#line 9120 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 1755:
#line 9124 "sql_yacc.yy"
    {
	  sp_pvar_t *spv;
	  LEX *lex = Lex;
          sp_pcontext *spc = lex->spcont;
	  if (spc && (spv = spc->find_pvar(&(yyvsp[0].lex_str))))
	  {
            /* We're compiling a stored procedure and found a variable */
            Item_splocal *splocal;
            splocal= new Item_splocal((yyvsp[0].lex_str), spv->offset, spv->type,
                                      lex->tok_start_prev - 
                                      lex->sphead->m_tmp_query);
#ifndef DBUG_OFF
            if (splocal)
              splocal->m_sp= lex->sphead;
#endif
	    (yyval.item) = (Item*) splocal;
            lex->variables_used= 1;
	    lex->safe_to_cache_query=0;
	  }
	  else
	  {
	    SELECT_LEX *sel=Select;
	    (yyval.item)= (sel->parsing_place != IN_HAVING ||
	         sel->get_in_sum_expr() > 0) ?
                 (Item*) new Item_field(Lex->current_context(), NullS, NullS, (yyvsp[0].lex_str).str) :
	         (Item*) new Item_ref(Lex->current_context(), NullS, NullS, (yyvsp[0].lex_str).str);
	  }
        }
    break;

  case 1756:
#line 9152 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1757:
#line 9157 "sql_yacc.yy"
    {
	  SELECT_LEX *sel=Select;
	  (yyval.item)= (sel->parsing_place != IN_HAVING ||
	       sel->get_in_sum_expr() > 0) ?
              (Item*) new Item_field(Lex->current_context(), NullS, NullS, (yyvsp[0].lex_str).str) :
	      (Item*) new Item_ref(Lex->current_context(), NullS, NullS, (yyvsp[0].lex_str).str);
	}
    break;

  case 1758:
#line 9164 "sql_yacc.yy"
    { (yyval.item)= (yyvsp[0].item); }
    break;

  case 1759:
#line 9169 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;

          /*
            FIXME This will work ok in simple_ident_nospvar case because
            we can't meet simple_ident_nospvar in trigger now. But it
            should be changed in future.
          */
          if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
              (!my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "NEW") ||
               !my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "OLD")))
          {
            Item_trigger_field *trg_fld;
            bool new_row= ((yyvsp[-2].lex_str).str[0]=='N' || (yyvsp[-2].lex_str).str[0]=='n');

            if (lex->trg_chistics.event == TRG_EVENT_INSERT &&
                !new_row)
            {
              my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "OLD", "on INSERT");
              YYABORT;
            }

            if (lex->trg_chistics.event == TRG_EVENT_DELETE &&
                new_row)
            {
              my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "NEW", "on DELETE");
              YYABORT;
            }

            if (!(trg_fld= new Item_trigger_field(Lex->current_context(),
                                                  new_row ?
                                                  Item_trigger_field::NEW_ROW:
                                                  Item_trigger_field::OLD_ROW,
                                                  (yyvsp[0].lex_str).str,
                                                  Item_trigger_field::AT_READ)))
              YYABORT;

            /*
              Let us add this item to list of all Item_trigger_field objects
              in trigger.
            */
            lex->trg_table_fields.link_in_list((byte *)trg_fld,
              (byte**)&trg_fld->next_trg_field);

            (yyval.item)= (Item *)trg_fld;
          }
          else
          {
	    SELECT_LEX *sel= lex->current_select;
	    if (sel->no_table_names_allowed)
	    {
	      my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[-2].lex_str).str, thd->where);
	    }
	    (yyval.item)= (sel->parsing_place != IN_HAVING ||
	         sel->get_in_sum_expr() > 0) ?
	        (Item*) new Item_field(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str) :
	        (Item*) new Item_ref(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
          }
        }
    break;

  case 1760:
#line 9231 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (sel->no_table_names_allowed)
	  {
	    my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                     MYF(0), (yyvsp[-2].lex_str).str, thd->where);
	  }
	  (yyval.item)= (sel->parsing_place != IN_HAVING ||
	       sel->get_in_sum_expr() > 0) ?
	      (Item*) new Item_field(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str) :
              (Item*) new Item_ref(Lex->current_context(), NullS, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
	}
    break;

  case 1761:
#line 9246 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  SELECT_LEX *sel= lex->current_select;
	  if (sel->no_table_names_allowed)
	  {
	    my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                     MYF(0), (yyvsp[-2].lex_str).str, thd->where);
	  }
	  (yyval.item)= (sel->parsing_place != IN_HAVING ||
	       sel->get_in_sum_expr() > 0) ?
	      (Item*) new Item_field(Lex->current_context(),
                                     (YYTHD->client_capabilities &
				      CLIENT_NO_SCHEMA ? NullS : (yyvsp[-4].lex_str).str),
				     (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str) :
	      (Item*) new Item_ref(Lex->current_context(),
                                   (YYTHD->client_capabilities &
				    CLIENT_NO_SCHEMA ? NullS : (yyvsp[-4].lex_str).str),
                                   (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
	}
    break;

  case 1762:
#line 9269 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1763:
#line 9271 "sql_yacc.yy"
    {
            TABLE_LIST *table= (TABLE_LIST*) Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[-4].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].lex_str).str);
              YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[-2].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].lex_str).str);
              YYABORT;
            }
            (yyval.lex_str)=(yyvsp[0].lex_str);
          }
    break;

  case 1764:
#line 9287 "sql_yacc.yy"
    {
            TABLE_LIST *table= (TABLE_LIST*) Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[-2].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].lex_str).str);
              YYABORT;
            }
            (yyval.lex_str)=(yyvsp[0].lex_str);
          }
    break;

  case 1765:
#line 9296 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1766:
#line 9299 "sql_yacc.yy"
    { (yyval.table)=new Table_ident((yyvsp[0].lex_str)); }
    break;

  case 1767:
#line 9300 "sql_yacc.yy"
    { (yyval.table)=new Table_ident(YYTHD, (yyvsp[-2].lex_str),(yyvsp[0].lex_str),0);}
    break;

  case 1768:
#line 9301 "sql_yacc.yy"
    { (yyval.table)=new Table_ident((yyvsp[0].lex_str));}
    break;

  case 1769:
#line 9305 "sql_yacc.yy"
    { LEX_STRING db={(char*) any_db,3}; (yyval.table)=new Table_ident(YYTHD, db,(yyvsp[0].lex_str),0); }
    break;

  case 1770:
#line 9309 "sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
    break;

  case 1771:
#line 9311 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    if (thd->charset_is_system_charset)
            {
              CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              uint wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lex_str).str,
                                                   (yyvsp[0].lex_str).str+(yyvsp[0].lex_str).length,
                                                   (yyvsp[0].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lex_str).length)
              {
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, (yyvsp[0].lex_str).str + wlen);
                YYABORT;
              }
	      (yyval.lex_str)= (yyvsp[0].lex_str);
            }
	    else
	      thd->convert_string(&(yyval.lex_str), system_charset_info,
				  (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset());
	  }
    break;

  case 1772:
#line 9336 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (thd->charset_is_system_charset)
	    (yyval.lex_str)= (yyvsp[0].lex_str);
	  else
	    thd->convert_string(&(yyval.lex_str), system_charset_info,
				(yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset());
	}
    break;

  case 1773:
#line 9348 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (thd->charset_is_collation_connection)
	    (yyval.lex_str)= (yyvsp[0].lex_str);
	  else
	    thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
				(yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset());
	}
    break;

  case 1774:
#line 9361 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (thd->charset_is_character_set_filesystem)
	    (yyval.lex_str)= (yyvsp[0].lex_str);
	  else
	    thd->convert_string(&(yyval.lex_str), thd->variables.character_set_filesystem,
				(yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset());
	}
    break;

  case 1775:
#line 9372 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 1776:
#line 9374 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  (yyval.lex_str).str= thd->strmake("read_only",9);
	  (yyval.lex_str).length= 9;
	}
    break;

  case 1777:
#line 9380 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  (yyval.lex_str).str=    thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length);
	  (yyval.lex_str).length= (yyvsp[0].symbol).length;
	}
    break;

  case 1778:
#line 9388 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
    break;

  case 1779:
#line 9390 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  (yyval.lex_str).str=    thd->strmake((yyvsp[0].symbol).str, (yyvsp[0].symbol).length);
	  (yyval.lex_str).length= (yyvsp[0].symbol).length;
	}
    break;

  case 1780:
#line 9398 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1781:
#line 9399 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1782:
#line 9400 "sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
    break;

  case 1783:
#line 9404 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
	    YYABORT;
	  (yyval.lex_user)->user = (yyvsp[0].lex_str);
	  (yyval.lex_user)->host.str= (char *) "%";
	  (yyval.lex_user)->host.length= 1;
	}
    break;

  case 1784:
#line 9413 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
	      YYABORT;
	    (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);
	  }
    break;

  case 1785:
#line 9420 "sql_yacc.yy"
    {
          THD *thd= YYTHD;
          Security_context *sctx= thd->security_ctx;
          if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
            YYABORT;
          (yyval.lex_user)->user.str= sctx->priv_user;
          (yyval.lex_user)->user.length= strlen(sctx->priv_user);
          if (*sctx->priv_host != 0)
          {
            (yyval.lex_user)->host.str= sctx->priv_host;
            (yyval.lex_user)->host.length= strlen(sctx->priv_host);
          }
          else
          {
            (yyval.lex_user)->host.str= (char *) "%";
            (yyval.lex_user)->host.length= 1;
          }
	}
    break;

  case 1786:
#line 9441 "sql_yacc.yy"
    {}
    break;

  case 1787:
#line 9442 "sql_yacc.yy"
    {}
    break;

  case 1788:
#line 9443 "sql_yacc.yy"
    {}
    break;

  case 1789:
#line 9444 "sql_yacc.yy"
    {}
    break;

  case 1790:
#line 9445 "sql_yacc.yy"
    {}
    break;

  case 1791:
#line 9446 "sql_yacc.yy"
    {}
    break;

  case 1792:
#line 9447 "sql_yacc.yy"
    {}
    break;

  case 1793:
#line 9448 "sql_yacc.yy"
    {}
    break;

  case 1794:
#line 9449 "sql_yacc.yy"
    {}
    break;

  case 1795:
#line 9450 "sql_yacc.yy"
    {}
    break;

  case 1796:
#line 9451 "sql_yacc.yy"
    {}
    break;

  case 1797:
#line 9452 "sql_yacc.yy"
    {}
    break;

  case 1798:
#line 9453 "sql_yacc.yy"
    {}
    break;

  case 1799:
#line 9454 "sql_yacc.yy"
    {}
    break;

  case 1800:
#line 9455 "sql_yacc.yy"
    {}
    break;

  case 1801:
#line 9456 "sql_yacc.yy"
    {}
    break;

  case 1802:
#line 9457 "sql_yacc.yy"
    {}
    break;

  case 1803:
#line 9458 "sql_yacc.yy"
    {}
    break;

  case 1804:
#line 9459 "sql_yacc.yy"
    {}
    break;

  case 1805:
#line 9460 "sql_yacc.yy"
    {}
    break;

  case 1806:
#line 9461 "sql_yacc.yy"
    {}
    break;

  case 1807:
#line 9462 "sql_yacc.yy"
    {}
    break;

  case 1808:
#line 9463 "sql_yacc.yy"
    {}
    break;

  case 1809:
#line 9464 "sql_yacc.yy"
    {}
    break;

  case 1810:
#line 9465 "sql_yacc.yy"
    {}
    break;

  case 1811:
#line 9466 "sql_yacc.yy"
    {}
    break;

  case 1812:
#line 9467 "sql_yacc.yy"
    {}
    break;

  case 1813:
#line 9468 "sql_yacc.yy"
    {}
    break;

  case 1814:
#line 9469 "sql_yacc.yy"
    {}
    break;

  case 1815:
#line 9470 "sql_yacc.yy"
    {}
    break;

  case 1816:
#line 9471 "sql_yacc.yy"
    {}
    break;

  case 1817:
#line 9472 "sql_yacc.yy"
    {}
    break;

  case 1818:
#line 9473 "sql_yacc.yy"
    {}
    break;

  case 1819:
#line 9474 "sql_yacc.yy"
    {}
    break;

  case 1820:
#line 9475 "sql_yacc.yy"
    {}
    break;

  case 1821:
#line 9476 "sql_yacc.yy"
    {}
    break;

  case 1822:
#line 9477 "sql_yacc.yy"
    {}
    break;

  case 1823:
#line 9478 "sql_yacc.yy"
    {}
    break;

  case 1824:
#line 9479 "sql_yacc.yy"
    {}
    break;

  case 1825:
#line 9480 "sql_yacc.yy"
    {}
    break;

  case 1826:
#line 9481 "sql_yacc.yy"
    {}
    break;

  case 1827:
#line 9482 "sql_yacc.yy"
    {}
    break;

  case 1828:
#line 9483 "sql_yacc.yy"
    {}
    break;

  case 1829:
#line 9493 "sql_yacc.yy"
    {}
    break;

  case 1830:
#line 9494 "sql_yacc.yy"
    {}
    break;

  case 1831:
#line 9495 "sql_yacc.yy"
    {}
    break;

  case 1832:
#line 9496 "sql_yacc.yy"
    {}
    break;

  case 1833:
#line 9497 "sql_yacc.yy"
    {}
    break;

  case 1834:
#line 9498 "sql_yacc.yy"
    {}
    break;

  case 1835:
#line 9499 "sql_yacc.yy"
    {}
    break;

  case 1836:
#line 9500 "sql_yacc.yy"
    {}
    break;

  case 1837:
#line 9501 "sql_yacc.yy"
    {}
    break;

  case 1838:
#line 9502 "sql_yacc.yy"
    {}
    break;

  case 1839:
#line 9503 "sql_yacc.yy"
    {}
    break;

  case 1840:
#line 9504 "sql_yacc.yy"
    {}
    break;

  case 1841:
#line 9505 "sql_yacc.yy"
    {}
    break;

  case 1842:
#line 9506 "sql_yacc.yy"
    {}
    break;

  case 1843:
#line 9507 "sql_yacc.yy"
    {}
    break;

  case 1844:
#line 9508 "sql_yacc.yy"
    {}
    break;

  case 1845:
#line 9509 "sql_yacc.yy"
    {}
    break;

  case 1846:
#line 9510 "sql_yacc.yy"
    {}
    break;

  case 1847:
#line 9511 "sql_yacc.yy"
    {}
    break;

  case 1848:
#line 9512 "sql_yacc.yy"
    {}
    break;

  case 1849:
#line 9513 "sql_yacc.yy"
    {}
    break;

  case 1850:
#line 9514 "sql_yacc.yy"
    {}
    break;

  case 1851:
#line 9515 "sql_yacc.yy"
    {}
    break;

  case 1852:
#line 9516 "sql_yacc.yy"
    {}
    break;

  case 1853:
#line 9517 "sql_yacc.yy"
    {}
    break;

  case 1854:
#line 9518 "sql_yacc.yy"
    {}
    break;

  case 1855:
#line 9519 "sql_yacc.yy"
    {}
    break;

  case 1856:
#line 9520 "sql_yacc.yy"
    {}
    break;

  case 1857:
#line 9521 "sql_yacc.yy"
    {}
    break;

  case 1858:
#line 9522 "sql_yacc.yy"
    {}
    break;

  case 1859:
#line 9523 "sql_yacc.yy"
    {}
    break;

  case 1860:
#line 9524 "sql_yacc.yy"
    {}
    break;

  case 1861:
#line 9525 "sql_yacc.yy"
    {}
    break;

  case 1862:
#line 9526 "sql_yacc.yy"
    {}
    break;

  case 1863:
#line 9527 "sql_yacc.yy"
    {}
    break;

  case 1864:
#line 9528 "sql_yacc.yy"
    {}
    break;

  case 1865:
#line 9529 "sql_yacc.yy"
    {}
    break;

  case 1866:
#line 9530 "sql_yacc.yy"
    {}
    break;

  case 1867:
#line 9531 "sql_yacc.yy"
    {}
    break;

  case 1868:
#line 9532 "sql_yacc.yy"
    {}
    break;

  case 1869:
#line 9533 "sql_yacc.yy"
    {}
    break;

  case 1870:
#line 9534 "sql_yacc.yy"
    {}
    break;

  case 1871:
#line 9535 "sql_yacc.yy"
    {}
    break;

  case 1872:
#line 9536 "sql_yacc.yy"
    {}
    break;

  case 1873:
#line 9537 "sql_yacc.yy"
    {}
    break;

  case 1874:
#line 9538 "sql_yacc.yy"
    {}
    break;

  case 1875:
#line 9539 "sql_yacc.yy"
    {}
    break;

  case 1876:
#line 9540 "sql_yacc.yy"
    {}
    break;

  case 1877:
#line 9541 "sql_yacc.yy"
    {}
    break;

  case 1878:
#line 9542 "sql_yacc.yy"
    {}
    break;

  case 1879:
#line 9543 "sql_yacc.yy"
    {}
    break;

  case 1880:
#line 9544 "sql_yacc.yy"
    {}
    break;

  case 1881:
#line 9545 "sql_yacc.yy"
    {}
    break;

  case 1882:
#line 9546 "sql_yacc.yy"
    {}
    break;

  case 1883:
#line 9547 "sql_yacc.yy"
    {}
    break;

  case 1884:
#line 9548 "sql_yacc.yy"
    {}
    break;

  case 1885:
#line 9549 "sql_yacc.yy"
    {}
    break;

  case 1886:
#line 9550 "sql_yacc.yy"
    {}
    break;

  case 1887:
#line 9551 "sql_yacc.yy"
    {}
    break;

  case 1888:
#line 9552 "sql_yacc.yy"
    {}
    break;

  case 1889:
#line 9553 "sql_yacc.yy"
    {}
    break;

  case 1890:
#line 9554 "sql_yacc.yy"
    {}
    break;

  case 1891:
#line 9555 "sql_yacc.yy"
    {}
    break;

  case 1892:
#line 9556 "sql_yacc.yy"
    {}
    break;

  case 1893:
#line 9557 "sql_yacc.yy"
    {}
    break;

  case 1894:
#line 9558 "sql_yacc.yy"
    {}
    break;

  case 1895:
#line 9559 "sql_yacc.yy"
    {}
    break;

  case 1896:
#line 9560 "sql_yacc.yy"
    {}
    break;

  case 1897:
#line 9561 "sql_yacc.yy"
    {}
    break;

  case 1898:
#line 9562 "sql_yacc.yy"
    {}
    break;

  case 1899:
#line 9563 "sql_yacc.yy"
    {}
    break;

  case 1900:
#line 9564 "sql_yacc.yy"
    {}
    break;

  case 1901:
#line 9565 "sql_yacc.yy"
    {}
    break;

  case 1902:
#line 9566 "sql_yacc.yy"
    {}
    break;

  case 1903:
#line 9567 "sql_yacc.yy"
    {}
    break;

  case 1904:
#line 9568 "sql_yacc.yy"
    {}
    break;

  case 1905:
#line 9569 "sql_yacc.yy"
    {}
    break;

  case 1906:
#line 9570 "sql_yacc.yy"
    {}
    break;

  case 1907:
#line 9571 "sql_yacc.yy"
    {}
    break;

  case 1908:
#line 9572 "sql_yacc.yy"
    {}
    break;

  case 1909:
#line 9573 "sql_yacc.yy"
    {}
    break;

  case 1910:
#line 9574 "sql_yacc.yy"
    {}
    break;

  case 1911:
#line 9575 "sql_yacc.yy"
    {}
    break;

  case 1912:
#line 9576 "sql_yacc.yy"
    {}
    break;

  case 1913:
#line 9577 "sql_yacc.yy"
    {}
    break;

  case 1914:
#line 9578 "sql_yacc.yy"
    {}
    break;

  case 1915:
#line 9579 "sql_yacc.yy"
    {}
    break;

  case 1916:
#line 9580 "sql_yacc.yy"
    {}
    break;

  case 1917:
#line 9581 "sql_yacc.yy"
    {}
    break;

  case 1918:
#line 9582 "sql_yacc.yy"
    {}
    break;

  case 1919:
#line 9583 "sql_yacc.yy"
    {}
    break;

  case 1920:
#line 9584 "sql_yacc.yy"
    {}
    break;

  case 1921:
#line 9585 "sql_yacc.yy"
    {}
    break;

  case 1922:
#line 9586 "sql_yacc.yy"
    {}
    break;

  case 1923:
#line 9587 "sql_yacc.yy"
    {}
    break;

  case 1924:
#line 9588 "sql_yacc.yy"
    {}
    break;

  case 1925:
#line 9589 "sql_yacc.yy"
    {}
    break;

  case 1926:
#line 9590 "sql_yacc.yy"
    {}
    break;

  case 1927:
#line 9591 "sql_yacc.yy"
    {}
    break;

  case 1928:
#line 9592 "sql_yacc.yy"
    {}
    break;

  case 1929:
#line 9593 "sql_yacc.yy"
    {}
    break;

  case 1930:
#line 9594 "sql_yacc.yy"
    {}
    break;

  case 1931:
#line 9595 "sql_yacc.yy"
    {}
    break;

  case 1932:
#line 9596 "sql_yacc.yy"
    {}
    break;

  case 1933:
#line 9597 "sql_yacc.yy"
    {}
    break;

  case 1934:
#line 9598 "sql_yacc.yy"
    {}
    break;

  case 1935:
#line 9599 "sql_yacc.yy"
    {}
    break;

  case 1936:
#line 9600 "sql_yacc.yy"
    {}
    break;

  case 1937:
#line 9601 "sql_yacc.yy"
    {}
    break;

  case 1938:
#line 9602 "sql_yacc.yy"
    {}
    break;

  case 1939:
#line 9603 "sql_yacc.yy"
    {}
    break;

  case 1940:
#line 9604 "sql_yacc.yy"
    {}
    break;

  case 1941:
#line 9605 "sql_yacc.yy"
    {}
    break;

  case 1942:
#line 9606 "sql_yacc.yy"
    {}
    break;

  case 1943:
#line 9607 "sql_yacc.yy"
    {}
    break;

  case 1944:
#line 9608 "sql_yacc.yy"
    {}
    break;

  case 1945:
#line 9609 "sql_yacc.yy"
    {}
    break;

  case 1946:
#line 9610 "sql_yacc.yy"
    {}
    break;

  case 1947:
#line 9611 "sql_yacc.yy"
    {}
    break;

  case 1948:
#line 9612 "sql_yacc.yy"
    {}
    break;

  case 1949:
#line 9613 "sql_yacc.yy"
    {}
    break;

  case 1950:
#line 9614 "sql_yacc.yy"
    {}
    break;

  case 1951:
#line 9615 "sql_yacc.yy"
    {}
    break;

  case 1952:
#line 9616 "sql_yacc.yy"
    {}
    break;

  case 1953:
#line 9617 "sql_yacc.yy"
    {}
    break;

  case 1954:
#line 9618 "sql_yacc.yy"
    {}
    break;

  case 1955:
#line 9619 "sql_yacc.yy"
    {}
    break;

  case 1956:
#line 9620 "sql_yacc.yy"
    {}
    break;

  case 1957:
#line 9621 "sql_yacc.yy"
    {}
    break;

  case 1958:
#line 9622 "sql_yacc.yy"
    {}
    break;

  case 1959:
#line 9623 "sql_yacc.yy"
    {}
    break;

  case 1960:
#line 9624 "sql_yacc.yy"
    {}
    break;

  case 1961:
#line 9625 "sql_yacc.yy"
    {}
    break;

  case 1962:
#line 9626 "sql_yacc.yy"
    {}
    break;

  case 1963:
#line 9627 "sql_yacc.yy"
    {}
    break;

  case 1964:
#line 9628 "sql_yacc.yy"
    {}
    break;

  case 1965:
#line 9629 "sql_yacc.yy"
    {}
    break;

  case 1966:
#line 9630 "sql_yacc.yy"
    {}
    break;

  case 1967:
#line 9631 "sql_yacc.yy"
    {}
    break;

  case 1968:
#line 9632 "sql_yacc.yy"
    {}
    break;

  case 1969:
#line 9633 "sql_yacc.yy"
    {}
    break;

  case 1970:
#line 9634 "sql_yacc.yy"
    {}
    break;

  case 1971:
#line 9635 "sql_yacc.yy"
    {}
    break;

  case 1972:
#line 9636 "sql_yacc.yy"
    {}
    break;

  case 1973:
#line 9637 "sql_yacc.yy"
    {}
    break;

  case 1974:
#line 9638 "sql_yacc.yy"
    {}
    break;

  case 1975:
#line 9639 "sql_yacc.yy"
    {}
    break;

  case 1976:
#line 9640 "sql_yacc.yy"
    {}
    break;

  case 1977:
#line 9641 "sql_yacc.yy"
    {}
    break;

  case 1978:
#line 9642 "sql_yacc.yy"
    {}
    break;

  case 1979:
#line 9643 "sql_yacc.yy"
    {}
    break;

  case 1980:
#line 9644 "sql_yacc.yy"
    {}
    break;

  case 1981:
#line 9645 "sql_yacc.yy"
    {}
    break;

  case 1982:
#line 9646 "sql_yacc.yy"
    {}
    break;

  case 1983:
#line 9647 "sql_yacc.yy"
    {}
    break;

  case 1984:
#line 9648 "sql_yacc.yy"
    {}
    break;

  case 1985:
#line 9649 "sql_yacc.yy"
    {}
    break;

  case 1986:
#line 9650 "sql_yacc.yy"
    {}
    break;

  case 1987:
#line 9651 "sql_yacc.yy"
    {}
    break;

  case 1988:
#line 9652 "sql_yacc.yy"
    {}
    break;

  case 1989:
#line 9653 "sql_yacc.yy"
    {}
    break;

  case 1990:
#line 9654 "sql_yacc.yy"
    {}
    break;

  case 1991:
#line 9655 "sql_yacc.yy"
    {}
    break;

  case 1992:
#line 9656 "sql_yacc.yy"
    {}
    break;

  case 1993:
#line 9657 "sql_yacc.yy"
    {}
    break;

  case 1994:
#line 9658 "sql_yacc.yy"
    {}
    break;

  case 1995:
#line 9659 "sql_yacc.yy"
    {}
    break;

  case 1996:
#line 9660 "sql_yacc.yy"
    {}
    break;

  case 1997:
#line 9661 "sql_yacc.yy"
    {}
    break;

  case 1998:
#line 9662 "sql_yacc.yy"
    {}
    break;

  case 1999:
#line 9663 "sql_yacc.yy"
    {}
    break;

  case 2000:
#line 9664 "sql_yacc.yy"
    {}
    break;

  case 2001:
#line 9665 "sql_yacc.yy"
    {}
    break;

  case 2002:
#line 9666 "sql_yacc.yy"
    {}
    break;

  case 2003:
#line 9667 "sql_yacc.yy"
    {}
    break;

  case 2004:
#line 9668 "sql_yacc.yy"
    {}
    break;

  case 2005:
#line 9669 "sql_yacc.yy"
    {}
    break;

  case 2006:
#line 9670 "sql_yacc.yy"
    {}
    break;

  case 2007:
#line 9671 "sql_yacc.yy"
    {}
    break;

  case 2008:
#line 9672 "sql_yacc.yy"
    {}
    break;

  case 2009:
#line 9673 "sql_yacc.yy"
    {}
    break;

  case 2010:
#line 9674 "sql_yacc.yy"
    {}
    break;

  case 2011:
#line 9675 "sql_yacc.yy"
    {}
    break;

  case 2012:
#line 9676 "sql_yacc.yy"
    {}
    break;

  case 2013:
#line 9677 "sql_yacc.yy"
    {}
    break;

  case 2014:
#line 9678 "sql_yacc.yy"
    {}
    break;

  case 2015:
#line 9679 "sql_yacc.yy"
    {}
    break;

  case 2016:
#line 9680 "sql_yacc.yy"
    {}
    break;

  case 2017:
#line 9681 "sql_yacc.yy"
    {}
    break;

  case 2018:
#line 9682 "sql_yacc.yy"
    {}
    break;

  case 2019:
#line 9683 "sql_yacc.yy"
    {}
    break;

  case 2020:
#line 9684 "sql_yacc.yy"
    {}
    break;

  case 2021:
#line 9685 "sql_yacc.yy"
    {}
    break;

  case 2022:
#line 9686 "sql_yacc.yy"
    {}
    break;

  case 2023:
#line 9687 "sql_yacc.yy"
    {}
    break;

  case 2024:
#line 9688 "sql_yacc.yy"
    {}
    break;

  case 2025:
#line 9689 "sql_yacc.yy"
    {}
    break;

  case 2026:
#line 9690 "sql_yacc.yy"
    {}
    break;

  case 2027:
#line 9691 "sql_yacc.yy"
    {}
    break;

  case 2028:
#line 9692 "sql_yacc.yy"
    {}
    break;

  case 2029:
#line 9693 "sql_yacc.yy"
    {}
    break;

  case 2030:
#line 9694 "sql_yacc.yy"
    {}
    break;

  case 2031:
#line 9695 "sql_yacc.yy"
    {}
    break;

  case 2032:
#line 9696 "sql_yacc.yy"
    {}
    break;

  case 2033:
#line 9697 "sql_yacc.yy"
    {}
    break;

  case 2034:
#line 9698 "sql_yacc.yy"
    {}
    break;

  case 2035:
#line 9699 "sql_yacc.yy"
    {}
    break;

  case 2036:
#line 9700 "sql_yacc.yy"
    {}
    break;

  case 2037:
#line 9701 "sql_yacc.yy"
    {}
    break;

  case 2038:
#line 9702 "sql_yacc.yy"
    {}
    break;

  case 2039:
#line 9703 "sql_yacc.yy"
    {}
    break;

  case 2040:
#line 9704 "sql_yacc.yy"
    {}
    break;

  case 2041:
#line 9705 "sql_yacc.yy"
    {}
    break;

  case 2042:
#line 9706 "sql_yacc.yy"
    {}
    break;

  case 2043:
#line 9707 "sql_yacc.yy"
    {}
    break;

  case 2044:
#line 9708 "sql_yacc.yy"
    {}
    break;

  case 2045:
#line 9709 "sql_yacc.yy"
    {}
    break;

  case 2046:
#line 9710 "sql_yacc.yy"
    {}
    break;

  case 2047:
#line 9711 "sql_yacc.yy"
    {}
    break;

  case 2048:
#line 9712 "sql_yacc.yy"
    {}
    break;

  case 2049:
#line 9713 "sql_yacc.yy"
    {}
    break;

  case 2050:
#line 9714 "sql_yacc.yy"
    {}
    break;

  case 2051:
#line 9715 "sql_yacc.yy"
    {}
    break;

  case 2052:
#line 9716 "sql_yacc.yy"
    {}
    break;

  case 2053:
#line 9717 "sql_yacc.yy"
    {}
    break;

  case 2054:
#line 9718 "sql_yacc.yy"
    {}
    break;

  case 2055:
#line 9719 "sql_yacc.yy"
    {}
    break;

  case 2056:
#line 9720 "sql_yacc.yy"
    {}
    break;

  case 2057:
#line 9721 "sql_yacc.yy"
    {}
    break;

  case 2058:
#line 9722 "sql_yacc.yy"
    {}
    break;

  case 2059:
#line 9723 "sql_yacc.yy"
    {}
    break;

  case 2060:
#line 9724 "sql_yacc.yy"
    {}
    break;

  case 2061:
#line 9725 "sql_yacc.yy"
    {}
    break;

  case 2062:
#line 9726 "sql_yacc.yy"
    {}
    break;

  case 2063:
#line 9727 "sql_yacc.yy"
    {}
    break;

  case 2064:
#line 9728 "sql_yacc.yy"
    {}
    break;

  case 2065:
#line 9729 "sql_yacc.yy"
    {}
    break;

  case 2066:
#line 9730 "sql_yacc.yy"
    {}
    break;

  case 2067:
#line 9731 "sql_yacc.yy"
    {}
    break;

  case 2068:
#line 9732 "sql_yacc.yy"
    {}
    break;

  case 2069:
#line 9733 "sql_yacc.yy"
    {}
    break;

  case 2070:
#line 9734 "sql_yacc.yy"
    {}
    break;

  case 2071:
#line 9735 "sql_yacc.yy"
    {}
    break;

  case 2072:
#line 9736 "sql_yacc.yy"
    {}
    break;

  case 2073:
#line 9743 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_SET_OPTION;
	  mysql_init_select(lex);
	  lex->option_type=OPT_SESSION;
	  lex->var_list.empty();
          lex->one_shot_set= 0;
	}
    break;

  case 2074:
#line 9752 "sql_yacc.yy"
    {}
    break;

  case 2075:
#line 9756 "sql_yacc.yy"
    {}
    break;

  case 2076:
#line 9757 "sql_yacc.yy"
    {}
    break;

  case 2079:
#line 9764 "sql_yacc.yy"
    {
          if (Lex->sphead)
          {
            /*
              If we are in SP we want have own LEX for each assignment.
              This is mostly because it is hard for several sp_instr_set
              and sp_instr_set_trigger instructions share one LEX.
              (Well, it is theoretically possible but adds some extra
               overhead on preparation for execution stage and IMO less
               robust).

              QQ: May be we should simply prohibit group assignments in SP?
            */
            LEX *lex;
            Lex->sphead->reset_lex(YYTHD);
            lex= Lex;

            /* Set new LEX as if we at start of set rule. */
	    lex->sql_command= SQLCOM_SET_OPTION;
	    mysql_init_select(lex);
	    lex->option_type=OPT_SESSION;
	    lex->var_list.empty();
            lex->one_shot_set= 0;
	    lex->sphead->m_tmp_query= lex->tok_start;
          }
        }
    break;

  case 2080:
#line 9791 "sql_yacc.yy"
    {
          LEX *lex= Lex;

          if (lex->sphead)
          {
            sp_head *sp= lex->sphead;

	    if (!lex->var_list.is_empty())
	    {
              /*
                We have assignment to user or system variable or
                option setting, so we should construct sp_instr_stmt
                for it.
              */
              LEX_STRING qbuff;
	      sp_instr_stmt *i;

              if (!(i= new sp_instr_stmt(sp->instructions(), lex->spcont,
                                         lex)))
                YYABORT;

              if (lex->ptr - lex->tok_end > 1)
                qbuff.length= lex->ptr - sp->m_tmp_query;
              else
                qbuff.length= lex->tok_end - sp->m_tmp_query;

              if (!(qbuff.str= alloc_root(YYTHD->mem_root, qbuff.length + 5)))
                YYABORT;

              strmake(strmake(qbuff.str, "SET ", 4), (char *)sp->m_tmp_query,
                      qbuff.length);
              qbuff.length+= 4;
              i->m_query= qbuff;
              sp->add_instr(i);
            }
            lex->sphead->restore_lex(YYTHD);
          }
        }
    break;

  case 2081:
#line 9831 "sql_yacc.yy"
    {}
    break;

  case 2082:
#line 9832 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2083:
#line 9833 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2084:
#line 9834 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2085:
#line 9838 "sql_yacc.yy"
    { (yyval.num)= OPT_DEFAULT; }
    break;

  case 2086:
#line 9839 "sql_yacc.yy"
    { Lex->one_shot_set= 1; (yyval.num)= OPT_SESSION; }
    break;

  case 2087:
#line 9843 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2088:
#line 9844 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2089:
#line 9845 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2090:
#line 9846 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2091:
#line 9850 "sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2092:
#line 9851 "sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2093:
#line 9852 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2094:
#line 9853 "sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2097:
#line 9862 "sql_yacc.yy"
    {
          LEX *lex=Lex;

          if ((yyvsp[-2].variable).var == trg_new_row_fake_var)
          {
            /* We are in trigger and assigning value to field of new row */
            Item *it;
            Item_trigger_field *trg_fld;
            sp_instr_set_trigger_field *sp_fld;
	    LINT_INIT(sp_fld);
            if ((yyvsp[-3].var_type))
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            if ((yyvsp[0].item))
              it= (yyvsp[0].item);
            else
            {
              /* QQ: Shouldn't this be field's default value ? */
              it= new Item_null();
            }

            if (!(trg_fld= new Item_trigger_field(Lex->current_context(),
                                                  Item_trigger_field::NEW_ROW,
                                                  (yyvsp[-2].variable).base_name.str,
                                                  Item_trigger_field::AT_UPDATE)
                                                  ) ||
                !(sp_fld= new sp_instr_set_trigger_field(lex->sphead->
                          	                         instructions(),
                                	                 lex->spcont,
							 trg_fld,
                                        	         it, lex)))
              YYABORT;

            /*
              Let us add this item to list of all Item_trigger_field
              objects in trigger.
            */
            lex->trg_table_fields.link_in_list((byte *)trg_fld,
                                    (byte **)&trg_fld->next_trg_field);

            lex->sphead->add_instr(sp_fld);
          }
          else if ((yyvsp[-2].variable).var)
          { /* System variable */
            if ((yyvsp[-3].var_type))
              lex->option_type= (yyvsp[-3].var_type);
            lex->var_list.push_back(new set_var(lex->option_type, (yyvsp[-2].variable).var,
                                    &(yyvsp[-2].variable).base_name, (yyvsp[0].item)));
          }
          else
          {
            /* An SP local variable */
            sp_pcontext *ctx= lex->spcont;
            sp_pvar_t *spv;
            sp_instr_set *sp_set;
            Item *it;
            if ((yyvsp[-3].var_type))
            {
              yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }

            spv= ctx->find_pvar(&(yyvsp[-2].variable).base_name);

            if ((yyvsp[0].item))
              it= (yyvsp[0].item);
            else if (spv->dflt)
              it= spv->dflt;
            else
              it= new Item_null();
            sp_set= new sp_instr_set(lex->sphead->instructions(), ctx,
                                     spv->offset, it, spv->type, lex, TRUE);
            lex->sphead->add_instr(sp_set);
          }
        }
    break;

  case 2098:
#line 9940 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->option_type= (yyvsp[-4].var_type);
	  lex->var_list.push_back(new set_var(lex->option_type,
                                              find_sys_var("tx_isolation"),
                                              &null_lex_str,
                                              new Item_int((int32) (yyvsp[0].tx_isolation))));
	}
    break;

  case 2099:
#line 9952 "sql_yacc.yy"
    {
          Lex->var_list.push_back(new set_var_user(new Item_func_set_user_var((yyvsp[-2].lex_str),(yyvsp[0].item))));
	}
    break;

  case 2100:
#line 9956 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    lex->var_list.push_back(new set_var((yyvsp[-3].var_type), (yyvsp[-2].variable).var, &(yyvsp[-2].variable).base_name, (yyvsp[0].item)));
	  }
    break;

  case 2101:
#line 9961 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= Lex;
	  (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
	  lex->var_list.push_back(new set_var_collation_client((yyvsp[0].charset),thd->variables.collation_database,(yyvsp[0].charset)));
	}
    break;

  case 2102:
#line 9968 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
	    LEX_STRING names;

	    names.str= (char *)"names";
	    names.length= 5;
	    if (spc && spc->find_pvar(&names))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              yyerror(ER(ER_SYNTAX_ERROR));

	    YYABORT;
	  }
    break;

  case 2103:
#line 9983 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  (yyvsp[-1].charset)= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
	  (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
	  if (!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset)))
	  {
	    my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                     (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname);
	    YYABORT;
	  }
	  lex->var_list.push_back(new set_var_collation_client((yyvsp[0].charset),(yyvsp[0].charset),(yyvsp[0].charset)));
	}
    break;

  case 2104:
#line 9996 "sql_yacc.yy"
    {
	    THD *thd=YYTHD;
	    LEX_USER *user;
	    LEX *lex= Lex;	    
            sp_pcontext *spc= lex->spcont;
	    LEX_STRING pw;

	    pw.str= (char *)"password";
	    pw.length= 8;
	    if (spc && spc->find_pvar(&pw))
	    {
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str);
	      YYABORT;
	    }
	    if (!(user=(LEX_USER*) thd->alloc(sizeof(LEX_USER))))
	      YYABORT;
	    user->host=null_lex_str;
	    user->user.str=thd->security_ctx->priv_user;
	    thd->lex->var_list.push_back(new set_var_password(user, (yyvsp[0].simple_string)));
	  }
    break;

  case 2105:
#line 10017 "sql_yacc.yy"
    {
	    Lex->var_list.push_back(new set_var_password((yyvsp[-2].lex_user),(yyvsp[0].simple_string)));
	  }
    break;

  case 2106:
#line 10024 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
          sp_pcontext *spc= lex->spcont;
	  sp_pvar_t *spv;

	  /* We have to lookup here since local vars can shadow sysvars */
	  if (!spc || !(spv = spc->find_pvar(&(yyvsp[0].lex_str))))
	  {
            /* Not an SP local variable */
	    sys_var *tmp=find_sys_var((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    if (!tmp)
	      YYABORT;
	    (yyval.variable).var= tmp;
	    (yyval.variable).base_name= null_lex_str;
            /*
              If this is time_zone variable we should open time zone
              describing tables 
            */
            if (tmp == &sys_time_zone &&
                lex->add_time_zone_tables_to_query_tables(YYTHD))
              YYABORT;
            else if (spc && tmp == &sys_autocommit)
            {
              /*
                We don't allow setting AUTOCOMMIT from a stored function
		or trigger.
              */
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            }
	  }
	  else
	  {
            /* An SP local variable */
	    (yyval.variable).var= NULL;
	    (yyval.variable).base_name= (yyvsp[0].lex_str);
	  }
	}
    break;

  case 2107:
#line 10062 "sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (check_reserved_words(&(yyvsp[-2].lex_str)))
            {
	      yyerror(ER(ER_SYNTAX_ERROR));
              YYABORT;
            }
            if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "NEW") || 
                 !my_strcasecmp(system_charset_info, (yyvsp[-2].lex_str).str, "OLD")))
            {
              if ((yyvsp[-2].lex_str).str[0]=='O' || (yyvsp[-2].lex_str).str[0]=='o')
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "OLD", "");
                YYABORT;
              }
              if (lex->trg_chistics.event == TRG_EVENT_DELETE)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0),
                         "NEW", "on DELETE");
                YYABORT;
              }
              if (lex->trg_chistics.action_time == TRG_ACTION_AFTER)
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "NEW", "after ");
                YYABORT;
              }
              /* This special combination will denote field of NEW row */
              (yyval.variable).var= trg_new_row_fake_var;
              (yyval.variable).base_name= (yyvsp[0].lex_str);
            }
            else
            {
              sys_var *tmp=find_sys_var((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
              if (!tmp)
                YYABORT;
              if (!tmp->is_struct())
                my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[0].lex_str).str);
              (yyval.variable).var= tmp;
              (yyval.variable).base_name= (yyvsp[-2].lex_str);
            }
	  }
    break;

  case 2108:
#line 10105 "sql_yacc.yy"
    {
	    sys_var *tmp=find_sys_var((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
	    if (!tmp)
	      YYABORT;
	    if (!tmp->is_struct())
	      my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[0].lex_str).str);
	    (yyval.variable).var= tmp;
	    (yyval.variable).base_name.str=    (char*) "default";
	    (yyval.variable).base_name.length= 7;
	  }
    break;

  case 2109:
#line 10118 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2110:
#line 10119 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2111:
#line 10120 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2112:
#line 10121 "sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2113:
#line 10125 "sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[0].lex_str).str;}
    break;

  case 2114:
#line 10127 "sql_yacc.yy"
    {
	    (yyval.simple_string)= (yyvsp[-1].lex_str).length ? YYTHD->variables.old_passwords ?
	        Item_func_old_password::alloc(YYTHD, (yyvsp[-1].lex_str).str) :
	        Item_func_password::alloc(YYTHD, (yyvsp[-1].lex_str).str) :
	      (yyvsp[-1].lex_str).str;
	  }
    break;

  case 2115:
#line 10134 "sql_yacc.yy"
    {
	    (yyval.simple_string)= (yyvsp[-1].lex_str).length ? Item_func_old_password::alloc(YYTHD, (yyvsp[-1].lex_str).str) :
	      (yyvsp[-1].lex_str).str;
	  }
    break;

  case 2116:
#line 10142 "sql_yacc.yy"
    { (yyval.item)=(yyvsp[0].item); }
    break;

  case 2117:
#line 10143 "sql_yacc.yy"
    { (yyval.item)=0; }
    break;

  case 2118:
#line 10144 "sql_yacc.yy"
    { (yyval.item)=new Item_string("ON",  2, system_charset_info); }
    break;

  case 2119:
#line 10145 "sql_yacc.yy"
    { (yyval.item)=new Item_string("ALL", 3, system_charset_info); }
    break;

  case 2120:
#line 10146 "sql_yacc.yy"
    { (yyval.item)=new Item_string("binary", 6, system_charset_info); }
    break;

  case 2121:
#line 10154 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
	    YYABORT;
	  }
	  lex->sql_command= SQLCOM_LOCK_TABLES;
	}
    break;

  case 2122:
#line 10165 "sql_yacc.yy"
    {}
    break;

  case 2127:
#line 10178 "sql_yacc.yy"
    {
	  if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), 0, (thr_lock_type) (yyvsp[0].num)))
	   YYABORT;
	}
    break;

  case 2128:
#line 10185 "sql_yacc.yy"
    { (yyval.num)=TL_READ_NO_INSERT; }
    break;

  case 2129:
#line 10186 "sql_yacc.yy"
    { (yyval.num)=YYTHD->update_lock_default; }
    break;

  case 2130:
#line 10187 "sql_yacc.yy"
    { (yyval.num)=TL_WRITE_LOW_PRIORITY; }
    break;

  case 2131:
#line 10188 "sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2132:
#line 10193 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
	    YYABORT;
	  }
	  lex->sql_command= SQLCOM_UNLOCK_TABLES;
	}
    break;

  case 2133:
#line 10204 "sql_yacc.yy"
    {}
    break;

  case 2134:
#line 10214 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_HA_OPEN;
	  if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
	    YYABORT;
	}
    break;

  case 2135:
#line 10226 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_HA_CLOSE;
	  if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-1].table), 0, 0))
	    YYABORT;
	}
    break;

  case 2136:
#line 10238 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->sphead)
	  {
	    my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
	    YYABORT;
	  }
	  lex->sql_command = SQLCOM_HA_READ;
	  lex->ha_rkey_mode= HA_READ_KEY_EXACT;	/* Avoid purify warnings */
	  lex->current_select->select_limit= new Item_int((int32) 1);
	  lex->current_select->offset_limit= 0;
	  if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[-1].table), 0, 0))
	    YYABORT;
        }
    break;

  case 2137:
#line 10252 "sql_yacc.yy"
    {}
    break;

  case 2138:
#line 10256 "sql_yacc.yy"
    { Lex->ident= null_lex_str; }
    break;

  case 2139:
#line 10257 "sql_yacc.yy"
    { Lex->ident= (yyvsp[-1].lex_str); }
    break;

  case 2140:
#line 10261 "sql_yacc.yy"
    { Lex->ha_read_mode = RFIRST; }
    break;

  case 2141:
#line 10262 "sql_yacc.yy"
    { Lex->ha_read_mode = RNEXT;  }
    break;

  case 2142:
#line 10266 "sql_yacc.yy"
    { Lex->ha_read_mode = RFIRST; }
    break;

  case 2143:
#line 10267 "sql_yacc.yy"
    { Lex->ha_read_mode = RNEXT;  }
    break;

  case 2144:
#line 10268 "sql_yacc.yy"
    { Lex->ha_read_mode = RPREV;  }
    break;

  case 2145:
#line 10269 "sql_yacc.yy"
    { Lex->ha_read_mode = RLAST;  }
    break;

  case 2146:
#line 10271 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->ha_read_mode = RKEY;
	  lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
	  if (!(lex->insert_list = new List_item))
	    YYABORT;
	}
    break;

  case 2147:
#line 10277 "sql_yacc.yy"
    { }
    break;

  case 2148:
#line 10281 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2149:
#line 10282 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2150:
#line 10283 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2151:
#line 10284 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2152:
#line 10285 "sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2153:
#line 10292 "sql_yacc.yy"
    {}
    break;

  case 2154:
#line 10297 "sql_yacc.yy"
    {
          LEX *lex= Lex;
	  lex->sql_command= SQLCOM_REVOKE;
          lex->type= 0;
        }
    break;

  case 2155:
#line 10304 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
	  lex->sql_command= SQLCOM_REVOKE;
          lex->type= TYPE_ENUM_FUNCTION;
          
        }
    break;

  case 2156:
#line 10317 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
	  lex->sql_command= SQLCOM_REVOKE;
          lex->type= TYPE_ENUM_PROCEDURE;
        }
    break;

  case 2157:
#line 10329 "sql_yacc.yy"
    {
	  Lex->sql_command = SQLCOM_REVOKE_ALL;
	}
    break;

  case 2158:
#line 10336 "sql_yacc.yy"
    {}
    break;

  case 2159:
#line 10342 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          lex->sql_command= SQLCOM_GRANT;
          lex->type= 0;
        }
    break;

  case 2160:
#line 10350 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
          lex->sql_command= SQLCOM_GRANT;
          lex->type= TYPE_ENUM_FUNCTION;
        }
    break;

  case 2161:
#line 10363 "sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->columns.elements)
          {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
          }
          lex->sql_command= SQLCOM_GRANT;
          lex->type= TYPE_ENUM_PROCEDURE;
        }
    break;

  case 2164:
#line 10380 "sql_yacc.yy"
    { }
    break;

  case 2165:
#line 10382 "sql_yacc.yy"
    { 
          Lex->all_privileges= 1; 
          Lex->grant= GLOBAL_ACLS;
        }
    break;

  case 2170:
#line 10398 "sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 2171:
#line 10398 "sql_yacc.yy"
    {}
    break;

  case 2172:
#line 10399 "sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 2173:
#line 10399 "sql_yacc.yy"
    {}
    break;

  case 2174:
#line 10400 "sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 2175:
#line 10400 "sql_yacc.yy"
    {}
    break;

  case 2176:
#line 10401 "sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 2177:
#line 10401 "sql_yacc.yy"
    {}
    break;

  case 2178:
#line 10402 "sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 2179:
#line 10403 "sql_yacc.yy"
    {}
    break;

  case 2180:
#line 10404 "sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 2181:
#line 10405 "sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 2182:
#line 10406 "sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 2183:
#line 10407 "sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 2184:
#line 10408 "sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 2185:
#line 10409 "sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 2186:
#line 10410 "sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 2187:
#line 10411 "sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 2188:
#line 10412 "sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 2189:
#line 10413 "sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2190:
#line 10414 "sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 2191:
#line 10415 "sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 2192:
#line 10416 "sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 2193:
#line 10417 "sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 2194:
#line 10418 "sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 2195:
#line 10419 "sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 2196:
#line 10420 "sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 2197:
#line 10421 "sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 2198:
#line 10422 "sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 2199:
#line 10423 "sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 2200:
#line 10424 "sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 2201:
#line 10425 "sql_yacc.yy"
    { Lex->grant |= EVENT_ACL;}
    break;

  case 2202:
#line 10426 "sql_yacc.yy"
    { Lex->grant |= TRIGGER_ACL; }
    break;

  case 2203:
#line 10431 "sql_yacc.yy"
    {}
    break;

  case 2204:
#line 10432 "sql_yacc.yy"
    {}
    break;

  case 2207:
#line 10442 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->x509_subject)
	  {
	    my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
	    YYABORT;
	  }
	  lex->x509_subject=(yyvsp[0].lex_str).str;
	}
    break;

  case 2208:
#line 10452 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->x509_issuer)
	  {
	    my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
	    YYABORT;
	  }
	  lex->x509_issuer=(yyvsp[0].lex_str).str;
	}
    break;

  case 2209:
#line 10462 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->ssl_cipher)
	  {
	    my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
	    YYABORT;
	  }
	  lex->ssl_cipher=(yyvsp[0].lex_str).str;
	}
    break;

  case 2210:
#line 10475 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->current_select->db= lex->thd->db;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant = DB_ACLS & ~GRANT_ACL;
	    else if (lex->columns.elements)
	    {
	      my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
	      YYABORT;
	    }
	  }
    break;

  case 2211:
#line 10488 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->current_select->db = (yyvsp[-2].lex_str).str;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant = DB_ACLS & ~GRANT_ACL;
	    else if (lex->columns.elements)
	    {
	      my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
	      YYABORT;
	    }
	  }
    break;

  case 2212:
#line 10501 "sql_yacc.yy"
    {
	    LEX *lex= Lex;
	    lex->current_select->db = NULL;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
	    else if (lex->columns.elements)
	    {
	      my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
	      YYABORT;
	    }
	  }
    break;

  case 2213:
#line 10514 "sql_yacc.yy"
    {
	    LEX *lex=Lex;
	    if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,0))
	      YYABORT;
	    if (lex->grant == GLOBAL_ACLS)
	      lex->grant =  TABLE_ACLS & ~GRANT_ACL;
	  }
    break;

  case 2214:
#line 10525 "sql_yacc.yy"
    { if (Lex->users_list.push_back((yyvsp[0].lex_user))) YYABORT;}
    break;

  case 2215:
#line 10527 "sql_yacc.yy"
    {
	    if (Lex->users_list.push_back((yyvsp[0].lex_user)))
	      YYABORT;
	  }
    break;

  case 2216:
#line 10535 "sql_yacc.yy"
    { if (Lex->users_list.push_back((yyvsp[0].lex_user))) YYABORT;}
    break;

  case 2217:
#line 10537 "sql_yacc.yy"
    {
	    if (Lex->users_list.push_back((yyvsp[0].lex_user)))
	      YYABORT;
	  }
    break;

  case 2218:
#line 10546 "sql_yacc.yy"
    {
	   (yyval.lex_user)=(yyvsp[-3].lex_user); (yyvsp[-3].lex_user)->password=(yyvsp[0].lex_str);
	   if ((yyvsp[0].lex_str).length)
	   {
             if (YYTHD->variables.old_passwords)
             {
               char *buff= 
                 (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH_323+1);
               if (buff)
                 make_scrambled_password_323(buff, (yyvsp[0].lex_str).str);
               (yyvsp[-3].lex_user)->password.str= buff;
               (yyvsp[-3].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
             }
             else
             {
               char *buff= 
                 (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH+1);
               if (buff)
                 make_scrambled_password(buff, (yyvsp[0].lex_str).str);
               (yyvsp[-3].lex_user)->password.str= buff;
               (yyvsp[-3].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH;
             }
	  }
	}
    break;

  case 2219:
#line 10571 "sql_yacc.yy"
    { (yyval.lex_user)= (yyvsp[-4].lex_user); (yyvsp[-4].lex_user)->password= (yyvsp[0].lex_str); }
    break;

  case 2220:
#line 10573 "sql_yacc.yy"
    { (yyval.lex_user)= (yyvsp[0].lex_user); (yyvsp[0].lex_user)->password= null_lex_str; }
    break;

  case 2221:
#line 10579 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->grant |= lex->which_columns;
	}
    break;

  case 2225:
#line 10591 "sql_yacc.yy"
    {
	  String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[0].lex_str).str,(yyvsp[0].lex_str).length,system_charset_info);
	  List_iterator <LEX_COLUMN> iter(Lex->columns);
	  class LEX_COLUMN *point;
	  LEX *lex=Lex;
	  while ((point=iter++))
	  {
	    if (!my_strcasecmp(system_charset_info,
                               point->column.ptr(), new_str->ptr()))
		break;
	  }
	  lex->grant_tot_col|= lex->which_columns;
	  if (point)
	    point->rights |= lex->which_columns;
	  else
	    lex->columns.push_back(new LEX_COLUMN (*new_str,lex->which_columns));
	}
    break;

  case 2227:
#line 10613 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2228:
#line 10617 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2229:
#line 10621 "sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2230:
#line 10625 "sql_yacc.yy"
    {
	    Lex->ssl_type=SSL_TYPE_NONE;
	  }
    break;

  case 2231:
#line 10631 "sql_yacc.yy"
    {}
    break;

  case 2233:
#line 10635 "sql_yacc.yy"
    {}
    break;

  case 2234:
#line 10636 "sql_yacc.yy"
    {}
    break;

  case 2235:
#line 10640 "sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2236:
#line 10642 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->mqh.questions=(yyvsp[0].ulong_num);
	  lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
	}
    break;

  case 2237:
#line 10648 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->mqh.updates=(yyvsp[0].ulong_num);
	  lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
	}
    break;

  case 2238:
#line 10654 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
	  lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
	}
    break;

  case 2239:
#line 10660 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          lex->mqh.user_conn= (yyvsp[0].ulong_num);
          lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
	}
    break;

  case 2240:
#line 10669 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          lex->sql_command = SQLCOM_BEGIN;
          lex->start_transaction_opt= 0;
        }
    break;

  case 2241:
#line 10674 "sql_yacc.yy"
    {}
    break;

  case 2242:
#line 10678 "sql_yacc.yy"
    {}
    break;

  case 2243:
#line 10679 "sql_yacc.yy"
    {}
    break;

  case 2244:
#line 10683 "sql_yacc.yy"
    { (yyval.num)= (YYTHD->variables.completion_type == 1); }
    break;

  case 2245:
#line 10684 "sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2246:
#line 10685 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2247:
#line 10689 "sql_yacc.yy"
    { (yyval.num)= (YYTHD->variables.completion_type == 2); }
    break;

  case 2248:
#line 10690 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2249:
#line 10691 "sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2250:
#line 10695 "sql_yacc.yy"
    {}
    break;

  case 2251:
#line 10696 "sql_yacc.yy"
    {}
    break;

  case 2252:
#line 10701 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_COMMIT;
	  lex->tx_chain= (yyvsp[-1].num); 
	  lex->tx_release= (yyvsp[0].num);
	}
    break;

  case 2253:
#line 10711 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_ROLLBACK;
	  lex->tx_chain= (yyvsp[-1].num); 
	  lex->tx_release= (yyvsp[0].num);
	}
    break;

  case 2254:
#line 10719 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
	  lex->ident= (yyvsp[0].lex_str);
	}
    break;

  case 2255:
#line 10728 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_SAVEPOINT;
	  lex->ident= (yyvsp[0].lex_str);
	}
    break;

  case 2256:
#line 10737 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
	  lex->ident= (yyvsp[0].lex_str);
	}
    break;

  case 2257:
#line 10750 "sql_yacc.yy"
    {}
    break;

  case 2259:
#line 10756 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  if (lex->exchange)
	  {
	    /* Only the last SELECT can have  INTO...... */
	    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "INTO");
	    YYABORT;
	  }
	  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
	  {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	  if (mysql_new_select(lex, 0))
	    YYABORT;
          mysql_init_select(lex);
	  lex->current_select->linkage=UNION_TYPE;
          if ((yyvsp[0].num)) /* UNION DISTINCT - remember position */
            lex->current_select->master_unit()->union_distinct=
                                                      lex->current_select;
	}
    break;

  case 2260:
#line 10778 "sql_yacc.yy"
    {
          /*
	    Remove from the name resolution context stack the context of the
            last select in the union.
	  */
          Lex->pop_context();
        }
    break;

  case 2261:
#line 10788 "sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 2262:
#line 10789 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2263:
#line 10790 "sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2264:
#line 10794 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    LEX *lex= thd->lex;
	    DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
	    SELECT_LEX *sel= lex->current_select;
	    SELECT_LEX_UNIT *unit= sel->master_unit();
	    SELECT_LEX *fake= unit->fake_select_lex;
	    if (fake)
	    {
	      unit->global_parameters= fake;
	      fake->no_table_names_allowed= 1;
	      lex->current_select= fake;
	    }
	    thd->where= "global ORDER clause";
	  }
    break;

  case 2265:
#line 10810 "sql_yacc.yy"
    {
	    THD *thd= YYTHD;
	    thd->lex->current_select->no_table_names_allowed= 0;
	    thd->where= "";
          }
    break;

  case 2268:
#line 10823 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2269:
#line 10824 "sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2270:
#line 10825 "sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2271:
#line 10831 "sql_yacc.yy"
    {
	  (yyval.item)= (yyvsp[-1].item);
	}
    break;

  case 2272:
#line 10837 "sql_yacc.yy"
    {
	  (yyval.item)= new Item_singlerow_subselect(Lex->current_select->
					   master_unit()->first_select());
	}
    break;

  case 2273:
#line 10845 "sql_yacc.yy"
    {
	  (yyval.item)= (yyvsp[-1].item);
	}
    break;

  case 2274:
#line 10851 "sql_yacc.yy"
    {
	  (yyval.item)= new Item_exists_subselect(Lex->current_select->master_unit()->
					first_select());
	}
    break;

  case 2275:
#line 10859 "sql_yacc.yy"
    {
    (yyval.select_lex)= (yyvsp[-1].select_lex);
  }
    break;

  case 2276:
#line 10865 "sql_yacc.yy"
    {
    (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
  }
    break;

  case 2277:
#line 10871 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          if (lex->sql_command == (int)SQLCOM_HA_READ ||
              lex->sql_command == (int)SQLCOM_KILL)
	  {
            yyerror(ER(ER_SYNTAX_ERROR));
	    YYABORT;
	  }
	  if (mysql_new_select(Lex, 1))
	    YYABORT;
	}
    break;

  case 2278:
#line 10885 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
          lex->pop_context();
	  lex->current_select = lex->current_select->return_after_parsing();
          lex->nest_level--;
	}
    break;

  case 2279:
#line 10900 "sql_yacc.yy"
    {}
    break;

  case 2280:
#line 10902 "sql_yacc.yy"
    {}
    break;

  case 2281:
#line 10907 "sql_yacc.yy"
    {}
    break;

  case 2282:
#line 10909 "sql_yacc.yy"
    {}
    break;

  case 2283:
#line 10911 "sql_yacc.yy"
    {}
    break;

  case 2284:
#line 10922 "sql_yacc.yy"
    {
          /*
            We have to distinguish missing DEFINER-clause from case when
            CURRENT_USER specified as definer explicitly in order to properly
            handle CREATE TRIGGER statements which come to replication thread
            from older master servers (i.e. to create non-suid trigger in this
            case).
           */
          YYTHD->lex->definer= 0;
	}
    break;

  case 2285:
#line 10933 "sql_yacc.yy"
    {
          if (! (YYTHD->lex->definer= create_default_definer(YYTHD)))
            YYABORT;
	}
    break;

  case 2286:
#line 10938 "sql_yacc.yy"
    {
          if (!(YYTHD->lex->definer= create_definer(YYTHD, &(yyvsp[-2].lex_str), &(yyvsp[0].lex_str))))
            YYABORT;
	}
    break;

  case 2287:
#line 10952 "sql_yacc.yy"
    {}
    break;

  case 2288:
#line 10954 "sql_yacc.yy"
    {}
    break;

  case 2289:
#line 10956 "sql_yacc.yy"
    {}
    break;

  case 2290:
#line 10961 "sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 2291:
#line 10966 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2292:
#line 10968 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2293:
#line 10970 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TMPTABLE; }
    break;

  case 2294:
#line 10975 "sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2295:
#line 10977 "sql_yacc.yy"
    {}
    break;

  case 2296:
#line 10982 "sql_yacc.yy"
    { Lex->create_view_suid= TRUE; }
    break;

  case 2297:
#line 10984 "sql_yacc.yy"
    { Lex->create_view_suid= TRUE; }
    break;

  case 2298:
#line 10986 "sql_yacc.yy"
    { Lex->create_view_suid= FALSE; }
    break;

  case 2299:
#line 10991 "sql_yacc.yy"
    {
	  THD *thd= YYTHD;
	  LEX *lex= thd->lex;
	  lex->sql_command= SQLCOM_CREATE_VIEW;
	  /* first table in list is target VIEW name */
	  if (!lex->select_lex.add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
	    YYABORT;
	}
    break;

  case 2300:
#line 11000 "sql_yacc.yy"
    {}
    break;

  case 2301:
#line 11005 "sql_yacc.yy"
    {}
    break;

  case 2303:
#line 11011 "sql_yacc.yy"
    {
	    Lex->view_list.push_back((LEX_STRING*)
				     sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING)));
	  }
    break;

  case 2304:
#line 11016 "sql_yacc.yy"
    {
	    Lex->view_list.push_back((LEX_STRING*)
				     sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING)));
	  }
    break;

  case 2305:
#line 11024 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          char *stmt_beg= (lex->sphead ?
                           (char *)lex->sphead->m_tmp_query :
                           thd->query);
	  lex->create_view_select_start= (yyvsp[-1].simple_string) - stmt_beg;
	}
    break;

  case 2306:
#line 11033 "sql_yacc.yy"
    {
          THD *thd=YYTHD;
          LEX *lex= thd->lex;
          char *stmt_beg= (lex->sphead ?
                           (char *)lex->sphead->m_tmp_query :
                           thd->query);
	  lex->create_view_select_start= (yyvsp[-3].simple_string) - stmt_beg;
	}
    break;

  case 2307:
#line 11045 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 2308:
#line 11047 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2309:
#line 11049 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2310:
#line 11051 "sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 2311:
#line 11063 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
	    YYABORT;
	  }

	  if (!(sp= new sp_head()))
	    YYABORT;
	  sp->reset_thd_mem_root(YYTHD);
	  sp->init(lex);

	  lex->stmt_definition_begin= (yyvsp[-10].simple_string);
          lex->ident.str= (yyvsp[-5].simple_string);
          lex->ident.length= (yyvsp[-2].simple_string) - (yyvsp[-5].simple_string);

	  sp->m_type= TYPE_ENUM_TRIGGER;
	  lex->sphead= sp;
	  lex->spname= (yyvsp[-9].spname);
	  /*
	    We have to turn of CLIENT_MULTI_QUERIES while parsing a
	    stored procedure, otherwise yylex will chop it into pieces
	    at each ';'.
	  */
	  (yyval.ulong_num)= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
	  YYTHD->client_capabilities &= ~CLIENT_MULTI_QUERIES;

	  bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
	  lex->sphead->m_chistics= &lex->sp_chistics;
	  lex->sphead->m_body_begin= lex->ptr;
          while (my_isspace(system_charset_info, lex->sphead->m_body_begin[0]))
            ++lex->sphead->m_body_begin;
	}
    break;

  case 2312:
#line 11100 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp= lex->sphead;

	  lex->sql_command= SQLCOM_CREATE_TRIGGER;
	  sp->init_strings(YYTHD, lex, (yyvsp[-11].spname));
	  /* Restore flag if it was cleared above */

	  YYTHD->client_capabilities |= (yyvsp[-1].ulong_num);
	  sp->restore_thd_mem_root(YYTHD);

	  if (sp->is_not_allowed_in_function("trigger"))
	      YYABORT;

	  /*
	    We have to do it after parsing trigger body, because some of
	    sp_proc_stmt alternatives are not saving/restoring LEX, so
	    lex->query_tables can be wiped out.
	  */
	  if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[-6].table),
	                                         (LEX_STRING*) 0,
	                                         TL_OPTION_UPDATING,
                                                 TL_IGNORE))
	    YYABORT;
	}
    break;

  case 2313:
#line 11135 "sql_yacc.yy"
    {
	  LEX *lex=Lex;
	  lex->udf.type= (yyvsp[-3].udf_type);
	  lex->stmt_definition_begin= (yyvsp[-2].simple_string);
	  lex->spname= (yyvsp[0].spname);
	}
    break;

  case 2314:
#line 11142 "sql_yacc.yy"
    {}
    break;

  case 2315:
#line 11144 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp;

	  if (lex->sphead)
	  {
	    my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
	    YYABORT;
	  }
	  
	  lex->stmt_definition_begin= (yyvsp[-1].simple_string);
	  
	  /* Order is important here: new - reset - init */
	  sp= new sp_head();
	  sp->reset_thd_mem_root(YYTHD);
	  sp->init(lex);

	  sp->m_type= TYPE_ENUM_PROCEDURE;
	  lex->sphead= sp;
	  /*
	   * We have to turn of CLIENT_MULTI_QUERIES while parsing a
	   * stored procedure, otherwise yylex will chop it into pieces
	   * at each ';'.
	   */
          (yyval.ulong_num)= YYTHD->client_capabilities & CLIENT_MULTI_QUERIES;
	  YYTHD->client_capabilities &= (~CLIENT_MULTI_QUERIES);
	}
    break;

  case 2316:
#line 11172 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  lex->sphead->m_param_begin= lex->tok_start+1;
	}
    break;

  case 2317:
#line 11179 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  lex->sphead->m_param_end= lex->tok_start;
	  bzero((char *)&lex->sp_chistics, sizeof(st_sp_chistics));
	}
    break;

  case 2318:
#line 11186 "sql_yacc.yy"
    {
	  LEX *lex= Lex;

	  lex->sphead->m_chistics= &lex->sp_chistics;
	  lex->sphead->m_body_begin= lex->tok_start;
	}
    break;

  case 2319:
#line 11193 "sql_yacc.yy"
    {
	  LEX *lex= Lex;
	  sp_head *sp= lex->sphead;

	  if (sp->check_backpatch(YYTHD))
	    YYABORT;
	  sp->init_strings(YYTHD, lex, (yyvsp[-9].spname));
	  lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          /*
            Restore flag if it was cleared above
            Be careful with counting. the block where we save the value
            is $4.
          */
          YYTHD->client_capabilities |= (yyvsp[-8].ulong_num);
	  sp->restore_thd_mem_root(YYTHD);
	}
    break;

  case 2320:
#line 11214 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_START;
      }
    break;

  case 2321:
#line 11218 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_END;
      }
    break;

  case 2322:
#line 11222 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_PREPARE;
      }
    break;

  case 2323:
#line 11226 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_COMMIT;
      }
    break;

  case 2324:
#line 11230 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_ROLLBACK;
      }
    break;

  case 2325:
#line 11234 "sql_yacc.yy"
    {
        Lex->sql_command = SQLCOM_XA_RECOVER;
      }
    break;

  case 2326:
#line 11240 "sql_yacc.yy"
    {
       YYERROR_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
       if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
         YYABORT;
       Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
     }
    break;

  case 2327:
#line 11247 "sql_yacc.yy"
    {
       YYERROR_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
       if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
         YYABORT;
       Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
     }
    break;

  case 2328:
#line 11254 "sql_yacc.yy"
    {
       YYERROR_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE && (yyvsp[-2].string)->length() <= MAXBQUALSIZE);
       if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
         YYABORT;
       Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
     }
    break;

  case 2329:
#line 11262 "sql_yacc.yy"
    {}
    break;

  case 2330:
#line 11263 "sql_yacc.yy"
    {}
    break;

  case 2331:
#line 11267 "sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2332:
#line 11268 "sql_yacc.yy"
    { Lex->xa_opt=XA_JOIN;        }
    break;

  case 2333:
#line 11269 "sql_yacc.yy"
    { Lex->xa_opt=XA_RESUME;      }
    break;

  case 2334:
#line 11273 "sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2335:
#line 11274 "sql_yacc.yy"
    { Lex->xa_opt=XA_ONE_PHASE;   }
    break;

  case 2336:
#line 11278 "sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2337:
#line 11279 "sql_yacc.yy"
    { Lex->xa_opt=XA_SUSPEND;     }
    break;

  case 2339:
#line 11284 "sql_yacc.yy"
    { }
    break;

  case 2340:
#line 11285 "sql_yacc.yy"
    { Lex->xa_opt=XA_FOR_MIGRATE; }
    break;

  case 2341:
#line 11290 "sql_yacc.yy"
    {
    LEX *lex= Lex;
    lex->sql_command= SQLCOM_INSTALL_PLUGIN;
    lex->comment= (yyvsp[-2].lex_str);
    lex->ident= (yyvsp[0].lex_str);
  }
    break;

  case 2342:
#line 11299 "sql_yacc.yy"
    {
    LEX *lex= Lex;
    lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
    lex->comment= (yyvsp[0].lex_str);
  }
    break;


      default: break;
    }

/* Line 1126 of yacc.c.  */
#line 30712 "y.tab.c"

  yyvsp -= yylen;
  yyssp -= yylen;


  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;


  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if YYERROR_VERBOSE
      yyn = yypact[yystate];

      if (YYPACT_NINF < yyn && yyn < YYLAST)
	{
	  int yytype = YYTRANSLATE (yychar);
	  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
	  YYSIZE_T yysize = yysize0;
	  YYSIZE_T yysize1;
	  int yysize_overflow = 0;
	  char *yymsg = 0;
#	  define YYERROR_VERBOSE_ARGS_MAXIMUM 5
	  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
	  int yyx;

#if 0
	  /* This is so xgettext sees the translatable formats that are
	     constructed on the fly.  */
	  YY_("syntax error, unexpected %s");
	  YY_("syntax error, unexpected %s, expecting %s");
	  YY_("syntax error, unexpected %s, expecting %s or %s");
	  YY_("syntax error, unexpected %s, expecting %s or %s or %s");
	  YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
#endif
	  char *yyfmt;
	  char const *yyf;
	  static char const yyunexpected[] = "syntax error, unexpected %s";
	  static char const yyexpecting[] = ", expecting %s";
	  static char const yyor[] = " or %s";
	  char yyformat[sizeof yyunexpected
			+ sizeof yyexpecting - 1
			+ ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
			   * (sizeof yyor - 1))];
	  char const *yyprefix = yyexpecting;

	  /* Start YYX at -YYN if negative to avoid negative indexes in
	     YYCHECK.  */
	  int yyxbegin = yyn < 0 ? -yyn : 0;

	  /* Stay within bounds of both yycheck and yytname.  */
	  int yychecklim = YYLAST - yyn;
	  int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
	  int yycount = 1;

	  yyarg[0] = yytname[yytype];
	  yyfmt = yystpcpy (yyformat, yyunexpected);

	  for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	    if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	      {
		if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
		  {
		    yycount = 1;
		    yysize = yysize0;
		    yyformat[sizeof yyunexpected - 1] = '\0';
		    break;
		  }
		yyarg[yycount++] = yytname[yyx];
		yysize1 = yysize + yytnamerr (0, yytname[yyx]);
		yysize_overflow |= yysize1 < yysize;
		yysize = yysize1;
		yyfmt = yystpcpy (yyfmt, yyprefix);
		yyprefix = yyor;
	      }

	  yyf = YY_(yyformat);
	  yysize1 = yysize + yystrlen (yyf);
	  yysize_overflow |= yysize1 < yysize;
	  yysize = yysize1;

	  if (!yysize_overflow && yysize <= YYSTACK_ALLOC_MAXIMUM)
	    yymsg = (char *) YYSTACK_ALLOC (yysize);
	  if (yymsg)
	    {
	      /* Avoid sprintf, as that infringes on the user's name space.
		 Don't have undefined behavior even if the translation
		 produced a string with the wrong number of "%s"s.  */
	      char *yyp = yymsg;
	      int yyi = 0;
	      while ((*yyp = *yyf))
		{
		  if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		    {
		      yyp += yytnamerr (yyp, yyarg[yyi++]);
		      yyf += 2;
		    }
		  else
		    {
		      yyp++;
		      yyf++;
		    }
		}
	      yyerror (yymsg);
	      YYSTACK_FREE (yymsg);
	    }
	  else
	    {
	      yyerror (YY_("syntax error"));
	      goto yyexhaustedlab;
	    }
	}
      else
#endif /* YYERROR_VERBOSE */
	yyerror (YY_("syntax error"));
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
        {
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
        }
      else
	{
	  yydestruct ("Error: discarding", yytoken, &yylval);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (0)
     goto yyerrorlab;

yyvsp -= yylen;
  yyssp -= yylen;
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;


      yydestruct ("Error: popping", yystos[yystate], yyvsp);
      YYPOPSTACK;
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;


  /* Shift the error token. */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp);
      YYPOPSTACK;
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
  return yyresult;
}



